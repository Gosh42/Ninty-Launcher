<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_launcher_updating</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Arquivo para ser baixado
image_speed = 0.15;
if!(directory_exists_fmns(global.assets_dir+"thumbnails"))
    directory_create(global.assets_dir+"thumbnails\");

//Primeiro, baixar log de títulos mais recente... (Ativa automaticamente o evento async HTTP)
request = http_get_file("https://raw.githubusercontent.com/MarioSilvaGH/Ninty-Launcher/master/assets/thumbnails/_titles.ini",game_save_id+"\downloads\updated_titles.ini");

//Lista de thumbnails
thumb_dlist = ds_list_create();
thumb_request = -1;
thumb_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Baixar thumbnails (em lista)

//Deletar póssivel thumbnail existente na pasta temporaria
file_delete_fmns(game_save_id+"\downloads\updated_thumbnail.png");

//Se ainda tiver algo para baixar...
if(thumb_index &lt; ds_list_size(thumb_dlist)){
 
    //Começar downloads
    thumb_request = http_get_file("https://github.com/MarioSilvaGH/Ninty-Launcher/raw/master/assets/thumbnails/"+ds_list_find_value(thumb_dlist,thumb_index),game_save_id+"\downloads\updated_thumbnail.png");
};
else{

    //SFX
    audio_play_sfx(snd_updated);
    
    //Deletar pasta de downloads temporario
    directory_destroy_fmns(game_save_id+"\downloads");

    //Finalizar
    instance_destroy();
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Fila de downloads

//LOG DE TÍTULOS
if(thumb_request == -1){

    var log_status;
    
    //Procurar log na fila...
    if(ds_map_find_value(async_load,"id") == request){
    
        //Progresso do download
        log_status = ds_map_find_value(async_load,"status");
        
        //Se download finalizar...
        if(log_status == 0){
        
            //Encontrar arquivo
            log_file = ds_map_find_value(async_load,"result");
            
            //Buscar total de thumbnails nesse novo log
            ini_open(log_file);
            log_total = real(ini_read_string("NINTY_TITLE_MASTER","total","0"));
            ini_close();
            
            //Deeletar log antigo
            file_delete_fmns(global.assets_dir+"thumbnails\_titles.ini");

            //Prosseguir para checagem thumbnails
            event_user(0);
        };
    };
};
//THUMBNAILS
else{

    var thumb_status;
    
    //Procurar thumbnail na fila...
    if(ds_map_find_value(async_load,"id") == thumb_request){
    
        //Progresso do download
        thumb_status = ds_map_find_value(async_load,"status");
        
        //Se download finalizar...
        if(thumb_status == 0){

            //Encontrar arquivo e copiar arquivo para pasta local
            file_copy_fmns(ds_map_find_value(async_load,"result"),global.assets_dir+"thumbnails\"+ds_list_find_value(thumb_dlist,thumb_index));
            
            //Próximo para baixar
            thumb_index++;
            
            //Prosseguir para baixar próximo thumbnail (se existir)
            alarm[0] = 5;
        };
    };
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Checar se há alguma thumbnail para baixar

//Pesquisar dentro do log
var i;
for(i=1; i&lt;log_total; i+=1){

    var _thumb;
    
    //Checar chave
    ini_open(log_file);
    _thumb = ini_read_string("NINTY_TITLE_"+string(i),"thumb","");
    ini_close();
    
    //Se thumbnail não existir nos arquivos locais...
    if!(file_exists_fmns(global.assets_dir+"thumbnails\"+_thumb)){
    
        //Colocar thumbnail na fila para baixar
        ds_list_add(thumb_dlist,_thumb);
    };
};

//Mover log atualizadfo para pasta local
file_copy_fmns(game_save_id+"\downloads\updated_titles.ini",global.assets_dir+"thumbnails\_titles.ini");

//Se tiver algo pra baixar... Começar loop de checagem
if(ds_list_size(thumb_dlist) &gt; 0)
    alarm[0] = 5;
else{

    //SFX
    audio_play_sfx(snd_updated);
    
    //Deletar pasta de downloads temporario
    directory_destroy_fmns(game_save_id+"\downloads");
    
    //Finalizar
    instance_destroy();
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animação
draw_self();

//Progresso
draw_set_font(fnt_small);
draw_set_halign(fa_right);
if(obj_launcher.theme == 0)
    draw_set_color(c_black);
else
    draw_set_color(c_white);
if(thumb_index &gt; 0){

    draw_text_shadow(x-10,y+7,string(thumb_index+1)+"/"+string(ds_list_size(thumb_dlist)+1));
    draw_text(x-10,y+7,string(thumb_index+1)+"/"+string(ds_list_size(thumb_dlist)+1));
};
draw_set_color(c_white);
draw_set_font(fnt_default);
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
