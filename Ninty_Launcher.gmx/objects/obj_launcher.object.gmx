<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///NNITY LAUNCHER
image_speed = 0;
is_playing = 0;
nav_time = 60;
offset = 98;
offset_v = 32;
info_popup = 0;
boot_res = "/max ";

//Animações
wp_x = 0;
wp_y = 0;

//Mover
move = 0;
move_origin = -1;
move_temp_title = "";
move_temp_path = "";
move_temp_animframes = 1;
move_temp_animspeed = 0;
move_temp_playtime[0] = "0";
move_temp_playtime[1] = "0";
move_temp_thumbnail = noone;

//Tempo
time_start = 0;

//Controle dos Pais
parental_offset = 0;
parental_unlock = 0;
parental_fade = 3;
parental_fadeicons = 1;

//Dialogo
dialog = 0;
dialog_description = "";
dialog_return = "";
dialog_inputb = " ";
dialog_filterleft = 1280;
dialog_filterright = 1280;

//Cor do Seletor
col_numb = 0;
col_mod = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mover arquivos

//Mover destino para origem...
if(file_exists_fmns(game_save_id+"collection\game_"+string(select_index)+".ini")){

    //Mover...
    games_title[move_origin] = games_title[select_index];
    games_path[move_origin] = games_path[select_index];
    games_animframes[move_origin] = games_animframes[select_index];
    games_animspeed[move_origin] = games_animspeed[select_index];
    games_playtime[move_origin,0] = games_playtime[select_index,0];
    games_playtime[move_origin,1] = games_playtime[select_index,1];
    games_thumb[move_origin] = sprite_duplicate(games_thumb[select_index]);
    
    //Deletar sprite de destino
    sprite_delete(games_thumb[select_index]);
    
    //Renomear
    file_rename_fmns(game_save_id+"collection\game_"+string(select_index)+".png",game_save_id+"collection\game_"+string(move_origin)+".png");
    file_rename_fmns(game_save_id+"collection\game_"+string(select_index)+".ini",game_save_id+"collection\game_"+string(move_origin)+".ini");

    //Ir para próximo arquivo...
    alarm[11] = 5;
};
//Mover origem (que estava em TMP) para destino...
else{

    //Carregar novos...
    games_title[select_index] = move_temp_title;
    games_path[select_index] = move_temp_path;
    games_animframes[select_index] = move_temp_animframes;
    games_animspeed[select_index] = move_temp_animspeed;
    games_playtime[select_index,0] = move_temp_playtime[0];
    games_playtime[select_index,1] = move_temp_playtime[1];
    sprite_delete(games_thumb[select_index]);
    games_thumb[select_index] = sprite_duplicate(move_temp_thumbnail);
    
    //Corrigir nome
    ini_open(game_save_id+"collection\game_"+string(move_origin)+".ini")
    games_title[move_origin] = ini_read_string("NINTY_ENTRY","title","???");
    ini_close();
    
    //Deletar sprite de origem
    sprite_delete(move_temp_thumbnail);
    
    //Renomear
    file_rename_fmns(game_save_id+"collection\game_TMP.png",game_save_id+"collection\game_"+string(select_index)+".png");
    file_rename_fmns(game_save_id+"collection\game_TMP.ini",game_save_id+"collection\game_"+string(select_index)+".ini");

    //Limpar
    cleanmem();

    //SFX
    audio_play_sfx(snd_move_set);
    
    //Finalizar
    move = 0;
    move_origin = -1;
    alarm[11] = -1;
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Organizar arquivos
if(move_rest &lt; games_total-1){

    //Mover...
    games_title[move_rest] = games_title[move_rest+1];
    games_path[move_rest] = games_path[move_rest+1];
    games_animframes[move_rest] = games_animframes[move_rest+1];
    games_animspeed[move_rest] = games_animspeed[move_rest+1];
    games_playtime[move_rest,0] = games_playtime[move_rest+1,0];
    games_playtime[move_rest,1] = games_playtime[move_rest+1,1];
    sprite_delete(games_thumb[move_rest]);
    games_thumb[move_rest] = sprite_duplicate(games_thumb[move_rest+1]);
    file_rename_fmns(game_save_id+"collection\game_"+string(move_rest+1)+".png",game_save_id+"collection\game_"+string(move_rest)+".png");
    file_rename_fmns(game_save_id+"collection\game_"+string(move_rest+1)+".ini",game_save_id+"collection\game_"+string(move_rest)+".ini");

    //Ir para próximo arquivo...
    move_rest++;
    alarm[10] = 5;
};
else{

    //Decrementar
    audio_stop_sound(snd_loading);
    audio_play_sfx(snd_alert);
    games_total--;

    //Salvar total de jogos
    ini_open(game_save_id+"collection\_total.ini");
    ini_write_string("NINTY_ENTRY","total",string(games_total));
    ini_close();

    //Limpar
    cleanmem();

    //Atualizar RPC
    event_user(0);
    
    alarm[10] = -1;
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alterar miniatura do Jogo

//Buscar caminho...
var mod_file = get_open_filename("Executable/Link|*.exe;*.url","");
if(mod_file != ""){

    //SFX
    audio_play_sfx(snd_addgame_step2);
    
    //Buscar miniatura...
    var mod_thumb = get_open_filename("Thumbnail (256x256)|*.png;*.jpg","");
    if(mod_thumb != ""){

        //Deletar miniatura antiga
        sprite_delete(games_thumb[select_index]);

        //Deleetar já existente na pasta
        file_delete_fmns(game_save_id+"collection\game_"+string(select_index)+".png");
            
        //Miniatura com animação
        games_animframes[select_index] = get_anim_frames(mod_thumb);
        games_animspeed[select_index] = get_anim_speed(mod_thumb);
        games_thumb[select_index] = sprite_add(mod_thumb,get_anim_frames(mod_thumb),0,1,0,0);
        
        //Copiar nova para pasta
        file_copy_fmns(mod_thumb,game_save_id+"collection\game_"+string(select_index)+".png");
        
        //Voltar animador ao começo
        anim_games[select_index] = 0;
    };
    
    //SFX
    audio_play_sfx(snd_addgame_step3);
        
    //Alterar jogo
    games_path[select_index] = mod_file;
                
    //Salvar no diretório
    ini_open(game_save_id+"collection\game_"+string(select_index)+".ini");
    ini_write_string("NINTY_ENTRY","path",string(mod_file));
    ini_write_string("NINTY_ENTRY","animframes",string(games_animframes[select_index]));
    ini_write_string("NINTY_ENTRY","animspeed",string(games_animspeed[select_index]));
    ini_close();
    
    //Limpar
    cleanmem();
                
    //Atualizar RPC
    event_user(0);
    
    //Voltar fullscreen... (Se tiver sido definido antes)    
    window_set_fullscreen(fullscreen);
};
//Voltar fullscreen... (Se tiver sido definido antes)    
else{

    audio_play_sfx(snd_alert);
    window_set_fullscreen(fullscreen);
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Wallpaper
var wpp = get_open_filename(".PNG/.JPG (1280x720)|*.png;*.jpg","");

//Definir sem animação previamente
wallpaper_animframes = 0;
    
//Deletar wallpaper do launcher
if(sprite_exists(wallpaper))
    sprite_delete(wallpaper);
 
//Deletar arquivo antigo
file_delete_fmns(game_save_id+"wallpaper.png");
file_delete_fmns(game_save_id+"wallpaper.ini");
    
//Copiar
file_copy_fmns(string_copy(wpp,1,string_length(wpp)-4)+".ini",game_save_id+"wallpaper.ini");

//Carregar configuração do Wallpaper
ini_open(game_save_id+"wallpaper.ini");
wallpaper_tiled = real(ini_read_string("NINTY_WALLPAPER","tiled","1"));
wallpaper_stretched = real(ini_read_string("NINTY_WALLPAPER","stretched","0"));
wallpaper_smooth = real(ini_read_string("NINTY_WALLPAPER","smooth","1"));
wallpaper_h_offset = real(ini_read_string("NINTY_WALLPAPER","horizontal_offset","0"));
wallpaper_v_offset = real(ini_read_string("NINTY_WALLPAPER","vertical_offset","0"));
wallpaper_h_scrolling = real(ini_read_string("NINTY_WALLPAPER","horizontal_scrolling","0"));
wallpaper_v_scrolling = real(ini_read_string("NINTY_WALLPAPER","vertical_scrolling","0"));
wallpaper_animframes = real(ini_read_string("NINTY_WALLPAPER","animframes","1"));
wallpaper_animspeed = real(ini_read_string("NINTY_WALLPAPER","animspeed","0"));
ini_close();
      
if(wpp != ""){

    //Trocar
    wallpaper = sprite_add(wpp,wallpaper_animframes,0,wallpaper_smooth,0,0);
    file_copy_fmns(wpp,game_save_id+"wallpaper.png");
    
    //SFX
    audio_play_sfx(snd_addgame_step3);
};
//SFX
else
    audio_play_sfx(snd_alert);

//Limpar
cleanmem();
    
//Voltar fullscreen... (Se tiver sido definido antes)    
window_set_fullscreen(fullscreen);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Adicionar Jogo

//Buscar caminho...
var file = get_open_filename("Game (.exe, .url, .swf)|*.exe;*.url;*.swf","");
if(file != ""){

    var thumb = find_predefined_game(file,games_total);
    
    //Checar se existe miniatura predefinida...
    if(thumb == ""){

        //SFX
        audio_play_sfx(snd_addgame_step1);
        
        //Buscar miniatura...
        thumb = get_open_filename("Thumbnail (256x256)|*.png;*.jpg","");
        if(thumb != ""){
        
            //Miniatura com animação
            games_animframes[games_total] = get_anim_frames(thumb);
            games_animspeed[games_total] = get_anim_speed(thumb);
            games_thumb[games_total] = sprite_add(thumb,get_anim_frames(thumb),0,1,0,0);
            
            //Copiar para pasta
            file_copy_fmns(thumb,game_save_id+"collection\game_"+string(games_total)+".png");
        };
        //Indefinido
        else{
        
            //Miniatura sem animação
            games_animframes[games_total] = 1;
            games_animspeed[games_total] = 0;
            games_thumb[games_total] = sprite_add(assets_dir+"thumbnails\_default.tbn",0,0,0,0,0);
        };
        
        //SFX
        audio_play_sfx(snd_addgame_step2);
            
        //Adicionar base de nome do jogo
        games_title[games_total] = string_copy(filename_name(file),0,32);
        
        //Alterar nome
        dialog_description = "Set Game Title:"
        keyboard_string = string_copy(filename_name(file),0,32);
        dialog_return = string_copy(filename_name(file),0,32);
        dialog = 1;
        alarm[6] = 4;
    };
    else{
    
        //Miniatura com animação
        games_animframes[games_total] = get_anim_frames(thumb);
        games_animspeed[games_total] = get_anim_speed(thumb);
        games_thumb[games_total] = sprite_add(thumb,get_anim_frames(thumb),0,1,0,0);
        
        //Copiar para pasta
        file_copy_fmns(thumb,game_save_id+"collection\game_"+string(games_total)+".png");
        
        //SFX
        audio_play_sfx(snd_addgame_step3);
    };
    
    //Adicionar animador
    anim_games[games_total] = 0;
    
    //Adicionar informações restantes do jogo
    games_path[games_total] = file;
    games_playtime[games_total,0] = 0;
    games_playtime[games_total,1] = 0;
                    
    //Salvar no diretório
    ini_open(game_save_id+"collection\game_"+string(games_total)+".ini");
    ini_write_string("NINTY_ENTRY","title",games_title[games_total]);
    ini_write_string("NINTY_ENTRY","path",string(file));
    ini_write_string("NINTY_ENTRY","animframes",string(games_animframes[games_total]));
    ini_write_string("NINTY_ENTRY","animspeed",string(games_animspeed[games_total]));
    ini_write_string("NINTY_ENTRY","0",base64_encode("0"));
    ini_write_string("NINTY_ENTRY","1",base64_encode("0"));
    ini_close();
            
    //Incrementar total
    ini_open(game_save_id+"collection\_total.ini");
    ini_write_string("NINTY_ENTRY","total",string(games_total+1));
    ini_close();
    games_total++;
    select_index = games_total-1;
  
    //Limpar
    cleanmem();
    
    //Atualizar RPC
    event_user(0);
    
    //Voltar fullscreen... (Se tiver sido definido antes)    
    window_set_fullscreen(fullscreen);
};
//Voltar fullscreen... (Se tiver sido definido antes)    
else{

    audio_play_sfx(snd_alert);
    window_set_fullscreen(fullscreen);
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alterar nome do jogo
if(dialog == 1)
    alarm[6] = 1;
else{
   
    //Adicionar jogo
    games_title[select_index] = dialog_return;

    //Salvara alteração
    ini_open(game_save_id+"collection\game_"+string(select_index)+".ini");
    ini_write_string("NINTY_ENTRY","title",string(dialog_return));
    ini_close();
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Efeito do dialogo
if(dialog == 1){

    if(dialog_inputb == " ")
        dialog_inputb = "_";
    else
        dialog_inputb = " ";
    alarm[5] = 15;
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Definir fullscreen

//Fullscreen
window_set_fullscreen(fullscreen);

if(fullscreen == 0){

    //Recuperar posição/tamanho
    window_set_position(temp_x,temp_y);
    window_set_size(temp_w,temp_h);
    
    //Centralizar
    //alarm[3] = 2;
};
else
    window_set_position(-4000,-4000);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Centralizar janela
window_center();

//Lembrar posição/tamanho
temp_x = window_get_x();
temp_y = window_get_y();
temp_w = window_get_width();
temp_h = window_get_height();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Retomar launcher
is_playing = 0;
draw_enable_drawevent(1);

///Salvar tempo jogando
games_playtime[select_index,0] = string(round(date_hour_span(time_start,date_current_datetime()))+real(games_playtime[select_index,0]));
games_playtime[select_index,1] = string(round(date_minute_span(time_start,date_current_datetime()))+real(games_playtime[select_index,1]));
    
//Salvar no arquivo
ini_open(game_save_id+"collection\game_"+string(select_index)+".ini");
ini_write_string("NINTY_ENTRY","0",base64_encode(games_playtime[select_index,0]));
ini_write_string("NINTY_ENTRY","1",base64_encode(games_playtime[select_index,1]));
ini_close();

//Reiniciar animações
wp_x = 0;
wp_y = 0;

//SFX
audio_play_sfx(snd_launcher_open);

//Recuperar posição/tamanho
alarm[4] = 2;

//Deletar .BAT
file_delete_fmns(game_save_id+"gameboot.bat");

//Re-carregar assets (Lista, Thumbnails e Wallpaper)
event_user(1);

//Atualizar RPC
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Iniciar jogo

//Descarregar assets (RAM)
event_user(2);

//Executar .BAT (E aguardar execução ser finalizada...)
ExecuteShell('"'+game_save_id+'gameboot.bat"',1,1);

//Após jogo finalizado...
alarm[2] = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Preparar para iniciar jogo
is_playing = 1;
draw_enable_drawevent(0);

//Lembrar posição/tamanho
if(fullscreen == 0){

    temp_x = window_get_x();
    temp_y = window_get_y();
    temp_w = window_get_width();
    temp_h = window_get_height();
};

//Definir posição/tamanho
window_set_position(-4000,-4000);
window_set_size(16,16);

//Começar registro de tempo
time_start = date_current_datetime();

//Discord RPC
discord_update_presence("🎮 | "+string(games_title[select_index]),"⭐ | "+string(games_total)+" Games in Library.","default","");

//Criar .BAT direcionado ao local do jogo (evita falhas)
var test = file_text_open_write(game_save_id+"gameboot.bat")
file_text_write_string(test,filename_drive(games_path[select_index]));
file_text_writeln(test);
file_text_write_string(test,"cd "+filename_path(games_path[select_index])+"");
file_text_writeln(test);
file_text_write_string(test,'start "Ninty_Game_Boot" '+boot_res+'/wait '+'"'+filename_name(games_path[select_index])+'"');
file_text_writeln(test);
file_text_close(test);

//Prosseguir para inicialização
alarm[1] = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controladores
if(is_playing == 1)
||(alarm[10] != -1)
||(alarm[11] != -1)
    exit;
    
//Mover janela
if((mouse_check_button(mb_right))
||(mouse_check_button(mb_middle)))
&amp;&amp;!(window_get_fullscreen()){

    window_set_position(display_mouse_get_x()-window_get_width()/2,display_mouse_get_y()-window_get_height()/2);
    temp_x = window_get_x();
    temp_y = window_get_y();
};

//Inserir texto
if(dialog == 1){

    //Animação de transição (Começo)
    if(dialog_filterright &lt; 1280)
        dialog_filterright += 128;
    dialog_filterleft = -1;
    
    //Confirmar
    if(keyboard_check_pressed(vk_enter)){
    
        audio_play_sfx(snd_addgame_step3);
        dialog = 0;
        alarm[5] = -1;
        exit;
    };
    
    //Clipboard
    if(keyboard_check(vk_control)){
    
        //Colar
        if(keyboard_check_pressed(ord("V"))){
        
            audio_play_sfx(snd_keyboard);
            keyboard_string = string_copy(clipboard_get_text(),0,32);
            dialog_return = string_copy(clipboard_get_text(),0,32);
        };
        //Copiar
        else if(keyboard_check_pressed(ord("C"))){
        
            audio_play_sfx(snd_keyboard);
            clipboard_set_text(dialog_return);
        };
    };
    else{
    
        //SFX de tecla
        if(keyboard_check_pressed(vk_anykey))
            audio_play_sfx(snd_keyboard);
        
        //Trocar caracteres inválidos
        if(keyboard_check(vk_anykey)){
        
            var stg_b,stg_1,stg_2,stg_3,stg_4,stg_5,stg_6,stg_7,stg_8,stg_9,stg_f;
            stg_b = string_copy(keyboard_string,0,32);
            stg_1 = string_replace(stg_b,"\","");
            stg_2 = string_replace(stg_1,"/","");
            stg_3 = string_replace(stg_2,":","");
            stg_4 = string_replace(stg_3,"*","");
            stg_5 = string_replace(stg_4,"?","");
            stg_6 = string_replace(stg_5,"&lt;","");
            stg_7 = string_replace(stg_6,"&gt;","");
            stg_8 = string_replace(stg_7,'"',"");
            stg_9 = string_replace(stg_8,'#',"");
            stg_f = string_replace(stg_9,"'","");
            keyboard_string = stg_f;
            dialog_return = stg_f;
        };
    };
        
    //Efeito
    if(alarm[5] == -1)
        alarm[5] = 15;
    exit;
};
else{

    //Animação de transição (Fim)
    if(dialog_filterright &gt;= 1280){
    
        if(dialog_filterleft &lt; 1280)
            dialog_filterleft += 128;
        else{
            dialog_filterright = -1;
            dialog_filterleft = -1;
        };
    };
};

//Gamepad
var gp_count;
for(gp_count = 0; gp_count &lt; 5; gp_count += 1){

    if(gamepad_is_connected(gp_count))
    &amp;&amp;(dialog == 0){
         
        //Up - Fim da lista
        if(gamepad_button_check(gp_count,gp_padu))
            keyboard_key_press(vk_up);
        else if(gamepad_button_check_released(gp_count,gp_padu))
            keyboard_key_release(vk_up);
            
        //Down - Começo da lista
        if(gamepad_button_check(gp_count,gp_padd))
            keyboard_key_press(vk_down);
        else if(gamepad_button_check_released(gp_count,gp_padd))
            keyboard_key_release(vk_down);
    
        //Left / L
        if(gamepad_button_check(gp_count,gp_padl))
            keyboard_key_press(vk_left);
        else if(gamepad_button_check_released(gp_count,gp_padl))
            keyboard_key_release(vk_left);
            
        if(gamepad_button_check(gp_count,gp_shoulderl))
            keyboard_key_press(vk_left);
        else if(gamepad_button_check_released(gp_count,gp_shoulderl))
            keyboard_key_release(vk_left);
        
        //Right / R
        if(gamepad_button_check(gp_count,gp_padr))
            keyboard_key_press(vk_right);
        else if(gamepad_button_check_released(gp_count,gp_padr))
           keyboard_key_release(vk_right);
           
        if(gamepad_button_check(gp_count,gp_shoulderr))
            keyboard_key_press(vk_right);
        else if(gamepad_button_check_released(gp_count,gp_shoulderr))
           keyboard_key_release(vk_right);

        //X, Y e Select - Mover
        if(gamepad_button_check_pressed(gp_count,gp_face1))
            keyboard_key_press(vk_shift);
        else if(gamepad_button_check_released(gp_count,gp_face1))
            keyboard_key_release(vk_shift);
            
        if(gamepad_button_check_pressed(gp_count,gp_face4))
            keyboard_key_press(vk_shift);
        else if(gamepad_button_check_released(gp_count,gp_face4))
            keyboard_key_release(vk_shift);

        if(gamepad_button_check_pressed(gp_count,gp_select))
            keyboard_key_press(vk_shift);
        else if(gamepad_button_check_released(gp_count,gp_select))
            keyboard_key_release(vk_shift);
                            
        //A, B e Start - Iniciar
        if(gamepad_button_check_pressed(gp_count,gp_face2))
            keyboard_key_press(vk_enter);
        else if(gamepad_button_check_released(gp_count,gp_face2))
            keyboard_key_release(vk_enter);
            
        if(gamepad_button_check_pressed(gp_count,gp_face3))
            keyboard_key_press(vk_enter);
        else if(gamepad_button_check_released(gp_count,gp_face3))
            keyboard_key_release(vk_enter);
            
        if(gamepad_button_check_pressed(gp_count,gp_start))
            keyboard_key_press(vk_enter);
        else if(gamepad_button_check_released(gp_count,gp_start))
            keyboard_key_release(vk_enter);
    };
    if(gp_count &gt; 4)
        gp_count = 0;
};

//WASD
keyboard_set_map(ord("W"),vk_up);
keyboard_set_map(ord("A"),vk_left);
keyboard_set_map(ord("S"),vk_down);
keyboard_set_map(ord("D"),vk_right);

//---------------------

//Controle dos Pais
if(parental_unlock &gt; 0)
    parental_unlock--;

//Animação
if(parental_control == 1){
    
    //Opacidade
    if(parental_fadeicons &gt; 0)
        parental_fadeicons -= 0.1;
    else
        parental_fadeicons = 0;
        
    //Scroll
    if(parental_offset &lt; 112-8)
        parental_offset += 8;
    else
        parental_offset = 112;
};
else{

    //Opacidade
    if(parental_fadeicons &lt; 1)
        parental_fadeicons += 0.1;
    else
        parental_fadeicons = 1;
        
    //Scroll    
    if(parental_offset &gt; 8)
        parental_offset -= 8;
    else
        parental_offset = 0;
};

//Bloquear/Desbloquear
if(point_in_rectangle(mouse_x,mouse_y,230,30,230+46,30+56)){
        
    if(mouse_check_button_pressed(mb_left)){
    
        if(parental_unlock &gt;= 30){
        
            audio_play_sfx(snd_parentalcontrol);
            parental_control =! parental_control;
            parental_unlock = 0;
            parental_fade = 3;
        };
        else
            parental_unlock += 29;
    };
};

//---------------------

//Retirar Popup de informações
if(info_popup == 1){

    if(keyboard_check_pressed(vk_anykey))
    ||(mouse_check_button_pressed(mb_any))
        info_popup = 0;
};

//Opções de Interface
if(mouse_check_button_released(mb_left)){
    
    //Fullscreen
    if(point_in_rectangle(mouse_x,mouse_y,1121,41,1121+34,41+34)){
    
        audio_play_sfx(snd_window);
        fullscreen =! fullscreen;
        alarm[4] = 4;
    };
    //Fechar
    if(point_in_rectangle(mouse_x,mouse_y,1170,41,1170+34,41+34))
        game_end();
        
    //Pasta do Launcher
    if(point_in_rectangle(mouse_x,mouse_y,595,662,595+44,662+44))
    &amp;&amp;(parental_control == 0){
    
        ExecuteShell(game_save_id,0,0);
    };
    //Informações do Launcher
    if(point_in_rectangle(mouse_x,mouse_y,641,662,641+44,662+44))
    &amp;&amp;(parental_control == 0){
    
        if(info_popup == 0)
            info_popup = 1;
    };
        
    //---------------------

    //Deletar jogo
    if(point_in_rectangle(mouse_x,mouse_y,328,504,328+86,504+86))
    &amp;&amp;(parental_control == 0)
    &amp;&amp;(games_total &gt; 0)
    &amp;&amp;(alarm[10] == -1){
        
        //Deletar sprite
        sprite_delete(games_thumb[select_index]);
        
        //Nulo
        games_title[select_index] = "Deleting...";
        games_playtime[select_index,0] = "0";
        games_playtime[select_index,1] = "0";
  
        //Deletar arquivos
        file_delete_fmns(game_save_id+"collection\game_"+string(select_index)+".png");
        file_delete_fmns(game_save_id+"collection\game_"+string(select_index)+".ini");
                      
        //Deletar ultimo (sendo o ultimo selecionado)
        if(select_index == games_total-1)
        &amp;&amp;(select_index &gt; 0){

            //Apagar apenas esse
            games_path[select_index] = "";
            games_animframes[select_index] = 1;
            games_animspeed[select_index] = 0
            
            //Decrementar
            audio_play_sfx(snd_alert);
            games_total--;            
            select_index--;
            
            //Salvar total de jogos
            ini_open(game_save_id+"collection\_total.ini");
            ini_write_string("NINTY_CONFIG","total",string(games_total));
            ini_close();
            
            //Limpar
            cleanmem();

            //Atualizar RPC
            event_user(0);
        };
        //Mover tudo
        else{
        
            audio_play_sound(snd_loading,0,1);
            move_rest = select_index;
            alarm[10] = 10;
        };
    };
        
    //Alterar nome do jogo
    if(point_in_rectangle(mouse_x,mouse_y,436,504,436+86,504+86))
    &amp;&amp;(parental_control == 0)
    &amp;&amp;(games_total &gt; 0)
    &amp;&amp;(alarm[6] == -1){

        if(filename_ext(games_path[select_index]) == ".exe"){
        
            //Alterar nome
            audio_play_sfx(snd_changetitle);
            dialog_description = "Set Game Title:"
            keyboard_string = games_title[select_index];
            dialog_return = games_title[select_index];
            dialog = 1;
            alarm[6] = 1;
        };
    };
        
    //Alterar thumbnail do jogo
    if(point_in_rectangle(mouse_x,mouse_y,544,504,544+86,504+86))
    &amp;&amp;(parental_control == 0)
    &amp;&amp;(games_total &gt; 0)
    &amp;&amp;(alarm[9] == -1){
    
        audio_play_sfx(snd_changethumbnail);
        window_set_fullscreen(0);
        alarm[9] = 4;
    };
           
    //Tema (Branco/Preto)
    if(point_in_rectangle(mouse_x,mouse_y,653-parental_offset,504,(653+86)-parental_offset,504+86)){
    
        theme =! theme;
        if(theme == 0)
            audio_play_sfx(snd_theme_white);
        else
            audio_play_sfx(snd_theme_black);
    };

    //Alterar wallpaper
    if(point_in_rectangle(mouse_x,mouse_y,761-parental_offset,504,(761+86)-parental_offset,504+86)){
    
        audio_play_sfx(snd_wallpaper);
        window_set_fullscreen(0);
        alarm[8] = 4;
    };
    
    //Adicionar jogo
    if(point_in_rectangle(mouse_x,mouse_y,869,504,869+86,504+86))
    &amp;&amp;(parental_control == 0)
    &amp;&amp;(alarm[7] == -1){
    
        audio_play_sfx(snd_addgame);
        window_set_fullscreen(0);
        alarm[7] = 4;
    };
};
    
//Cor do seletor de jogos
if(col_mod == 0){

    if(col_numb &lt; 1)
        col_numb += 0.05;
    else
        col_mod =! col_mod;
};
else{

    if(col_numb &gt; 0)
        col_numb -= 0.05;
    else
        col_mod =! col_mod;
};

//Navegação da lista de jogos
if(alarm[0] == -1)
&amp;&amp;(alarm[5] == -1)
&amp;&amp;(games_total &gt; 0)
&amp;&amp;(dialog == 0){

    //Mover jogo
    if(keyboard_check_pressed(vk_shift))
    &amp;&amp;(move == 0){
    
        move = 1;
        move_origin = select_index;
    };
    
    //Navegação rápida (Loop)
    if(keyboard_check(vk_right)){
    
        //Intervalo
        if(nav_time &gt; 0)
            nav_time--;
        else{
        
            //Delay em frames
            nav_time = 5;
            
            //Próximo
            if(select_index &lt; games_total-1){
                select_index++;
                audio_play_sfx(snd_select_next);
            };
        };
    };
    else if(keyboard_check(vk_left)){
    
        //Intervalo
        if(nav_time &gt; 0)
            nav_time--;
        else{
            
            //Delay em frames
            nav_time = 5;
                    
            //Anterior
            if(select_index &gt; 0){
                select_index--;
                audio_play_sfx(snd_select_previous);
            };
        };
    };
    else
        nav_time = 30;

    //Normal
    if(keyboard_check_pressed(vk_right)){
        
        offset_v = 0;
        
        //Próximo
        if(select_index &lt; games_total-1){
            select_index++;
            audio_play_sfx(snd_select_next);
        };
        else
            audio_play_sfx(snd_select_border);
    };
    else if(keyboard_check_pressed(vk_left)){
    
        offset_v = 0;
        
        //Anterior
        if(select_index &gt; 0){
            select_index--;
            audio_play_sfx(snd_select_previous);
        };
        else
            audio_play_sfx(snd_select_border);
    };
    else if(keyboard_check_pressed(vk_up)){
    
        offset_v = 0;
        
        //Fim
        select_index = games_total-1;
        audio_play_sfx(snd_select_border);
    };
    else if(keyboard_check_pressed(vk_down)){
    
        offset_v = 0;
        
        //Começo
        select_index = 0;
        audio_play_sfx(snd_select_border);
    };
    else if(keyboard_check_pressed(vk_enter)){
        
        if(keyboard_check(vk_alt)){
        
            //Fullscreen
            audio_play_sfx(snd_window);
            fullscreen =! fullscreen;
            alarm[4] = 4;
        };
        else{
        
            //Confirmar após mover
            if(move == 1){
        
                //Se for local diferente...
                if(select_index != move_origin){
                
                    //SFX
                    audio_play_sfx(snd_move_pick);
                    games_title[select_index] = "Moving...";
                    
                    //Copiar
                    move_temp_title = games_title[move_origin];
                    move_temp_path = games_path[move_origin];
                    move_temp_animframes = games_animframes[move_origin];
                    move_temp_animspeed = games_animspeed[move_origin];
                    move_temp_playtime[0] = games_playtime[move_origin,0];
                    move_temp_playtime[1] = games_playtime[move_origin,1];
                    move_temp_thumbnail = sprite_duplicate(games_thumb[move_origin]);
                    
                    //Deletar de origem
                    sprite_delete(games_thumb[move_origin]);
                    
                    //Renomear arquivo de origem temporariamente...
                    file_rename_fmns(game_save_id+"collection\game_"+string(move_origin)+".ini",game_save_id+"collection\game_TMP.ini");
                    file_rename_fmns(game_save_id+"collection\game_"+string(move_origin)+".png",game_save_id+"collection\game_TMP.png");
                    
                    //Mover arquivo destino apra de origem...
                    alarm[11] = 10;
                };
                else{
                
                    //SFX
                    audio_play_sfx(snd_move_set);
                    
                    //Finalizar
                    move = 0;
                    move_origin = -1;
                };
            };
            else{
            
                //Iniciar jogo
                if(games_total &gt; 0)
                &amp;&amp;(file_exists_fmns(games_path[select_index])){
                
                    //Iniciar máximizado
                    if(fullscreen == 1)
                        boot_res = "/max ";
                    else
                        boot_res = "";
                
                    window_set_fullscreen(0);
                    audio_play_sfx(snd_launcher_startgame);
                    alarm[0] = 15;
                };
            };
        };
    };       
};

//Standby
if(os_is_paused())
    audio_play_sfx(snd_launcher_close);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Descarregar assets (RAM)

//Deletar Wallpaper
if(sprite_exists(wallpaper))
    sprite_delete(wallpaper);

//Lista
var i;
for(i=0; i&lt;games_total; i+=1){
    
    //Deketar thumbnail
    if(sprite_exists(games_thumb[i]))
        sprite_delete(games_thumb[i]);
};

//Limpar
cleanmem();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Carregar assets (Jogos, Thumbnails e Wallpaper)

// WALLPAPER ----------------------------------------------

//Configuração do Wallpaper
if(launched == 0){

    ini_open(game_save_id+"wallpaper.ini")
    wallpaper_tiled = real(ini_read_string("NINTY_WALLPAPER","tiled","1"));
    wallpaper_stretched = real(ini_read_string("NINTY_WALLPAPER","stretched","0"));
    wallpaper_smooth = real(ini_read_string("NINTY_WALLPAPER","smooth","1"));
    wallpaper_h_offset = real(ini_read_string("NINTY_WALLPAPER","horizontal_offset","0"));
    wallpaper_v_offset = real(ini_read_string("NINTY_WALLPAPER","vertical_offset","0"));
    wallpaper_h_scrolling = real(ini_read_string("NINTY_WALLPAPER","horizontal_scrolling","0"));
    wallpaper_v_scrolling = real(ini_read_string("NINTY_WALLPAPER","vertical_scrolling","0"));
    wallpaper_animframes = real(ini_read_string("NINTY_WALLPAPER","animframes","1"));
    wallpaper_animspeed = real(ini_read_string("NINTY_WALLPAPER","animspeed","0"));
    ini_close();
};

//Wallpaper
if(file_exists_fmns(game_save_id+"wallpaper.png"))
    wallpaper = sprite_add(game_save_id+"wallpaper.png",wallpaper_animframes,0,0,0,0);
else
    wallpaper = noone;
    
//Animador (Wallpaper)
anim_wallpaper = 0;

// JOGOS ----------------------------------------------

//Buscar total de jogos
if(launched == 0){

    ini_open(game_save_id+"collection\_total.ini");
    games_total = real(ini_read_string("NINTY_ENTRY","total","0"));
    ini_close();
};

//Lista
var i;
for(i=0; i&lt;games_total; i+=1){

    //Dados
    if(launched == 0){
    
        ini_open(game_save_id+"collection\game_"+string(i)+".ini");
        games_title[i] = ini_read_string("NINTY_ENTRY","title","???");
        games_path[i] = ini_read_string("NINTY_ENTRY","path","");
        games_animframes[i] = real(ini_read_string("NINTY_ENTRY","animframes","1"));
        games_animspeed[i] = real(ini_read_string("NINTY_ENTRY","animspeed","0"));
        games_playtime[i,0] = real(base64_decode(ini_read_string("NINTY_ENTRY","0","0")));
        games_playtime[i,1] = real(base64_decode(ini_read_string("NINTY_ENTRY","1","0")));
        ini_close();
    };
    
    //Importar thumbnail
    if(file_exists_fmns(game_save_id+"collection\game_"+string(i)+".png"))
        games_thumb[i] = sprite_add(game_save_id+"collection\game_"+string(i)+".png",games_animframes[i],0,1,0,0);
    else
        games_thumb[i] = sprite_add(assets_dir+"thumbnails\_default.tbn",0,0,0,0,0);
        
    //Animador
    anim_games[i] = 0;
};

//Limpar
cleanmem();
    
//Próxima vez que carregar, apenas o básico
if(launched == 0)
    launched = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Discord RPC padrão
discord_update_presence("🔍 | Selecting a Game...","⭐ | "+string(games_total)+" Games in Library.","default","");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Salvar configurações do Launcher
ini_open(game_save_id+"config.ini")
ini_write_real("NINTY_CONFIG","theme",theme);
ini_write_real("NINTY_CONFIG","fullscreen",fullscreen);
ini_write_real("NINTY_CONFIG","position",select_index);
ini_write_real("NINTY_CONFIG","parental",parental_control);
ini_close();

//Salvar configuração do Wallpaper
if(file_exists_fmns(game_save_id+"wallpaper.png"))
&amp;&amp;!(file_exists_fmns(game_save_id+"wallpaper.ini")){

    ini_open(game_save_id+"wallpaper.ini")
    ini_write_string("NINTY_WALLPAPER","tiled",string(wallpaper_tiled));
    ini_write_string("NINTY_WALLPAPER","stretched",string(wallpaper_stretched));
    ini_write_string("NINTY_WALLPAPER","smooth",string(wallpaper_smooth));
    ini_write_string("NINTY_WALLPAPER","horizontal_offset",string(wallpaper_h_offset));
    ini_write_string("NINTY_WALLPAPER","vertical_offset",string(wallpaper_v_offset));
    ini_write_string("NINTY_WALLPAPER","horizontal_scrolling",string(wallpaper_h_scrolling));
    ini_write_string("NINTY_WALLPAPER","vertical_scrolling",string(wallpaper_v_scrolling));
    ini_write_string("NINTY_WALLPAPER","animframes",string(wallpaper_animframes));
    ini_write_string("NINTY_WALLPAPER","animspeed",string(wallpaper_animspeed));
    ini_close();
};

//Salvar total de jogos
ini_open(game_save_id+"collection\_total.ini");
ini_write_string("NINTY_ENTRY","total",string(games_total));
ini_close();

//Descarregar DLLs
cleanmem_init(1);
discord_free_app();
discord_free_dll();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Carregar definições
assets_dir = working_directory;
launched = 0;

//Clean Memory
cleanmem_init(0);

//Rich Presence
discord_init_dll();
discord_init_app("518643988778057729");
discord_update_presence("","","","");

//Menor que 1080p
if(display_get_width() &lt; 1920-8){
    
    //Menor que 720p (Adequado para 4:3)
    if(display_get_width() &lt; 1280-8){
        
        //Ainda menor... (WTf? alguém tem display menor ue isso?)
        if(display_get_width() &lt; 800-8)
            window_set_size(320,180);
        else
            window_set_size(640,360);
    };
    else
        window_set_size(800,450);
};
else   
    window_set_size(1280,720);
    
//Tamanho padrão da interface relativa ao display
display_set_gui_size(1280,720);

//Centralizar janela
alarm[3] = 2;

//Configurações do Launcher
ini_open(game_save_id+"config.ini")
theme = ini_read_real("NINTY_CONFIG","theme",1);
fullscreen = ini_read_real("NINTY_CONFIG","fullscreen",0);
select_index = ini_read_real("NINTY_CONFIG","position",0);
parental_control = ini_read_real("NINTY_CONFIG","parental",0);
ini_close();

//Definir fullscreen
alarm[4] = 6;

//Carregar assets
event_user(1);

//Impedir seletor de começar fora da lista
if(select_index &gt; games_total-1){

    if(games_total == 0)
        select_index = 0
    else
        select_index = games_total-1;
};

//Atualizar RPC
event_user(0);

//SFX
audio_play_sfx(snd_launcher_open);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ignorar script enquanto estiver suspenso.
if(is_playing == 1)
    exit;

//------------- Wallpaper -------------

//Cor
if(theme == 1)
    draw_background_tiled(bgr_dark,0,0);
else
    draw_background_tiled(bgr_light,0,0);

//Customizado
if(sprite_exists(wallpaper)){
    
    //Animações
    if(alarm[10] == -1)
    &amp;&amp;(alarm[11] == -1){
        
        //Animação
        if(wallpaper_animframes &gt; 1)
        &amp;&amp;(wallpaper_animspeed &gt; 0){
                
            if(anim_wallpaper &lt; wallpaper_animframes)
                anim_wallpaper += 1/wallpaper_animspeed;
            else
                anim_wallpaper = 0;
        };
        
        //Rolagem
        if(wallpaper_h_scrolling != 0)
            wp_x += wallpaper_h_scrolling;
        if(wallpaper_v_scrolling != 0)    
            wp_y += wallpaper_v_scrolling;
    };
    
    //Esticado
    if(wallpaper_stretched == 1)
        draw_sprite_stretched(wallpaper,anim_wallpaper,wallpaper_h_offset+wp_x,wallpaper_v_offset+wp_y,1280,720);
    else{
    
        //Tiled
        if(wallpaper_tiled == 1)
            draw_sprite_tiled(wallpaper,anim_wallpaper,wallpaper_h_offset+wp_x,wallpaper_v_offset+wp_y);
        //Normal
        else
            draw_sprite(wallpaper,anim_wallpaper,wallpaper_h_offset+wp_x,wallpaper_v_offset+wp_y);        
    };
};

//------------- Base -------------

//Parental Control
if(parental_control){

    if(parental_fade &gt; 0)
        parental_fade -= 0.05;
    draw_sprite_ext(spr_launcher_parental,theme+2,230,30,1,1,0,c_white,parental_fade);
};
else
    draw_sprite_ext(spr_launcher_parental,theme,230,30,1,1,0,c_white,1);

//Horário
var _hour = string_replace_all(string_format(current_hour,2,0)," ","0");
var _min = string_replace_all(string_format(current_minute,2,0)," ","0");
draw_set_font(fnt_clock);
draw_sprite_ext(spr_launcher_clock,theme,71,35,1,1,0,c_white,1);
if(theme == 0)
    draw_set_colour(c_black);
draw_text(124,38,_hour+":"+_min);
draw_set_font(fnt_default);
draw_set_colour(c_white);
    
//Opções de Janela
draw_sprite_ext(spr_launcher_options,theme,1075,35,1,1,0,c_white,1);

//Conexão
if(os_is_network_connected())
    draw_sprite_ext(spr_launcher_connection,0,1060,36,1,1,0,c_white,1);

//Barra (Footer)
draw_sprite_ext(spr_launcher_line,theme,29,646,1,1,0,c_white,1);

//Pasta/Informações
draw_sprite_ext(spr_launcher_about,theme,1280/2,664,1,1,0,c_white,parental_fadeicons);

//Váriavel
if(gamepad_is_connected(0) == 1)
||(gamepad_is_connected(4) == 1){

    //Controle
    draw_sprite_ext(spr_launcher_controller,theme+2,51,664,1,1,0,c_white,1);
    
    //informações básicas
    if(games_total &gt; 0)
        draw_sprite_ext(spr_launcher_basicinfo,theme+2,860,662,1,1,0,c_white,1);
};
else{

    //Controle
    draw_sprite_ext(spr_launcher_controller,theme,51,664,1,1,0,c_white,1);
    
    //informações básicas
    if(games_total &gt; 0)
        draw_sprite_ext(spr_launcher_basicinfo,theme,860,662,1,1,0,c_white,1);
};

//------------- Icones -------------

//Deletar
draw_sprite_ext(spr_launcher_icons,theme,322+parental_offset,498,1,1,0,c_white,parental_fadeicons);
draw_sprite_ext(spr_launcher_icons,2,322+parental_offset,498,1,1,0,c_white,parental_fadeicons);
    
//Nome
draw_sprite_ext(spr_launcher_icons,theme,430+parental_offset,498,1,1,0,c_white,parental_fadeicons);
draw_sprite_ext(spr_launcher_icons,3,430+parental_offset,498,1,1,0,c_white,parental_fadeicons);
    
//Thumbnail
draw_sprite_ext(spr_launcher_icons,theme,538+parental_offset,498,1,1,0,c_white,parental_fadeicons);
draw_sprite_ext(spr_launcher_icons,4,538+parental_offset,498,1,1,0,c_white,parental_fadeicons);

//Tema
draw_sprite_ext(spr_launcher_icons,theme,647-parental_offset,498,1,1,0,c_white,1);
draw_sprite_ext(spr_launcher_icons,5+theme,647-parental_offset,498,1,1,0,c_white,1);

//Wallpaper
draw_sprite_ext(spr_launcher_icons,theme,755-parental_offset,498,1,1,0,c_white,1);
draw_sprite_ext(spr_launcher_icons,7+theme,755-parental_offset,498,1,1,0,c_white,1);

//Adicionar
draw_sprite_ext(spr_launcher_icons,theme,863-parental_offset,498,1,1,0,c_white,parental_fadeicons);
draw_sprite_ext(spr_launcher_icons,9+theme,863-parental_offset,498,1,1,0,c_white,parental_fadeicons);
if(games_total == 0){

    //Highlight
    adcol = merge_colour(c_aqua,c_teal,col_numb);
    draw_sprite_ext(spr_launcher_icons,11,863-parental_offset,498,1,1,0,adcol,parental_fadeicons);
};

//------------- Lista de Jogos -------------

//Rolagem (de acordo com offset)
if(select_index &gt; 1)
    offset = 502+(-276*select_index);
else
    offset = 98;

//Rolagem vertical
if(games_total &gt; 0)
&amp;&amp;(move == 0){

    if(offset_v &lt; 32-6)
        offset_v += 6;
};
else
    offset_v = 0;

//Lista de jogos (Mostrar apenas oque esta na tela)
var i, i_start, i_end;
if(select_index &gt; 1){

    i_start = select_index-2;
    i_end = select_index+3;
};
else{

    i_start = 0;
    i_end = select_index+5;
};
for(i=i_start; i&lt;i_end; i+=1){

    var vv = 0;
    if(select_index == i)
        vv = offset_v;
                
    //Sombra
    draw_sprite(spr_launcher_thumbnail_shadow,theme,offset+(256+20)*i,194-vv);
    
    //Blocos vázios
    if(i &gt; games_total-1)
    ||((move == 1)&amp;&amp;(i == move_origin))
        draw_sprite(spr_launcher_thumbnail,theme,offset+(256+20)*i,194-vv);
    //Thumbnail dos jogos
    else{
    
        if(sprite_exists(games_thumb[i]))
        &amp;&amp;(games_total &gt; 0){
        
            //Animação
            if(games_animframes[i] &gt; 1)
            &amp;&amp;(games_animspeed[i] &gt; 0)
            &amp;&amp;(alarm[10] == -1)
            &amp;&amp;(alarm[11] == -1){
            
                if(anim_games[i] &lt; games_animframes[i])
                    anim_games[i] += 1/games_animspeed[i];
                else
                    anim_games[i] = 0;
            };
            draw_sprite_stretched(games_thumb[i],anim_games[i],offset+(256+20)*i,194-vv,256,256);
        };
    };
};

//Total
if(games_total &gt; 0){

    if(theme == 0)
        draw_set_colour(c_black);
    draw_text(132,658,string(select_index+1)+" / "+string(games_total));
    draw_set_font(fnt_default);
    draw_set_colour(c_white);
};
    
//Seletor de jogos
if(select_index &lt; games_total+1)
&amp;&amp;(games_total &gt; 0){

    var _msg, _col1, _col2;
    
    //Mover
    if(move == 1){
    
        _msg = games_title[move_origin];
        _col1 = c_yellow;
        _col2 = c_orange;    
    };
    else{
    
        //Padrão
        if(file_exists_fmns(games_path[select_index])){
        
            _msg = games_title[select_index];
            _col1 = c_aqua;
            _col2 = c_teal;
        };
        //Jogo não encotrado
        else{
     
            _msg = "[NOT FOUND] Update path";
            _col1 = c_red;
            _col2 = c_maroon;
        };
    };

    //Mostrar thumbnail que esta sendo movida
    var move_offset = 0;
    if(move == 1){
    
        move_offset = 32;
        if(sprite_exists(games_thumb[move_origin])){
        
            draw_set_alpha(col_numb+0.4);
            draw_sprite_stretched(games_thumb[move_origin],0,(offset-0)+276*select_index,194-32,256,256);
            draw_set_alpha(1);
        };
    };
    
    //Seletor
    col = merge_colour(_col1,_col2,col_numb);
    draw_sprite_ext(spr_launcher_selector,0,(offset-10)+276*select_index,185-offset_v-move_offset,1,1,0,col,1);

    //Nome do jogo selecionado
    if(select_index == 0)
        draw_text_colour(offset-16,123-offset_v-move_offset,_msg,col,col,col,col,1);    
    else{
    
        draw_set_halign(fa_center);
        draw_text_colour(offset+(276*select_index)+256/2,123-offset_v-move_offset,_msg,col,col,col,col,1);
        draw_set_halign(fa_left);
    };
    
    //Play Time
    if(move == 0){
    
        if(games_playtime[select_index,0] &lt; 1)
        &amp;&amp;(games_playtime[select_index,1] &lt; 1){
        
            var _pt_hour = "--";
            var _pt_min = "--";
        };
        else{
        
            var _pt_hour = string_replace_all(string_format(real(games_playtime[select_index,0]),2,0)," ","0");
            var _pt_min = string_replace_all(string_format(real(games_playtime[select_index,1]),2,0)," ","0");
        };
        draw_set_font(fnt_clock);
        draw_text_colour(offset+(276*select_index)+(256/2)-18,466-offset_v,_pt_hour+":"+_pt_min,col,col,col,col,1);
        draw_set_font(fnt_default);
        draw_sprite_ext(spr_launcher_clock,1,offset+(276*select_index)+(256/2)-48-18,466-offset_v,1,1,0,col,1);
    };
};

//Informação
if(info_popup == 1)
    draw_sprite(spr_launcher_information,theme,1280/2,720/2);
    
//------------- Dialogo -------------

//Fundo
draw_set_colour(c_black);
draw_set_alpha(0.9);
draw_rectangle(dialog_filterleft,-2000,dialog_filterright,4000,0);
draw_set_colour(c_white);
draw_set_alpha(1);
    
if(dialog == 1){
    
    //Descrição
    draw_set_colour(c_aqua);
    draw_set_halign(fa_center);
    draw_text(1280/2,720/2-48,dialog_description);
    draw_set_colour(c_white);
    
    //Texto
    draw_text(1280/2,720/2,dialog_return+dialog_inputb);
    draw_set_halign(fa_left);
    draw_set_colour(c_white);
};

//Deletando...
if(alarm[10] != -1){

    draw_set_colour(c_black);
    draw_set_alpha(0.7);
    draw_rectangle(0,-2000,1280,4000,0);
    draw_set_alpha(1);
    draw_set_colour(c_white);
    
    //Texto
    draw_set_colour(c_aqua);
    draw_set_halign(fa_center);
    draw_text(1280/2,(720/2)-32,"Deleting...");
    draw_set_halign(fa_left);
    draw_set_colour(c_white);
};

//Filtro
if!(window_has_focus())
&amp;&amp;!(window_get_fullscreen()){

    draw_set_colour(c_black);
    draw_set_alpha(0.7);
    draw_rectangle(0,0,1280,720,0);
    draw_set_alpha(1);
    draw_set_colour(c_white);
};

//------------- Cursor -------------
var col2 = merge_colour(c_aqua,c_teal,col_numb);
draw_sprite_ext(spr_launcher_cursor,0,mouse_x,mouse_y,1,1,0,col2,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="113">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Folder
instance_create(0,0,obj_folderlistener);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
