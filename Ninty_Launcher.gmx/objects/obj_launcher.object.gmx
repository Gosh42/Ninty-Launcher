<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///NNITY LAUNCHER
image_speed = 0;
image_index = 0;

//Misc.
debug = 0;
delay = 0;
is_playing = 0;
mov_time = 0;
nav_time = 60;
icon_select = -1;
network_anim = 0;
outside_submenu = 0;

//Anima√ß√µes
wp_x = 0;
wp_y = 0;
offset = 98;
offset_v = 32;
clock_blink = ":";

//BAT de boot
boot_res = "";
boot_priority = "";
boot_wait = "/WAIT ";
boot_attach = "";

//Mover
move = 0;
move_origin = -1;
move_temp_title = "";
move_temp_path = "";
move_temp_forwarder = "";
move_temp_subselect = 0;
move_temp_shortcut = 1;
move_temp_animframes = 1;
move_temp_animspeed = 0;
move_temp_playtime[0] = "0";
move_temp_playtime[1] = "0";
move_temp_thumbnail = noone;

//Tempo
time_start = 0;

//Controle dos Pais
parental_offset = 0;
parental_unlock = 0;
parental_fade = 3;
parental_fadeicons = 1;

//Dialogo
dialog = 0;
dialog_description = "";
dialog_return = "";
dialog_inputb = " ";
dialog_filterleft = 1280;
dialog_filterright = 1280;

//Criar lista de arquivos de pasta
forwarder = 0;
forwarder_fade = 0;
forwarder_subfolder = "";
forwarder_subfolder_path = "";
forwarder_select = 0;
forwarder_find = 0;
forwarder_total = 0;
forwarder_list = ds_map_create();
forwarder_file = "";

forwarder_listoffset = 0;
forwarder_openexplorer = "0";

//Informa√ß√µes
infopopup = 0;
infopopup_fade = 0;

//Configura√ß√µes
settingsmenu = 0;
settingsmenu_fade = 0;
settingsmenu_select = 7;

//Cor do Seletor
col_numb = 0;
col_mod = 0;

//Emojis do RPC
emoji_lib = "üîç | ";
emoji_games = "‚≠ê | ";
emoji_playing = "üéÆ | ";
emoji_forward = "‚≠ê | ";

//Efeitos de blink
blink_delay = 60;

//Anal√≥gicos do Gamepad
var _gp;
for(_gp = 0; _gp &lt; 5; _gp += 1){

    gp_stick[_gp,0] = 0;
    gp_stick[_gp,1] = 0;
    gp_stick[_gp,2] = 0;
    gp_stick[_gp,3] = 0;    
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mover arquivos

//Mover destino para origem...
if(file_exists_fmns(game_save_id+"collection\game_"+string(select_index)+".ini")){

    //Mover...
    games_title[move_origin] = games_title[select_index];
    games_path[move_origin] = games_path[select_index];
    games_forwarder[move_origin] = games_forwarder[select_index];
    games_subselect[move_origin] = games_subselect[select_index];
    games_shortcut[move_origin] = games_shortcut[select_index];
    games_animframes[move_origin] = games_animframes[select_index];
    games_animspeed[move_origin] = games_animspeed[select_index];
    games_playtime[move_origin,0] = games_playtime[select_index,0];
    games_playtime[move_origin,1] = games_playtime[select_index,1];
    games_thumb[move_origin] = sprite_duplicate(games_thumb[select_index]);
    
    //Deletar sprite de destino
    sprite_delete(games_thumb[select_index]);
    
    //Renomear
    file_rename_fmns(game_save_id+"collection\game_"+string(select_index)+".png",game_save_id+"collection\game_"+string(move_origin)+".png");
    file_rename_fmns(game_save_id+"collection\game_"+string(select_index)+".ini",game_save_id+"collection\game_"+string(move_origin)+".ini");

    //Ir para pr√≥ximo arquivo...
    alarm[11] = 5;
};
//Mover origem (que estava em TMP) para destino...
else{

    //Carregar novos...
    games_title[select_index] = move_temp_title;
    games_path[select_index] = move_temp_path;
    games_forwarder[select_index] = move_temp_forwarder;
    games_subselect[select_index] = move_temp_subselect;
    games_shortcut[select_index] = move_temp_shortcut;
    games_animframes[select_index] = move_temp_animframes;
    games_animspeed[select_index] = move_temp_animspeed;
    games_playtime[select_index,0] = move_temp_playtime[0];
    games_playtime[select_index,1] = move_temp_playtime[1];
    sprite_delete(games_thumb[select_index]);
    games_thumb[select_index] = sprite_duplicate(move_temp_thumbnail);
    
    //Corrigir nome
    ini_open(game_save_id+"collection\game_"+string(move_origin)+".ini")
    games_title[move_origin] = ini_read_string("NINTY_ENTRY","title","???");
    ini_close();
    
    //Deletar sprite de origem
    sprite_delete(move_temp_thumbnail);
    
    //Renomear
    file_rename_fmns(game_save_id+"collection\game_TMP.png",game_save_id+"collection\game_"+string(select_index)+".png");
    file_rename_fmns(game_save_id+"collection\game_TMP.ini",game_save_id+"collection\game_"+string(select_index)+".ini");

    //Checar arquivo
    if(file_exists_fmns(games_path[select_index])) select_exists = 1;
    else select_exists = 0;
    
    //Limpar
    cleanmem();

    //SFX
    audio_play_sfx(snd_move_set);
    
    //Finalizar
    move = 0;
    move_origin = -1;
    alarm[11] = -1;
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Organizar arquivos
if(move_rest &lt; games_total-1){

    //Mover...
    games_title[move_rest] = games_title[move_rest+1];
    games_path[move_rest] = games_path[move_rest+1];
    games_forwarder[move_rest] = games_forwarder[move_rest+1];
    games_subselect[move_rest] = games_subselect[move_rest+1];
    games_shortcut[move_rest] = games_shortcut[move_rest+1];
    games_animframes[move_rest] = games_animframes[move_rest+1];
    games_animspeed[move_rest] = games_animspeed[move_rest+1];
    games_playtime[move_rest,0] = games_playtime[move_rest+1,0];
    games_playtime[move_rest,1] = games_playtime[move_rest+1,1];
    
    sprite_delete(games_thumb[move_rest]);
    games_thumb[move_rest] = sprite_duplicate(games_thumb[move_rest+1]);
    file_rename_fmns(game_save_id+"collection\game_"+string(move_rest+1)+".png",game_save_id+"collection\game_"+string(move_rest)+".png");
    file_rename_fmns(game_save_id+"collection\game_"+string(move_rest+1)+".ini",game_save_id+"collection\game_"+string(move_rest)+".ini");

    //Ir para pr√≥ximo arquivo...
    move_rest++;
    alarm[10] = 5;
};
else{

    //Decrementar
    audio_stop_sound(snd_loading);
    audio_play_sfx(snd_alert);
    games_total--;

    //Salvar total de jogos
    ini_open(game_save_id+"collection\_total.ini");
    ini_write_string("NINTY_ENTRY","total",string(games_total));
    ini_close();

    //Checar arquivo
    if(file_exists_fmns(games_path[select_index])) select_exists = 1;
    else select_exists = 0;
            
    //Limpar
    cleanmem();

    //Atualizar RPC
    event_user(0);
    
    alarm[10] = -1;
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Modificar Jogo

//C√≥piar thumbnail temporariamente
directory_create_fmns(game_save_id+"thumbnail");
file_copy_fmns(game_save_id+"collection\game_"+string(select_index)+".png",game_save_id+"thumbnail\original_anim"+string_replace_all(string_format(games_animframes[select_index],2,0)," ","0")+"_speed"+string_replace_all(string_format(games_animspeed[select_index],2,0)," ","0")+".png");

//Buscar caminho...
var mod_file_path;
if(directory_exists(filename_dir(games_path[select_index])))
    mod_file_path = filename_dir(games_path[select_index])+"\";
else
    mod_file_path = program_directory+"\";
var mod_file = get_open_filename_ext("APP/Game (.exe, .url, .swf)|*.exe;*.url;*.swf",filename_name(games_path[select_index]),filename_dir(games_path[select_index]),"Ninty Launcher");
if(mod_file != "")
&amp;&amp;(mod_file != "Ninty_Launcher.exe")
&amp;&amp;(mod_file != "Ninty Launcher.exe")
&amp;&amp;(mod_file != "Ninty.exe"){

    //SFX
    audio_play_sfx(snd_addgame_step1);
    
    //Buscar miniatura...
    var mod_thumb = get_open_filename_ext("Thumbnail (256x256)|*.png;*.jpg","original_anim"+string_replace_all(string_format(games_animframes[select_index],2,0)," ","0")+"_speed"+string_replace_all(string_format(games_animspeed[select_index],2,0)," ","0")+".png",game_save_id+"thumbnail\","Ninty Launcher");

    if(mod_thumb != ""){

        //Deletar miniatura antiga
        sprite_delete(games_thumb[select_index]);

        //Deleetar j√° existente na pasta
        file_delete_fmns(game_save_id+"collection\game_"+string(select_index)+".png");
            
        //Miniatura com anima√ß√£o
        games_animframes[select_index] = get_anim_frames(mod_thumb);
        games_animspeed[select_index] = get_anim_speed(mod_thumb);
        games_thumb[select_index] = sprite_add(mod_thumb,get_anim_frames(mod_thumb),0,1,0,0);
        
        //Copiar nova para pasta
        file_copy_fmns(mod_thumb,game_save_id+"collection\game_"+string(select_index)+".png");
        
        //Voltar animador ao come√ßo
        anim_games[select_index] = 0;
    };
    
    //SFX
    audio_play_sfx(snd_addgame_step2);
                
    //√â um ATALHO?
    var mod_scut = show_question(text_addgame[0]);
    if(mod_scut == 1)
        games_shortcut[select_index] = 1;
    else{

            games_shortcut[select_index] = 0;
            
            //SFX
            audio_play_sfx(snd_addgame_step2);
        
            //√â um FORWARDER?
            var mod_fwarder = show_question(text_addgame[1]);
            if(mod_fwarder == 1){
            
                var mod_fward = get_open_filename_ext(""+text_addforwarder+"|*","",games_forwarder[select_index],"Ninty Launcher");
                if(mod_fward != "")
                    games_forwarder[select_index] = filename_path(mod_fward);
            };
            else
                games_forwarder[select_index] = "";      
    };

    //SFX
    audio_play_sfx(snd_addgame_step3);
        
    //Alterar jogo
    games_path[select_index] = mod_file;
    
    //Salvar no diret√≥rio
    ini_open(game_save_id+"collection\game_"+string(select_index)+".ini");
    ini_write_string("NINTY_ENTRY","path",string(mod_file));
    ini_write_string("NINTY_ENTRY","forwarder",string(games_forwarder[select_index]));
    ini_write_string("NINTY_ENTRY","subselect",string(games_subselect[select_index]));
    ini_write_string("NINTY_ENTRY","shortcut",string(games_shortcut[select_index]));
    ini_write_string("NINTY_ENTRY","animframes",string(games_animframes[select_index]));
    ini_write_string("NINTY_ENTRY","animspeed",string(games_animspeed[select_index]));
    ini_close();

    //Checar arquivo
    if(file_exists_fmns(games_path[select_index])) select_exists = 1;
    else select_exists = 0;
        
    //Limpar
    cleanmem();

    //Limpar inputs
    io_clear();
    delay = 5;
                    
    //Atualizar RPC
    event_user(0);
    
    //Voltar fullscreen... (Se tiver sido definido antes)    
    window_set_fullscreen(fullscreen);
};
//Voltar fullscreen... (Se tiver sido definido antes)    
else{

    //Limpar inputs
    io_clear();
    delay = 5;
    
    audio_play_sfx(snd_alert);
    window_set_fullscreen(fullscreen);
};

//Deletar thumbnail temporariamente
directory_destroy_fmns(game_save_id+"thumbnail");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Wallpaper
var wpp = get_open_filename(".PNG/.JPG (1280x720)|*.png;*.jpg","");

//Definir sem anima√ß√£o previamente
wallpaper_animframes = 0;
wp_x = 0;
wp_y = 0;
    
//Deletar wallpaper do launcher
if(sprite_exists(wallpaper))
    sprite_delete(wallpaper);

//Parar m√∫sica
audio_stop_sound(wallpaper_song);
audio_destroy_stream(wallpaper_song);

//Deletar arquivo antigo
file_delete_fmns(game_save_id+"wallpaper.png");
file_delete_fmns(game_save_id+"wallpaper.ini");
file_delete_fmns(game_save_id+"wallpaper.ogg");
    
//Copiar...

//Configura√ß√µes
file_copy_fmns(string_copy(wpp,1,string_length(wpp)-4)+".ini",game_save_id+"wallpaper.ini");

//M√∫sica
file_copy_fmns(string_copy(wpp,1,string_length(wpp)-4)+".ogg",game_save_id+"wallpaper.ogg");

//Carregar configura√ß√£o do Wallpaper
ini_open(game_save_id+"wallpaper.ini");
theme = real(ini_read_string("NINTY_WALLPAPER","theme","1"));
wallpaper_opaquebuttons = real(ini_read_string("NINTY_WALLPAPER","opaquebuttons","0"));
wallpaper_tiled = real(ini_read_string("NINTY_WALLPAPER","tiled","1"));
wallpaper_stretched = real(ini_read_string("NINTY_WALLPAPER","stretched","0"));
wallpaper_smooth = real(ini_read_string("NINTY_WALLPAPER","smooth","1"));
wallpaper_huecolor = real(ini_read_string("NINTY_WALLPAPER","huecolor","0"));
wallpaper_huecursor = real(ini_read_string("NINTY_WALLPAPER","cursor_hue","0"));
wallpaper_sat1cursor = real(ini_read_string("NINTY_WALLPAPER","cursor_saturationA","255"));
wallpaper_sat2cursor = real(ini_read_string("NINTY_WALLPAPER","cursor_saturationB","255"));
wallpaper_lum1cursor = real(ini_read_string("NINTY_WALLPAPER","cursor_luminosityA","255"));
wallpaper_lum2cursor = real(ini_read_string("NINTY_WALLPAPER","cursor_luminosityB","64"));
wallpaper_h_offset = real(ini_read_string("NINTY_WALLPAPER","horizontal_offset","0"));
wallpaper_v_offset = real(ini_read_string("NINTY_WALLPAPER","vertical_offset","0"));
wallpaper_h_scrolling = real(ini_read_string("NINTY_WALLPAPER","horizontal_scrolling","0"));
wallpaper_v_scrolling = real(ini_read_string("NINTY_WALLPAPER","vertical_scrolling","0"));
wallpaper_animframes = real(ini_read_string("NINTY_WALLPAPER","animframes","1"));
wallpaper_animspeed = real(ini_read_string("NINTY_WALLPAPER","animspeed","0"));
ini_close();

if(wpp != ""){

    //Trocar wallpaper
    wallpaper = sprite_add(wpp,wallpaper_animframes,0,wallpaper_smooth,0,0);
    file_copy_fmns(wpp,game_save_id+"wallpaper.png");
        
    //SFX
    audio_play_sfx(snd_addgame_step3);
};
//SFX
else
    audio_play_sfx(snd_alert);

//Trocar m√∫sica e tocar
instance_create(0,0,obj_musicplayer);
    
//Limpar
cleanmem();
    
//Limpar inputs
io_clear();
delay = 5;
    
//Voltar fullscreen... (Se tiver sido definido antes)    
window_set_fullscreen(fullscreen);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Adicionar Jogo

//Buscar caminho...
var file = get_open_filename("APP/Game (.exe, .url, .swf)|*.exe;*.url;*.swf","");
if(file != "")
&amp;&amp;(file != "Ninty_Launcher.exe")
&amp;&amp;(file != "Ninty Launcher.exe")
&amp;&amp;(file != "Ninty.exe"){

    var thumb = find_game(file,games_total);
    
    //Checar se existe miniatura predefinida...
    if(thumb == ""){

        //SFX
        audio_play_sfx(snd_addgame_step1);
        
        //Buscar miniatura...
        thumb = get_open_filename("Thumbnail (256x256)|*.png;*.jpg","");
        if(thumb != ""){
        
            //Miniatura com anima√ß√£o
            games_animframes[games_total] = get_anim_frames(thumb);
            games_animspeed[games_total] = get_anim_speed(thumb);
            games_thumb[games_total] = sprite_add(thumb,get_anim_frames(thumb),0,1,0,0);
            
            //Copiar para pasta
            file_copy_fmns(thumb,game_save_id+"collection\game_"+string(games_total)+".png");
        };
        //Indefinido
        else{
        
            //Miniatura sem anima√ß√£o
            games_animframes[games_total] = 1;
            games_animspeed[games_total] = 0;
            games_thumb[games_total] = sprite_add(global.assets_dir+"default.tbn",0,0,0,0,0);
        };

        //SFX
        audio_play_sfx(snd_addgame_step2);
                
        //√â um ATALHO?
        var scut = show_question(text_addgame[0]);
        if(scut == 1)
            games_shortcut[games_total] = 1;
        else{
        
            games_shortcut[games_total] = 0;
            
            //SFX
            audio_play_sfx(snd_addgame_step2);
        
            //√â um FORWARDER?
            var fwarder = show_question(text_addgame[1]);
            if(fwarder == 1){
            
                var fward = get_open_filename(""+text_addforwarder+" (Forwarder)|*","");
                if(fward != "")
                    games_forwarder[games_total] = filename_path(fward);
                else
                    games_forwarder[games_total] = "";
            };
            else
                games_forwarder[games_total] = "";      
        };
            
        //SFX
        audio_play_sfx(snd_addgame_step3);
        
        //Adicionar base de nome do jogo
        games_title[games_total] = string_copy(string_replace(filename_name(file),filename_ext(file),""),0,32);
    };
    else{
    
        //Sinalizar que est√° baixando...
        network = 1;
    
        //NOTA: Evento "Image Load" esta ativo esperando baixar a imagem...
        games_thumb[games_total] = sprite_add(thumb,games_animframes[games_total],0,1,0,0);
                    
        //Se for um forwarder...
        if(forwarder_openexplorer != 0){
       
            //SFX
            audio_play_sfx(snd_addgame_step2);
             
            //Buscar pasta de referencia
            var fward = get_open_filename(""+text_addforwarder+" (Forwarder)|*","");
            if(fward != "")
                games_forwarder[games_total] = filename_path(fward);
            else
                games_forwarder[games_total] = "";
        };

        //SFX
        audio_play_sfx(snd_addgame_step3);
    };
        
    //Adicionar animador
    anim_games[games_total] = 0;
    
    //Adicionar informa√ß√µes restantes do jogo
    games_subselect[games_total] = 1;
    games_path[games_total] = file;
    games_playtime[games_total,0] = 0;
    games_playtime[games_total,1] = 0;
                    
    //Salvar no diret√≥rio
    ini_open(game_save_id+"collection\game_"+string(games_total)+".ini");
    ini_write_string("NINTY_ENTRY","forwarder",string(games_forwarder[games_total]));
    ini_write_string("NINTY_ENTRY","subselect",string("1"));
    ini_write_string("NINTY_ENTRY","shortcut",string(games_shortcut[games_total]));
    ini_write_string("NINTY_ENTRY","title",games_title[games_total]);
    ini_write_string("NINTY_ENTRY","path",string(file));
    ini_write_string("NINTY_ENTRY","animframes",string(games_animframes[games_total]));
    ini_write_string("NINTY_ENTRY","animspeed",string(games_animspeed[games_total]));
    ini_write_string("NINTY_ENTRY","0",base64_encode("0"));
    ini_write_string("NINTY_ENTRY","1",base64_encode("0"));
    ini_close();
            
    //Incrementar total
    ini_open(game_save_id+"collection\_total.ini");
    ini_write_string("NINTY_ENTRY","total",string(games_total+1));
    ini_close();
    games_total++;
    select_index = games_total-1;
  
    //Lembrar de n√£o abrir forwarder pr√≥xima vez...
    forwarder_openexplorer = 0;

    //Checar arquivo
    if(file_exists_fmns(games_path[select_index])) select_exists = 1;
    else select_exists = 0;
        
    //Limpar
    cleanmem();
    
    //Limpar inputs
    io_clear();
    delay = 5;
    
    //Atualizar RPC
    event_user(0);
    
    //Voltar fullscreen... (Se tiver sido definido antes)    
    window_set_fullscreen(fullscreen);
};
//Voltar fullscreen... (Se tiver sido definido antes)    
else{

    //Limpar inputs
    io_clear();
    delay = 5;

    audio_play_sfx(snd_alert);
    window_set_fullscreen(fullscreen);
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alterar nome do jogo
if(dialog == 1)
    alarm[6] = 1;
else{
   
    //Adicionar jogo
    games_title[select_index] = dialog_return;

    //Salvar altera√ß√£o
    ini_open(game_save_id+"collection\game_"+string(select_index)+".ini");
    ini_write_string("NINTY_ENTRY","title",string(dialog_return));
    ini_close();
    
    //Limpar inputs
    io_clear();
    delay = 5;
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Nova update?

//Ler informa√ß√µes
ini_open(game_save_id+"network\updatelog.ini");
version_new = real(ini_read_string("NINTY_UPDATE","version","0"));
version_url = ini_read_string("NINTY_UPDATE","url","https://");
ini_close();
        
//Se for nova vers√£o...
if(version &lt; version_new)
&amp;&amp;(!instance_exists(obj_helptour)){
        
    //Vers√µes em texto para Ninny
    vold = string_copy(string(version),1,1)+"."+string_copy(string(version),2,1)+"."+string_copy(string(version),3,1);
    vnew = string_copy(string(version_new),1,1)+"."+string_copy(string(version_new),2,1)+"."+string_copy(string(version_new),3,1);
    event_user(3);
    
    //Ninny avisa
    with(instance_create(0,0,obj_helptour)){
            
        update = 1;
        def_text = 30;
        event_user(2);
    };
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Definir fullscreen

//Fullscreen
window_set_fullscreen(fullscreen);

if(fullscreen == 0){

    //Recuperar posi√ß√£o/tamanho
    window_set_position(temp_x,temp_y);
    window_set_size(temp_w,temp_h);
    
    //Centralizar
    //alarm[3] = 2;
};
else
    window_set_position(-4000,-4000);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Centralizar janela
window_center();

//Lembrar posi√ß√£o/tamanho
temp_x = window_get_x();
temp_y = window_get_y();
temp_w = window_get_width();
temp_h = window_get_height();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Retomar launcher
io_clear();

//Tirar do modo suspenso
is_playing = 0;
draw_enable_drawevent(1);

//Determinar tempo de jogo
var t, _date, _hour, _minute;
_date = floor(date_minute_span(time_start,date_current_datetime()));
_hour = real(games_playtime[select_index,0]);
_minute = real(games_playtime[select_index,1]);
for(t = 0; t &lt; _date; t += 1){

    //Minuto
    if(_minute &lt; 60)
        _minute++;
    //Hora
    else{
    
        _minute = 0;
        _hour++;  
    };
};

//Incrementar
games_playtime[select_index,0] = string(clamp(_hour,0,9999));
games_playtime[select_index,1] = string(clamp(_minute,0,59));

//Salvar no arquivo
ini_open(game_save_id+"collection\game_"+string(select_index)+".ini");
ini_write_string("NINTY_ENTRY","0",base64_encode(games_playtime[select_index,0]));
ini_write_string("NINTY_ENTRY","1",base64_encode(games_playtime[select_index,1]));
ini_close();

//Reiniciar anima√ß√µes
wp_x = 0;
wp_y = 0;

//SFX
if(soundeffects == 1)
    audio_play_sfx(snd_launcher_open);

//Restaurar janela
window_command_run(window_command_restore);

//Recuperar posi√ß√£o/tamanho
alarm[4] = 2;

//Deletar .BAT
file_delete_fmns(game_save_id+"\gameboot.bat");

//Re-carregar assets (Lista, Thumbnails e Wallpaper)
event_user(1);

//Limpar inputs
io_clear();
delay = 15;

//Atualizar RPC
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Iniciar jogo
io_clear();

//Se launcher precisar ser suspenso...
if(boot_wait != ""){

    //Descarregar assets (RAM)
    event_user(2);
    
    //Ap√≥s jogo finalizado...
    alarm[2] = 5;
};

//Minimizar janela
window_command_run(window_command_minimize);
    
//Executar .BAT (E aguardar execu√ß√£o ser finalizada...)
ExecuteShell('"'+game_save_id+'gameboot.bat"',1,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Preparar para iniciar jogo

//Lembrar posi√ß√£o/tamanho
if(fullscreen == 0){

    temp_x = window_get_x();
    temp_y = window_get_y();
    temp_w = window_get_width();
    temp_h = window_get_height();
};

//Se launcher precisar ser suspenso...
if(boot_wait != ""){

    //Definir como suspenso
    is_playing = 1;
    draw_enable_drawevent(0);
    
    //Parar m√∫sica
    if(audio_exists(wallpaper_song))
        audio_stop_sound(wallpaper_song);
        
    //Definir posi√ß√£o/tamanho
    window_set_position(-9000,-9000);
    //window_set_size(16,16);
    
    //Come√ßar registro de tempo
    time_start = date_current_datetime();

    //Discord RPC
    if(nativerpc == 1){
    
        if(boot_attach == "")
            discord_update_presence(emoji_playing+string(games_title[select_index]),emoji_games+string(games_total)+" "+text_rpc[1],"rpc_"+string(iconrpc),"");
        else{
        
            //Remover tags
            var stg;
            stg = string(ds_map_find_value(forwarder_list,string(forwarder_select)+"_t"));
            discord_update_presence(emoji_playing+string_copy(stg,1,string_pos("(",stg)-1),emoji_forward+string(games_title[select_index]),"rpc_"+string(iconrpc),"");
        };
    };
};

//Criar .BAT direcionado ao local do jogo (evita falhas)
var test = file_text_open_write(game_save_id+"gameboot.bat")
file_text_write_string(test,filename_drive(games_path[select_index]));
file_text_writeln(test);
file_text_write_string(test,"cd "+filename_path(games_path[select_index])+"");
file_text_writeln(test);
if(boot_attach == "")
    file_text_write_string(test,'start "Ninty_Game_Boot" '+boot_res+''+boot_priority+''+boot_wait+'"'+filename_name(games_path[select_index])+'"');
else
    file_text_write_string(test,'start "Ninty_Game_Boot" '+boot_res+''+boot_priority+''+boot_wait+'"'+filename_name(games_path[select_index])+'" '+boot_attach);
file_text_writeln(test);
file_text_close(test);
    
//Prosseguir para inicializa√ß√£o
alarm[1] = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controladores
if(delay &gt; 0)
    delay--;

//Ignorar quando suspenso
if(is_playing == 1)
||(delay &gt; 0)
||(alarm[7] != -1)
||(alarm[8] != -1)
||(alarm[9] != -1)
||(alarm[10] != -1)
||(alarm[11] != -1)
    exit;

//Checar regi√£o fora do submenu
if(point_in_rectangle(mouse_x,mouse_y,0,0,320,720))
||(point_in_rectangle(mouse_x,mouse_y,321,0,1042,37))
||(point_in_rectangle(mouse_x,mouse_y,321,676,1042,720))
||(point_in_rectangle(mouse_x,mouse_y,959,94,1280,675))
||(point_in_rectangle(mouse_x,mouse_y,959,38,1042,93))
||(point_in_rectangle(mouse_x,mouse_y,1233,0,1280,93))
    outside_submenu = 1;
else
    outside_submenu = 0;

//------------- Forwarder -------------

//SE for permitido buscar n√≠veis...
if(forwarder_find == 1){
    
    //Enquanto existir algum arquivo durante busca...
    while(forwarder_file != undefined){
   
         //Se n√£o tiver nenhum arquivo...   
        if(forwarder_file == undefined)
        ||(forwarder_file == ""){
            
            //Terminar busca
            file_find_close();
          
            //Parar permiss√£o de busca
            forwarder_find = 0;
            forwarder_total--;
            
            //Posicionar seletor
            if(forwarder_total &gt; 0)
            &amp;&amp;(forwarder_subfolder == ""){
            
                if(games_subselect[select_index] &gt; forwarder_total){
            
                    if(forwarder_total &gt; 14)
                        forwarder_listoffset = forwarder_total-15;
                    else
                        forwarder_listoffset = 0;
                        
                    forwarder_select = forwarder_total-1;
                };
                else{
            
                    if(games_subselect[select_index] &gt; 14)
                        forwarder_listoffset = games_subselect[select_index]-14;
                    else
                        forwarder_listoffset = 0;
                        
                    forwarder_select = games_subselect[select_index];
                };
            };          
            else
                forwarder_select = 0;
            
            //Limpar
            cleanmem();
            
            //Parar loop
            break;
            exit;
         };
               
         //Buscar pelo pr√≥ximo
         forwarder_file = FS_file_find_next();
         
         //Incluir NOME do arquivo a lista
         ds_map_add(forwarder_list,string(forwarder_total)+"_t",string_copy(string_replace(filename_name(forwarder_file),filename_ext(forwarder_file),""),0,32));

         //Incluir NOME REAL (Com extens√£o) do arquivo a lista
         ds_map_add(forwarder_list,string(forwarder_total)+"_r",filename_name(forwarder_file));

         //Incluir EXTENS√ÉO do arquivo a lista
         ds_map_add(forwarder_list,string(forwarder_total)+"_e",string_upper(string_replace(filename_ext(forwarder_file),".","")));
                  
         //Incrementar total de aquivos
         forwarder_total++;
    };
};

//------------- Cor Seletor -------------

if(col_mod == 0){

    if(col_numb &lt; 1)
        col_numb += 0.05;
    else
        col_mod =! col_mod;
};
else{

    if(col_numb &gt; 0)
        col_numb -= 0.05;
    else
        col_mod =! col_mod;
};

//------------- Parental -------------

//Delay
if(parental_unlock &gt; 0)
    parental_unlock--;

//Anima√ß√£o
if(parental_control == 1){
    
    //Opacidade
    if(parental_fadeicons &gt; 0)
        parental_fadeicons -= 0.1;
    else
        parental_fadeicons = 0;
        
    //Scroll
    if(parental_offset &lt; 48-6)
        parental_offset += 6;
    else
        parental_offset = 48;
};
else{

    //Opacidade
    if(parental_fadeicons &lt; 1)
        parental_fadeicons += 0.1;
    else
        parental_fadeicons = 1;
        
    //Scroll    
    if(parental_offset &gt; 6)
        parental_offset -= 6;
    else
        parental_offset = 0;
};

//------------- Janela -------------
if((mouse_check_button(mb_right))
||(mouse_check_button(mb_middle)))
&amp;&amp;!(window_get_fullscreen()){

    //Mover
    window_set_position(display_mouse_get_x()-window_get_width()/2,display_mouse_get_y()-window_get_height()/2);
    temp_x = window_get_x();
    temp_y = window_get_y();
};

//------------- Controles -------------

//WASD
keyboard_set_map(ord("W"),vk_up);
keyboard_set_map(ord("A"),vk_left);
keyboard_set_map(ord("S"),vk_down);
keyboard_set_map(ord("D"),vk_right);

//Gamepad
var gp_count;
for(gp_count = 0; gp_count &lt; 5; gp_count += 1){

    if(gamepad_is_connected(gp_count))
    &amp;&amp;(dialog == 0){
         
        //Up (Stick)
        if(gp_stick[gp_count,0] == 0)
        &amp;&amp;(gamepad_axis_value(gp_count,gp_axislv) &lt;= -0.5){
        
            gp_stick[gp_count,0] = 1;
            keyboard_key_press(vk_up);
        };
        else if(gp_stick[gp_count,0] == 1)
        &amp;&amp;(gamepad_axis_value(gp_count,gp_axislv) &gt; -0.5){
        
            gp_stick[gp_count,0] = 0;
            keyboard_key_release(vk_up);
        };
    
        //Down (Stick)
        if(gp_stick[gp_count,1] == 0)
        &amp;&amp;(gamepad_axis_value(gp_count,gp_axislv) &gt;= 0.5){
        
            gp_stick[gp_count,1] = 1;
            keyboard_key_press(vk_down);
        };
        else if(gp_stick[gp_count,1] == 1)
        &amp;&amp;(gamepad_axis_value(gp_count,gp_axislv) &lt; 0.5){
        
            gp_stick[gp_count,1] = 0;
            keyboard_key_release(vk_down);
        };
        
        //Left (Stick)
        if(gp_stick[gp_count,2] == 0)
        &amp;&amp;(gamepad_axis_value(gp_count,gp_axislh) &lt;= -0.5){
        
            gp_stick[gp_count,2] = 1;
            keyboard_key_press(vk_left);
        };
        else if(gp_stick[gp_count,2] == 1)
        &amp;&amp;(gamepad_axis_value(gp_count,gp_axislh) &gt; -0.5){
        
            gp_stick[gp_count,2] = 0;
            keyboard_key_release(vk_left);
        };
    
        //Right (Stick)
        if(gp_stick[gp_count,3] == 0)
        &amp;&amp;(gamepad_axis_value(gp_count,gp_axislh) &gt;= 0.5){
        
            gp_stick[gp_count,3] = 1;
            keyboard_key_press(vk_right);
        };
        else if(gp_stick[gp_count,3] == 1)
        &amp;&amp;(gamepad_axis_value(gp_count,gp_axislh) &lt; 0.5){
        
            gp_stick[gp_count,3] = 0;
            keyboard_key_release(vk_right);
        };
    
        //Up - Fim da lista
        if(gamepad_button_check(gp_count,gp_padu))
            keyboard_key_press(vk_up);
        else if(gamepad_button_check_released(gp_count,gp_padu))
            keyboard_key_release(vk_up);
            
        //Down - Come√ßo da lista
        if(gamepad_button_check(gp_count,gp_padd))
            keyboard_key_press(vk_down);
        else if(gamepad_button_check_released(gp_count,gp_padd))
            keyboard_key_release(vk_down);
    
        //Left / L
        if(gamepad_button_check(gp_count,gp_padl))
            keyboard_key_press(vk_left);
        else if(gamepad_button_check_released(gp_count,gp_padl))
            keyboard_key_release(vk_left);
            
        if(gamepad_button_check(gp_count,gp_shoulderl))
            keyboard_key_press(vk_left);
        else if(gamepad_button_check_released(gp_count,gp_shoulderl))
            keyboard_key_release(vk_left);
        
        //Right / R
        if(gamepad_button_check(gp_count,gp_padr))
            keyboard_key_press(vk_right);
        else if(gamepad_button_check_released(gp_count,gp_padr))
           keyboard_key_release(vk_right);
           
        if(gamepad_button_check(gp_count,gp_shoulderr))
            keyboard_key_press(vk_right);
        else if(gamepad_button_check_released(gp_count,gp_shoulderr))
           keyboard_key_release(vk_right);

        //Generico (DirecInput)
        if(gp_count == 4){

            //1, 4 e Select - Mover
            if(gamepad_button_check_pressed(gp_count,gp_face1))
                keyboard_key_press(vk_shift);
            else if(gamepad_button_check_released(gp_count,gp_face1))
                keyboard_key_release(vk_shift);
                
            if(gamepad_button_check_pressed(gp_count,gp_face4))
                keyboard_key_press(vk_shift);
            else if(gamepad_button_check_released(gp_count,gp_face4))
                keyboard_key_release(vk_shift);
    
            if(gamepad_button_check_pressed(gp_count,gp_select))
                keyboard_key_press(vk_shift);
            else if(gamepad_button_check_released(gp_count,gp_select))
                keyboard_key_release(vk_shift);
                                
            //2 e Start - Iniciar
            if(gamepad_button_check_pressed(gp_count,gp_face2))
                keyboard_key_press(vk_enter);
            else if(gamepad_button_check_released(gp_count,gp_face2))
                keyboard_key_release(vk_enter);
                
            if(gamepad_button_check_pressed(gp_count,gp_start))
                keyboard_key_press(vk_enter);
            else if(gamepad_button_check_released(gp_count,gp_start))
                keyboard_key_release(vk_enter);
            
            //3 - Cancelar
            if(gamepad_button_check_pressed(gp_count,gp_face3))
                keyboard_key_press(vk_escape);
            else if(gamepad_button_check_released(gp_count,gp_face3))
                keyboard_key_release(vk_escape);
        };    
        //XBOX (XInput)
        else{
        
            //X, Y e Select - Mover
            if(gamepad_button_check_pressed(gp_count,gp_face3))
                keyboard_key_press(vk_shift);
            else if(gamepad_button_check_released(gp_count,gp_face3))
                keyboard_key_release(vk_shift);
                
            if(gamepad_button_check_pressed(gp_count,gp_face4))
                keyboard_key_press(vk_shift);
            else if(gamepad_button_check_released(gp_count,gp_face4))
                keyboard_key_release(vk_shift);
    
            if(gamepad_button_check_pressed(gp_count,gp_select))
                keyboard_key_press(vk_shift);
            else if(gamepad_button_check_released(gp_count,gp_select))
                keyboard_key_release(vk_shift);
                                
            //A e Start - Iniciar
            if(gamepad_button_check_pressed(gp_count,gp_face1))
                keyboard_key_press(vk_enter);
            else if(gamepad_button_check_released(gp_count,gp_face1))
                keyboard_key_release(vk_enter);
                
            if(gamepad_button_check_pressed(gp_count,gp_start))
                keyboard_key_press(vk_enter);
            else if(gamepad_button_check_released(gp_count,gp_start))
                keyboard_key_release(vk_enter);
            
            //B - Cancelar
            if(gamepad_button_check_pressed(gp_count,gp_face2))
                keyboard_key_press(vk_escape);
            else if(gamepad_button_check_released(gp_count,gp_face2))
                keyboard_key_release(vk_escape);
        };
    };
    if(gp_count &gt; 4)
        gp_count = 0;
};

//------------- Sobreposto -------------

if(mouse_check_button_released(mb_left)){

    //Minimizar
    if(point_in_rectangle(mouse_x,mouse_y,1063,41,1063+34,41+34)){
    
        window_command_run(window_command_minimize);
    };
    //Fullscreen
    if(point_in_rectangle(mouse_x,mouse_y,1121,41,1121+34,41+34))
    &amp;&amp;(alarm[4] == -1){
        
        audio_play_sfx(snd_window_open);
        fullscreen =! fullscreen;
        alarm[4] = 4;
    };
    //Fechar
    if(point_in_rectangle(mouse_x,mouse_y,1170,41,1170+34,41+34))
        game_end();
};
    
//Checagem de inputs
if(window_has_focus())
&amp;&amp;(alarm[0] == -1)
&amp;&amp;!(instance_exists(obj_helptour)){

//Voltar m√∫sica
if(audio_is_paused(wallpaper_song))
    audio_resume_sound(wallpaper_song);
        
//------------- Dialogo -------------

//Efeito blink (a cada 60 frames)
if(blink_delay &gt; 0)
    blink_delay--;
else{

    if(dialog != 0){
    
        if(string_length(dialog_return) &lt; 32){
        
            if(dialog_inputb == " ")
                dialog_inputb = "_";
            else
                dialog_inputb = " ";
        }
        else
             dialog_inputb = "";
    };
    
    if(clock_blink == " ")
        clock_blink = ":";
    else
        clock_blink = " ";
        
    //Pr√≥ximo
    blink_delay = 60;
};

//Inserir texto
if(dialog != 0){

    //Anima√ß√£o de transi√ß√£o (Come√ßo)
    if(dialog_filterright &lt; 1280)
        dialog_filterright += 128;
    dialog_filterleft = -1;
    
    if(window_has_focus()){
    
        //Confirmar
        if((keyboard_check_pressed(vk_enter))
        ||(mouse_check_button_released(mb_left)))
        &amp;&amp;(dialog_filterright &gt; 1279)
        &amp;&amp;!(point_in_rectangle(mouse_x,mouse_y,1063,41,1170+34,41+34)){
        
            delay = 5;
            audio_play_sfx(snd_addgame_step3);
            dialog = 0;
            exit;
        };
        
        //Clipboard
        if(keyboard_check(vk_control)){
        
            //Colar
            if(keyboard_check_pressed(ord("V"))){
            
                audio_play_sfx(snd_keyboard);
                keyboard_string = string_copy(clipboard_get_text(),0,32);
                dialog_return = string_copy(clipboard_get_text(),0,32);
            };
            //Copiar
            else if(keyboard_check_pressed(ord("C"))){
            
                audio_play_sfx(snd_keyboard);
                clipboard_set_text(dialog_return);
            };
        };
        else{
        
            //SFX de tecla
            if(keyboard_check_pressed(vk_anykey))
                audio_play_sfx(snd_keyboard);
            
            //Trocar caracteres inv√°lidos
            if(keyboard_check(vk_anykey)){
            
                var stg_a,stg_b,stg_c;
                stg_a = string_copy(keyboard_string,0,32);
                stg_b = string_replace(stg_a,'#',"");
                stg_c = string_replace(stg_b,"'","");
                keyboard_string = stg_c;
                dialog_return = stg_c;
            };
        };
        
        //Pesquisar jogo
        if(dialog == 2){
        
            var s;
            for(s=0; s&lt;games_total; s+=1){
                
                //if(dialog_return == string_copy(games_title[s],1,string_count(dialog_return,dialog_return))){
                if(string_lower(dialog_return) == string_lower(string_copy(games_title[s],1,string_length(dialog_return)))){
                
                    if(select_index != s){
                    
                        offset_v = 0;
                        select_index = s;
    
                        //Checar arquivo
                        if(file_exists_fmns(games_path[select_index])) select_exists = 1;
                        else select_exists = 0;
                    };
                    break;
                };
            };
        };
    };
    exit;
};
else{

    //Anima√ß√£o de transi√ß√£o (Fim)
    if(dialog_filterright &gt;= 1280){
    
        if(dialog_filterleft &lt; 1280)
            dialog_filterleft += 128;
        else{

            dialog_filterright = -1;
            dialog_filterleft = -1;
        };
    };
};

//------------- Cancelar a√ß√µes -------------

if((keyboard_check_pressed(vk_escape))
||(keyboard_check_pressed(vk_backspace))){
                  
    //Configura√ß√µes...
    if(settingsmenu == 1){
        
        //SFX
        audio_play_sfx(snd_updated);
        settingsmenu = 0;
    };
    
    //Forwarder...      
    if(forwarder == 1){
        
        //SFX
        audio_play_sfx(snd_window_close);
        
        //Sair de subpasta
        if(forwarder_subfolder != "")
        &amp;&amp;(forwarder_find == 0){
                            
            //Limpar lista anterior
            ds_map_clear(forwarder_list);
                            
            //Reiniciar posi√ß√£o e total
            forwarder_select = 0;
            forwarder_subfolder = "";
            forwarder_subfolder_path = "";
            forwarder_total = 0;
            forwarder_listoffset = 0;

            //Procurar primeiro arquivo...
            forwarder_file = FS_file_find_first(filename_path(games_forwarder[select_index])+"*",fa_directory);
                            
            //Permitir procurar pr√≥ximos
            forwarder_find = 1;
        };
        //Fechar
        else
            forwarder = 0;
    };
    
    //Movimento dos jogos...
    if(move == 1){
    
        delay = 5;
        
        //SFX
        audio_play_sfx(snd_window_close);
                            
        //Finalizar
        move = 0;
        move_origin = -1;
    };
};
if(mouse_check_button_released(mb_left))
&amp;&amp;(outside_submenu == 1){
    
     //Forwarder...      
    if(forwarder == 1){

        //SFX
        audio_play_sfx(snd_window_close);
        forwarder = 0;
        exit;
    };   
}

//------------- Bloqueio da interface -------------

if(point_in_rectangle(mouse_x,mouse_y,77,41,77+34,41+34)){
        
    if(mouse_check_button_pressed(mb_left)){
    
        if(parental_unlock &gt;= 30){
        
            audio_play_sfx(snd_parentalcontrol);
            parental_control =! parental_control;
            parental_unlock = 0;
            parental_fade = 3;
        };
        else
            parental_unlock += 29;
    };
};

//------------- Icones de op√ß√µes -------------


//Pesquisar jogo
if(keyboard_check_pressed(vk_space)){

    if(alarm[6] == -1)
    &amp;&amp;(alarm[7] == -1)
    &amp;&amp;(alarm[8] == -1)
    &amp;&amp;(alarm[9] == -1)
    &amp;&amp;(dialog == 0)
    &amp;&amp;(forwarder == 0)
    &amp;&amp;(settingsmenu == 0)
    &amp;&amp;(infopopup == 0)
    &amp;&amp;(move == 0)
    &amp;&amp;(async_thumbnail == -1)
    &amp;&amp;(parental_control == 0)
    &amp;&amp;(games_total &gt; 0){
    
        audio_play_sfx(snd_changetitle);
        dialog_description = text_icon[2]+":";
        keyboard_string = "";
        dialog_return = "";
        dialog = 2;
    };
};

if(alarm[6] == -1)
&amp;&amp;(alarm[7] == -1)
&amp;&amp;(alarm[8] == -1)
&amp;&amp;(alarm[9] == -1)
&amp;&amp;(dialog == 0)
&amp;&amp;(forwarder == 0)
&amp;&amp;(settingsmenu == 0)
&amp;&amp;(infopopup == 0)
&amp;&amp;(move == 0)
&amp;&amp;(async_thumbnail == -1)
&amp;&amp;(parental_control == 0){

    
    //Seletor de icones
    if(point_in_rectangle(mouse_x,mouse_y,328,504,328+86,504+86)) icon_select = 0;
    else if(point_in_rectangle(mouse_x,mouse_y,436,504,436+86,504+86)) icon_select = 1;
    else if(point_in_rectangle(mouse_x,mouse_y,544,504,544+86,504+86)) icon_select = 2;
    else if(point_in_rectangle(mouse_x,mouse_y,653-parental_offset,504,(653+86)-parental_offset,504+86)) icon_select = 3;
    else if(point_in_rectangle(mouse_x,mouse_y,761-parental_offset,504,(761+86)-parental_offset,504+86)) icon_select = 4;
    else if(point_in_rectangle(mouse_x,mouse_y,869-parental_offset,504,(869+86)+parental_offset,504+86)) icon_select = 5;
    else icon_select = -1;
       
    //Icones
    if(mouse_check_button_released(mb_left)){
            
        //Configura√ß√µes do Launcher
        if(point_in_rectangle(mouse_x,mouse_y,595,662,595+44,662+44)){
        
            if(settingsmenu == 0)
            &amp;&amp;(settingsmenu_fade == 0){
            
                settingsmenu = 1;
                
                //SFXsnd_settings
                audio_play_sfx(snd_settings);
            };
        };
        //Informa√ß√µes do Launcher
        if(point_in_rectangle(mouse_x,mouse_y,641,662,641+44,662+44)){
        
            if(infopopup == 0)
            &amp;&amp;(infopopup_fade == 0){
            
                infopopup = 1;
                
                //SFX
                audio_play_sfx(snd_window_open);
            };
        };
            
        //----------------
    
        //Deletar jogo
        if(icon_select == 0)
        &amp;&amp;(games_total &gt; 0){
        
            //Chamar Ninny
            with(instance_create(0,0,obj_helptour)){
                    
                update = 2;
                update_select = 1;
                def_text = 32;
                event_user(2);
            };
        };
          
        //Alterar jogo
        if(icon_select == 1)
        &amp;&amp;(games_total &gt; 0){
        
            audio_play_sfx(snd_changethumbnail);
            window_set_fullscreen(0);
            alarm[9] = 4;
        };
          
        //Pesquisar jogo
        if(icon_select == 2)
        &amp;&amp;(games_total &gt; 0)
        &amp;&amp;(dialog == 0){
        
            audio_play_sfx(snd_changetitle);
            dialog_description = text_icon[2]+":";
            keyboard_string = "";
            dialog_return = "";
            dialog = 2;
        };
               
        //Tema (Branco/Preto)
        if(icon_select == 3){
        
            theme =! theme;
            if(theme == 0)
                audio_play_sfx(snd_theme_white);
            else
                audio_play_sfx(snd_theme_black);
        };
    
        //Alterar wallpaper
        if(icon_select == 4){
        
            audio_play_sfx(snd_wallpaper);
            window_set_fullscreen(0);
            alarm[8] = 4;
        };
        
        //Adicionar jogo
        if(icon_select == 5){
        
            audio_play_sfx(snd_addgame);
            window_set_fullscreen(0);
            alarm[7] = 4;
        };
    };
};
else
    icon_select = -1;

//------------- Menu de Forwarder -------------
if(forwarder == 1)
&amp;&amp;(forwarder_fade &gt; 0.1){

    //Abri pasta
    if(point_in_rectangle(mouse_x,mouse_y,347,67,931,105)){
        
        if(mouse_check_button_released(mb_left)){
        
            ExecuteShell('"'+games_forwarder[select_index]+'"',0,0);
        };
    };
};
if(forwarder == 1)
&amp;&amp;(forwarder_fade &gt; 0.1)
&amp;&amp;(forwarder_total &gt; 0){
    
    //Navega√ß√£o com mouse
    if(mouse_x &gt; 350) 
    if(mouse_y &gt; 110)
    if(mouse_x &lt; 350+575)
    if(mouse_y &lt; 110+496){
    
        //Selecionar
        var f;
        for(f=0; f&lt;15; f+=1){
        
            if(mouse_y &gt; 125+(32*f)){
            
                if(forwarder_select &gt; forwarder_listoffset-1)
                if(forwarder_select &lt; forwarder_listoffset+15)
                    forwarder_select = f+forwarder_listoffset;
            };
        };
        
        //Iniciar
        if(mouse_check_button_released(mb_left)){
        
            keyboard_key_press(vk_enter);
            keyboard_key_release(vk_enter);
        };        
    };
    
    //Navega√ß√£o r√°pida (Loop)
    if(keyboard_check(vk_down)){
    
        //Intervalo
        if(nav_time &gt; 0)
            nav_time--;
        else{
        
            //Delay em frames
            nav_time = 2;
            
            //Pr√≥ximo
            if(forwarder_select &lt; forwarder_total-1){
            
                forwarder_select++;
                if(forwarder_select &gt; forwarder_listoffset+14)
                    forwarder_listoffset++;
                audio_play_sfx(snd_select_next);
            };            
            else{
                
                if(forwarder_total &gt; 14)
                    forwarder_listoffset = 0;
                forwarder_select = 0;
                audio_play_sfx(snd_select_border);
            };
        };
    };
    else if(keyboard_check(vk_up)){
    
        //Intervalo
        if(nav_time &gt; 0)
            nav_time--;
        else{
            
            //Delay em frames
            nav_time = 2;
                    
            //Anterior
            if(forwarder_select &gt; 0){
            
                forwarder_select--;
                if(forwarder_select &lt; forwarder_listoffset)
                    forwarder_listoffset--;
                audio_play_sfx(snd_select_previous);
            };
            else{
            
                if(forwarder_total &gt; 14)
                    forwarder_listoffset = forwarder_total-15;
                forwarder_select = forwarder_total-1;
                audio_play_sfx(snd_select_border);
            };
        };
    };
    else
        nav_time = 30;

    //Normal
    if(keyboard_check_pressed(vk_down)){
        
        //Pr√≥ximo
        if(forwarder_select &lt; forwarder_total-1){
        
            forwarder_select++;
            if(forwarder_select &gt; forwarder_listoffset+14)
                forwarder_listoffset++;
            audio_play_sfx(snd_select_next);
        };
        else{
            
            if(forwarder_total &gt; 14)
                forwarder_listoffset = 0;
            forwarder_select = 0;
            audio_play_sfx(snd_select_border);
        };
    };
    else if(keyboard_check_pressed(vk_up)){
    
        //Anterior
        if(forwarder_select &gt; 0){
        
            forwarder_select--;
            if(forwarder_select &lt; forwarder_listoffset)
                forwarder_listoffset--;
            
            audio_play_sfx(snd_select_previous);
        };
        else{
        
            if(forwarder_total &gt; 14)
                forwarder_listoffset = forwarder_total-15;
            forwarder_select = forwarder_total-1;
            audio_play_sfx(snd_select_border);
        };
    };
};

//------------- Menu de Configura√ß√µes -------------
if(settingsmenu == 1)
&amp;&amp;(settingsmenu_fade &gt; 0.1){
    
    settingsmenu_select = -1;
    
    //Navega√ß√£o
    if(mouse_x &gt; 350) 
    if(mouse_y &gt; 110)
    if(mouse_x &lt; 350+575)
    if(mouse_y &lt; 110+540){
    
        if(mouse_y &gt; 125) settingsmenu_select = 0;
        if(mouse_y &gt; 125+(32*1)) settingsmenu_select = 1;
        if(mouse_y &gt; 125+(32*2)) settingsmenu_select = 2;
        if(mouse_y &gt; 125+(32*3)) settingsmenu_select = 3;
        if(mouse_y &gt; 125+(32*4)) settingsmenu_select = 4;
        if(mouse_y &gt; 125+(32*5)) settingsmenu_select = 5;
        if(mouse_y &gt; 125+(32*6)) settingsmenu_select = 6;
        if(mouse_y &gt; 125+(32*7)+32) settingsmenu_select = 7;
        if(mouse_y &gt; 125+(32*8)+32) settingsmenu_select = 8;
        if(mouse_y &gt; 125+(32*9)+64) settingsmenu_select = 9;
        if(mouse_y &gt; 125+(32*10)+64) settingsmenu_select = 10;
    };
    
    //A√ß√µes e op√ß√µes
    if(mouse_check_button_released(mb_left)){
    
        //Idioma
        if(settingsmenu_select == 0){
        
            if(language &lt; text_settings_language_total)
                language++;
            else
                language = 0;
            
            //Mudar idioma
            event_user(3);
            
            //Atualizar RPC
            event_user(0);
        };
        //Renderiza√ß√£o da Interface
        else if(settingsmenu_select == 1){
        
            uirender =! uirender;
          
            //Defini√ß√µes de display
            event_user(6);
        };
        //Efeitos Sonoros
        else if(settingsmenu_select == 2){
        
            soundeffects =! soundeffects;
            
            //Volume dos SFXs
            audio_group_set_gain(sound_effects,soundeffects,0);
        };
        //Propor√ß√£o dos jogos
        else if(settingsmenu_select == 3){
        
            if(windowmode &lt; 2)
                windowmode++;
            else
                windowmode = 0;
        };
        //Prioridade dos jogos
        else if(settingsmenu_select == 4){
        
            if(gamepriority &lt; 2)
                gamepriority++;
            else
                gamepriority = 0;
        };
        //Checar atualiza√ß√µes
        else if(settingsmenu_select == 5)
            updateninty =! updateninty;
        //Atualizar base de dados
        else if(settingsmenu_select == 6)
            updatedatabase =! updatedatabase;
        //Pasta de Perfil
        else if(settingsmenu_select == 7){
            ExecuteShell(game_save_id,0,0);
        };
        //Guia Interativo
        else if(settingsmenu_select == 8){
        
            if!(instance_exists(obj_helptour)){
                
                with(instance_create(0,0,obj_helptour)){
                    event_user(2);
                };
                exit;
            };
        };
        //Discord RPC
        else if(settingsmenu_select == 9){
        
            nativerpc =! nativerpc;
            
            //Rich Presence
            if(nativerpc == 1){
            
                discord_init_dll();
                discord_init_app("518643988778057729");
                discord_update_presence("","","","");
                
                //Atualizar RPC
                event_user(0);
            };
            else{
            
                //Desativar RPC
                discord_free_app();
                discord_free_dll();
            };
        }; 
        //Icone Discord RPC
        else if(settingsmenu_select == 10){

            //Icone
            if(mouse_x &gt; 348) iconrpc = 0;
            if(mouse_x &gt; 348+(152*1)) iconrpc = 1;
            if(mouse_x &gt; 348+(152*2)) iconrpc = 2;
            if(mouse_x &gt; 348+(152*3)) iconrpc = 3;
            
            //Atualizar RPC
            event_user(0);
        };
        //Fechar
        if(outside_submenu == 1){
        
            //SFX
            audio_play_sfx(snd_updated);
            settingsmenu = 0;
            exit;
        };  
        //SFX
        if(settingsmenu_select &gt; -1)   
            audio_play_sfx(snd_window_open);
    };
};
            
//Retirar Popup de informa√ß√µes
if(infopopup == 1)
&amp;&amp;(infopopup_fade == 1){

    if(keyboard_check_pressed(vk_anykey))
    ||(mouse_check_button_released(mb_left)){
    
        //P√°gina do Launcher (Pop-up)
        if(point_in_rectangle(mouse_x,mouse_y,411,82,411+441,82+140))
            url_open("https://github.com/MarioSilvaGH/Ninty-Launcher");
        else{
        
            if(mouse_check_button_released(mb_left)){
            
                if(outside_submenu == 0)
                    exit;
            };
        
            //SFX
            audio_play_sfx(snd_window_close);
            infopopup = 0;
            exit;
        };
    };
};

//------------- Sele√ß√£o de Jogos -------------
if(games_total &gt; 0)
&amp;&amp;(dialog == 0)
&amp;&amp;(async_thumbnail == -1)
&amp;&amp;(settingsmenu == 0){

    //Bloquear navega√ß√£o enquanto estiver em menu de forwarder...
    if(forwarder == 0){
    
        //Mover jogo...
        if(move == 0)
        &amp;&amp;(parental_control == 0){
            
            //...com teclado
            if(keyboard_check_pressed(vk_shift)){
            
                move = 1;
                move_origin = select_index;
                
                //SFX
                audio_play_sfx(snd_window_open);
            };
            //...com mouse
            else if(mouse_check_button(mb_left)){
    
            
                //Rolagem (de acordo com offset)
                var b_offset;
                if(select_index &gt; 1)
                    b_offset = 502+(-276*select_index);
                else
                    b_offset = 98;
                    
                //Jogo selecioando
                if(point_in_rectangle(mouse_x,mouse_y,b_offset+(276*select_index),194+parental_offset,b_offset+256+(276*select_index),(194+256)+parental_offset)){
         
                    //Esperar...
                    mov_time++;
                    
                    //Mover quando passar tempo suficiente segurando
                    if(mov_time &gt; 30){
                        
                        move = 1;
                        move_origin = select_index;
                            
                        //SFX
                        audio_play_sfx(snd_window_open);
                    };
                };
                else
                    mov_time = 0;
            };
            else
                mov_time = 0;
        };
                                    
        //Navega√ß√£o por Mouse
        if(mouse_check_button_released(mb_left)){
           
            //Rolagem (de acordo com offset)
            var q_offset;
            if(select_index &gt; 1)
                q_offset = 502+(-276*select_index);
            else
                q_offset = 98;
                    
            //Alterar nome
            if(point_in_rectangle(mouse_x,mouse_y,q_offset+(276*select_index),125-offset_v+parental_offset,q_offset+256+(276*select_index),(125+52)-offset_v+parental_offset))
            &amp;&amp;(parental_control == 0){
                
                audio_play_sfx(snd_changetitle);
                dialog_description = text_dialog[0];
                keyboard_string = games_title[select_index];
                dialog_return = games_title[select_index];
                dialog = 1;
                alarm[6] = 1;       
            };

            //Lista de jogos (Mostrar apenas oque esta na tela)
            var q, q_start, q_end;
            if(select_index &gt; 1){
            
                q_start = select_index-2;
                q_end = select_index+3;
            };
            else{
            
                q_start = 0;
                q_end = select_index+5;
            };
            
            for(q=q_start; q&lt;q_end; q+=1){
                
                //Sele√ß√£o
                if(point_in_rectangle(mouse_x,mouse_y,q_offset+(276*q),194+parental_offset,q_offset+256+(276*q),(194+256)+parental_offset))
                &amp;&amp;!(q &lt; 0)
                &amp;&amp;!(q &gt; games_total-1){
                
                    //Efeito
                    if(q == select_index){
                    
                        if(mov_time == 0){
                        
                            keyboard_key_press(vk_enter);
                            keyboard_key_release(vk_enter);
                        };
                        else
                            mov_time = 0;
                    };
                    if(q &lt; select_index){
                        
                        offset_v = 0;
                        select_index = q;
                        audio_play_sfx(snd_select_previous);   
                    
                        //Checar arquivo
                        if(file_exists_fmns(games_path[select_index])) select_exists = 1;
                        else select_exists = 0;
                        exit;                     
                    };
                    if(q &gt; select_index){
                    
                        offset_v = 0;
                        select_index = q;
                        audio_play_sfx(snd_select_next);
                        
                        //Checar arquivo
                        if(file_exists_fmns(games_path[select_index])) select_exists = 1;
                        else select_exists = 0;
                        exit;
                    };
                };
            };
        };
        //Navega√ß√£o r√°pida (Loop)
        else if(keyboard_check(vk_right)){
        
            //Intervalo
            if(nav_time &gt; 0)
                nav_time--;
            else{
            
                //Delay em frames
                nav_time = 5;
                
                //Pr√≥ximo
                if(select_index &lt; games_total-1){
                
                    select_index++;
                    audio_play_sfx(snd_select_next);
                    
                    //Checar arquivo
                    if(file_exists_fmns(games_path[select_index])) select_exists = 1;
                    else select_exists = 0;
                };
            };
        };
        else if(keyboard_check(vk_left)){
        
            //Intervalo
            if(nav_time &gt; 0)
                nav_time--;
            else{
                
                //Delay em frames
                nav_time = 5;
                        
                //Anterior
                if(select_index &gt; 0){
                
                    select_index--;
                    audio_play_sfx(snd_select_previous);
        
                    //Checar arquivo
                    if(file_exists_fmns(games_path[select_index])) select_exists = 1;
                    else select_exists = 0;
                };
            };
        };
        else
            nav_time = 30;
    
        //Normal
        if(keyboard_check_pressed(vk_right)){
            
            mov_time = 0;
            offset_v = 0;
            
            //Pr√≥ximo
            if(select_index &lt; games_total-1){
            
                select_index++;
                audio_play_sfx(snd_select_next);
                
                //Checar arquivo
                if(file_exists_fmns(games_path[select_index])) select_exists = 1;
                else select_exists = 0;
            };
            else
                audio_play_sfx(snd_select_border);
        };
        else if(keyboard_check_pressed(vk_left)){
        
            mov_time = 0;
            offset_v = 0;
            
            //Anterior
            if(select_index &gt; 0){
            
                select_index--;
                audio_play_sfx(snd_select_previous);
                
                //Checar arquivo
                if(file_exists_fmns(games_path[select_index])) select_exists = 1;
                else select_exists = 0;
            };
            else
                audio_play_sfx(snd_select_border);
        };
        else if(keyboard_check_pressed(vk_up)){
        
            mov_time = 0;
            offset_v = 0;
            
            //Fim
            select_index = games_total-1;
            audio_play_sfx(snd_select_border);
            
            //Checar arquivo
            if(file_exists_fmns(games_path[select_index])) select_exists = 1;
            else select_exists = 0;
        };
        else if(keyboard_check_pressed(vk_down)){
        
            mov_time = 0;
            offset_v = 0;
            
            //Come√ßo
            select_index = 0;
            audio_play_sfx(snd_select_border);
            
            //Checar arquivo
            if(file_exists_fmns(games_path[select_index])) select_exists = 1;
            else select_exists = 0;
        };
    };

    //Multi-fun√ß√µes para tecla Enter
    if(keyboard_check_pressed(vk_enter)){
    
        //Enter + Alt
        if(keyboard_check(vk_alt)){
            
            //Fullscreen
            audio_play_sfx(snd_window_open);
            fullscreen =! fullscreen;
            alarm[4] = 4;
        };
        //Padr√µes
        else{

            //Confirmar ap√≥s mover
            if(move == 1){
                
                mov_time = 0;
                
                //Se for local diferente...
                if(select_index != move_origin){
                        
                    //SFX
                    audio_play_sfx(snd_move_pick);
                    games_title[select_index] = text_moving;
                            
                    //Copiar
                    move_temp_title = games_title[move_origin];
                    move_temp_path = games_path[move_origin];
                    move_temp_forwarder = games_forwarder[move_origin];
                    move_temp_subselect = games_subselect[move_origin];
                    move_temp_shortcut = games_shortcut[move_origin];
                    move_temp_animframes = games_animframes[move_origin];
                    move_temp_animspeed = games_animspeed[move_origin];
                    move_temp_playtime[0] = games_playtime[move_origin,0];
                    move_temp_playtime[1] = games_playtime[move_origin,1];
                    move_temp_thumbnail = sprite_duplicate(games_thumb[move_origin]);
                            
                    //Deletar de origem
                    sprite_delete(games_thumb[move_origin]);
                            
                    //Renomear arquivo de origem temporariamente...
                    file_rename_fmns(game_save_id+"collection\game_"+string(move_origin)+".ini",game_save_id+"collection\game_TMP.ini");
                    file_rename_fmns(game_save_id+"collection\game_"+string(move_origin)+".png",game_save_id+"collection\game_TMP.png");
                            
                    //Mover arquivo destino apra de origem...
                    alarm[11] = 10;
                };
                //Voltar a local de origem...
                else{
                        
                    //SFX
                    audio_play_sfx(snd_window_close);
                            
                    //Finalizar
                    move = 0;
                    move_origin = -1;
                };
            };
            //Iniciar...
            else{

                //Checar se software existe
                if(select_exists == 1)
                &amp;&amp;(network == 0){
                        
                    //SE for um forwarder...    
                    if(games_forwarder[select_index] != "")
                    &amp;&amp;(forwarder == 0){
                        
                        //SFX
                        audio_play_sfx(snd_window_open);
                        forwarder = 1;
                            
                        //Procurar primeiro arquivo...
                        forwarder_file = FS_file_find_first(filename_path(games_forwarder[select_index])+"*",fa_directory);
                            
                        //Permitir procurar pr√≥ximos
                        forwarder_find = 1;
                        
                        exit;
                    };
                        
                    //Iniciar m√°ximizado/janela
                    if(windowmode == 0){
                    
                        if(fullscreen == 1)
                            boot_res = "/MAX ";
                        else
                            boot_res = "";
                    };
                    else if(windowmode == 1)
                        boot_res = "";
                    else if(windowmode == 2)
                        boot_res = "/MAX ";
                        
                    //Prioridade do processo
                    if(gamepriority == 2)
                        boot_priority = "/LOW ";
                    else if(gamepriority == 1)
                        boot_priority = "/HIGH ";
                    else
                        boot_priority = "";
                        
                    //Iniciar e suspender
                    if(games_shortcut[select_index] == 0)
                        boot_wait = "/WAIT ";
                    else
                        boot_wait = "";
            
                    //Forwarder
                    if(forwarder != 0)
                    &amp;&amp;(forwarder_select &gt; 0)
                    &amp;&amp;(forwarder_find == 0){
                    
                        //Abrir subpasta
                        if(filename_ext(string(ds_map_find_value(forwarder_list,string(forwarder_select)+"_e"))) == "")
                        &amp;&amp;(forwarder_subfolder == ""){
                            
                            var _f_path = string(ds_map_find_value(forwarder_list,string(forwarder_select)+"_r"));
                            var _f_name = string(ds_map_find_value(forwarder_list,string(forwarder_select)+"_t"));
                            
                            //Salvar posi√ß√£o
                            games_subselect[select_index] = forwarder_select;
                            ini_open(game_save_id+"collection\game_"+string(select_index)+".ini");
                            ini_write_string("NINTY_ENTRY","subselect",string(forwarder_select));
                            ini_close();
                            
                            //Limpar lista anterior
                            ds_map_clear(forwarder_list);
                            
                            //SFX
                            audio_play_sfx(snd_window_open);
                            
                            //Reiniciar posi√ß√£o e total
                            forwarder_select = 0;
                            forwarder_total = 0;
                            forwarder_listoffset = 0;
                            
                            //Lembrar que subpasta foi aberta
                            forwarder_subfolder = " &gt; "+string_copy(_f_name,0,12)+"...";
                            
                            //Procurar primeiro arquivo dentro da subpasta de destino...
                            forwarder_subfolder_path = filename_name(_f_path)+"\";
                            forwarder_file = FS_file_find_first(games_forwarder[select_index]+_f_path+"\*",fa_directory);
                                
                            //Permitir procurar pr√≥ximos
                            forwarder_find = 1;
                            
                            exit;
                        };
                        else
                            boot_attach = '"'+games_forwarder[select_index]+forwarder_subfolder_path+string(ds_map_find_value(forwarder_list,string(forwarder_select)+"_r"))+'"';
                    };
                    else
                        boot_attach = "";
                                
                    window_set_fullscreen(0);
                    audio_play_sfx(snd_launcher_startgame);
                    alarm[0] = 25;
                };
            };       
        };
    };
};

};

//Standby
if(os_is_paused())
&amp;&amp;!(instance_exists(obj_helptour)){

    io_clear();
    
    //Pausar m√∫sica
    if(audio_exists(wallpaper_song))
        audio_pause_sound(wallpaper_song);
    
    //SFX
    audio_play_sfx(snd_launcher_close);
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Atualizar...

//Base de thumbnails autom√°ticas (thumbdb.ini)
if(ds_map_find_value(async_load,"id") == async_database){

    //Sinalizar que est√° baixando...
    network = 1;
    
    //Se download finalizar...
    if(ds_map_find_value(async_load,"status") &gt;= 0)
        network = 0;
    else
        network = 0;
};

//Aviso de update do launcher
if(ds_map_find_value(async_load,"id") == async_update){

    //Sinalizar que est√° baixando...
    network = 1;
    
    //Se download finalizar...
    if(ds_map_find_value(async_load,"status") &gt;= 0){
    
        network = 0;
        
        //Prosseguir...
        alarm[5] = 15;
    };
    else
        network = 0;
};

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mover imagem para destino ap√≥s baixar (Adicionar jogo)
if(ds_map_find_value(async_load,"id") == games_thumb[async_thumbnail]){
    
    //Se download finalizar...
    if(ds_map_find_value(async_load,"status") &gt;= 0){
    
        //Salvar thumbnail na pasta
        sprite_save_strip(games_thumb[async_thumbnail],game_save_id+"collection\game_"+string(async_thumbnail)+".png");
        
        //Finalizado
        async_thumbnail = -1;
        network = 0;
    };
    else
        network = 0;
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Remover jogo

//Deletar sprite
sprite_delete(games_thumb[select_index]);
            
//Nulo
games_title[select_index] = text_deleting;
games_playtime[select_index,0] = "0";
games_playtime[select_index,1] = "0";
      
//Deletar arquivos
file_delete_fmns(game_save_id+"collection\game_"+string(select_index)+".png");
file_delete_fmns(game_save_id+"collection\game_"+string(select_index)+".ini");
                          
//Deletar ultimo (sendo o ultimo selecionado)
if(select_index == games_total-1)
&amp;&amp;(select_index &gt; 0){
    
    //Apagar apenas esse
    games_path[select_index] = "";
    games_forwarder[select_index] = "";
    games_subselect[select_index] = 0;
    games_shortcut[select_index] = 0;
    games_animframes[select_index] = 1;
    games_animspeed[select_index] = 0
                    
    //Decrementar
    audio_play_sfx(snd_alert);
    games_total--;            
    select_index--;
                    
    //Salvar total de jogos
    ini_open(game_save_id+"collection\_total.ini");
    ini_write_string("NINTY_ENTRY","total",string(games_total));
    ini_close();
        
    //Checar arquivo
    if(file_exists_fmns(games_path[select_index])) select_exists = 1;
    else select_exists = 0;
                                
    //Limpar
    cleanmem();
        
    //Atualizar RPC
    event_user(0);
};
//Mover tudo
else{
            
    audio_play_sound(snd_loading,0,1);
    move_rest = select_index;
    alarm[10] = 10;
};

//Limpar inputs
keyboard_clear(keyboard_lastkey);
mouse_clear(mouse_lastbutton);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Defini√ß√µes de Display

//Metodo de renderiza√ß√£o
if(uirender == 1)
    display_set_windows_vertex_buffer_method(vbm_fast);
else{
            
    display_reset(0,0);
    display_set_windows_vertex_buffer_method(vbm_most_compatible);  
};

//Menor que 1080p
if(display_get_width() &lt; 1920-8){
    
    //Menor que 720p (Adequado para 4:3)
    if(display_get_width() &lt; 1280-8){
        
        //Ainda menor... (WTf? algu√©m tem display menor que isso?)
        if(display_get_width() &lt; 800-8){

            if(uirender == 1) display_reset(0,1); //AA: x0
            window_set_size(320,180);
        };
        else{

            if(uirender == 1) display_reset(2,1); //AA: x2
            window_set_size(640,360);
        };
    };
    else{

        if(uirender == 1) display_reset(6,1); //AA: x6
        window_set_size(800,450);
    };
};
else{

    if(uirender == 1) display_reset(8,1); //AA: x8
    window_set_size(1280,720);  
};

//Tamanho padr√£o da interface relativa ao display
display_set_gui_size(1280,720);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Interface gr√°fica

//Ignorar quando suspenso
if(is_playing == 1)
    exit;

//------------- Wallpaper -------------

//Cor HUE para elementos genrais
var theme_color;
if(wallpaper_huecolor &gt; 0)
    theme_color = make_colour_hsv(wallpaper_huecolor,255,255);
else
    theme_color = c_white;
    
//Cor HUE para seletor/cursor
var c_col_d, c_col_l;
if(wallpaper_huecursor &gt; 0){
    
    c_col_l = make_colour_hsv(wallpaper_huecursor,wallpaper_sat1cursor,wallpaper_lum1cursor);
    c_col_d = make_colour_hsv(wallpaper_huecursor,wallpaper_sat2cursor,wallpaper_lum2cursor);
};
else{

    c_col_l = c_aqua;
    c_col_d = c_teal;
};

//Cor
if(theme == 1)
    draw_background_tiled_ext(bgr_dark,0,0,1,1,theme_color,1);
else
    draw_background_tiled_ext(bgr_light,0,0,1,1,theme_color,1);

var icon_opc;

//Customizado
if(sprite_exists(wallpaper)){
    
    //Opacidade dos icones
    if(wallpaper_opaquebuttons == 0)
        icon_opc = 12;
    else
        icon_opc = 0;
    
    //Anima√ß√µes
    if(alarm[10] == -1)
    &amp;&amp;(alarm[11] == -1){
        
        //Anima√ß√£o
        if(wallpaper_animframes &gt; 1)
        &amp;&amp;(wallpaper_animspeed &gt; 0){
                
            if(anim_wallpaper &lt; wallpaper_animframes)
                anim_wallpaper += 1/wallpaper_animspeed;
            else
                anim_wallpaper = 0;
        };
        
        //Rolagem
        if(wallpaper_h_scrolling != 0)
            wp_x += wallpaper_h_scrolling;
        if(wallpaper_v_scrolling != 0)    
            wp_y += wallpaper_v_scrolling;
    
        //Clamp horizontal
        if(wp_x &lt; -sprite_get_width(wallpaper))
            wp_x = 0;
        if(wp_x &gt; sprite_get_width(wallpaper))
            wp_x = 0;
            
        //Clamp vertical
        if(wp_y &lt; -sprite_get_height(wallpaper))
            wp_y = 0;
        if(wp_y &gt; sprite_get_height(wallpaper))
            wp_y = 0;
    };
    
    //Esticado
    if(wallpaper_stretched == 1){
    
        if(window_get_fullscreen() == 1)
            draw_sprite_stretched(wallpaper,anim_wallpaper,0,-(display_get_height()-720)/2,display_get_width(),display_get_height());
        else
            draw_sprite_stretched(wallpaper,anim_wallpaper,0,0,1280,720);
    };
    else{
    
        //Tiled
        if(wallpaper_tiled == 1)
            draw_sprite_tiled(wallpaper,anim_wallpaper,wallpaper_h_offset+wp_x,wallpaper_v_offset+wp_y);
        //Normal
        else
            draw_sprite(wallpaper,anim_wallpaper,wallpaper_h_offset+wp_x,wallpaper_v_offset+wp_y);        
    };
};
else
    icon_opc = 0;

//------------- Base -------------

//Barra (Footer)
draw_sprite_ext(spr_launcher_line,theme,29,646,1,1,0,c_white,1);

//Pasta/Informa√ß√µes
draw_sprite_ext(spr_launcher_about,theme,1280/2,664,1,1,0,c_white,parental_fadeicons);

//Total de jogos
if(theme == 0)
    draw_set_colour(c_black);        
if(games_total &gt; 0){

    draw_text_shadow(132,658,string(select_index+1)+" / "+string(games_total));
    draw_text(132,658,string(select_index+1)+" / "+string(games_total));
    draw_set_font(fnt_default);

};

//Comandos de navega√ß√£o
draw_set_font(fnt_small);
var _ctrlinfo_offset;
if(move == 0)
    _ctrlinfo_offset = string_width(text_ctrl[0]);
else
    _ctrlinfo_offset = string_width(text_ctrl[4]);

//Controle
var _txt_gamepad;
if(gamepad_is_connected(0) == 1)
||(gamepad_is_connected(4) == 1){
    
    //GAMEPAD
    draw_sprite_ext(spr_launcher_controller,theme+2,51,663,1,1,0,c_white,1);
    _txt_gamepad = 6;
};
else{
    
    //TECLADO
    draw_sprite_ext(spr_launcher_controller,theme,51,663,1,1,0,c_white,1);
    _txt_gamepad = 0; 
};
    
//informa√ß√µes b√°sicas
if(games_total &gt; 0){
        
    //Offset
    var _txt_start, _txt_move, _spr_move;
    if(move == 1){
        
        _txt_start = 4;
        _txt_move = 3;
        _spr_move = 4;
    };
    else{
        
        _txt_start = 0; 
        _txt_move = 2;
        _spr_move = 2;
    };

    //SHIFT - Mover/ ESC - Cancelar  
    if(parental_control == 0){
                 
        draw_sprite_ext(spr_launcher_ctrlmap,theme+_txt_gamepad+_spr_move,(1222-128-string_width(text_ctrl[_txt_start]))-string_width(text_ctrl[_txt_move]),663,1,1,0,c_white,parental_fadeicons);
        draw_text_shadow((1222-128-string_width(text_ctrl[_txt_start]))-string_width(text_ctrl[_txt_move]),668,text_ctrl[_txt_move]);
        draw_text((1222-128-string_width(text_ctrl[_txt_start]))-string_width(text_ctrl[_txt_move]),668,text_ctrl[_txt_move]);
    };
        
    //ENTER - Iniciar/Confirmar           
    draw_sprite_ext(spr_launcher_ctrlmap,theme+_txt_gamepad,1222-string_width(text_ctrl[_txt_start]),663,1,1,0,c_white,1);
    draw_text_shadow(1222-string_width(text_ctrl[_txt_start]),668,text_ctrl[_txt_start]);
    draw_text(1222-string_width(text_ctrl[_txt_start]),668,text_ctrl[_txt_start]);
};

draw_set_colour(c_white);
draw_set_font(fnt_default);

//------------- Icones -------------

//Deletar
draw_sprite_ext(spr_launcher_icons,theme+icon_opc,322,498-(parental_offset*2),1,1,0,theme_color,parental_fadeicons);
draw_sprite_ext(spr_launcher_icons,2,322,498-(parental_offset*2),1,1,0,c_white,parental_fadeicons);

//Alterar
draw_sprite_ext(spr_launcher_icons,theme+icon_opc,430,498-(parental_offset*2),1,1,0,theme_color,parental_fadeicons);
draw_sprite_ext(spr_launcher_icons,3,430,498-(parental_offset*2),1,1,0,c_white,parental_fadeicons);
    
//Pesquisar
draw_sprite_ext(spr_launcher_icons,theme+icon_opc,538,498-(parental_offset*2),1,1,0,theme_color,parental_fadeicons);
draw_sprite_ext(spr_launcher_icons,4,538,498-(parental_offset*2),1,1,0,c_white,parental_fadeicons);

//Tema
draw_sprite_ext(spr_launcher_icons,theme+icon_opc,646,498-(parental_offset*2),1,1,0,theme_color,parental_fadeicons);
draw_sprite_ext(spr_launcher_icons,5+theme,646,498-(parental_offset*2),1,1,0,c_white,parental_fadeicons);

//Wallpaper
draw_sprite_ext(spr_launcher_icons,theme+icon_opc,754,498-(parental_offset*2),1,1,0,theme_color,parental_fadeicons);
draw_sprite_ext(spr_launcher_icons,7+theme,754,498-(parental_offset*2),1,1,0,c_white,parental_fadeicons);

//Adicionar
draw_sprite_ext(spr_launcher_icons,theme+icon_opc,862,498-(parental_offset*2),1,1,0,theme_color,parental_fadeicons);
draw_sprite_ext(spr_launcher_icons,9+theme,862,498-(parental_offset*2),1,1,0,c_white,parental_fadeicons);

//Aviso para adicionar jogos (caso n√£o tenha nenhum)
if(games_total == 0)
    draw_sprite_ext(spr_launcher_icons,11,862,498-(parental_offset*2),1,1,0,merge_colour(c_yellow,c_orange,col_numb),parental_fadeicons);

//Aviso para atualizar jogos (caso n√£o seja encontrado)
if(move == 0)
&amp;&amp;(games_total &gt; 0)
&amp;&amp;(select_exists == 0)
    draw_sprite_ext(spr_launcher_icons,11,430,498-(parental_offset*2),1,1,0,merge_colour(c_yellow,c_orange,col_numb),parental_fadeicons);

//Seletor de icones
if(icon_select &gt; -1){

    //Highlight
    is_col = merge_colour(c_col_l,c_col_d,col_numb);
    draw_sprite_ext(spr_launcher_icons,11,322+(98+10)*icon_select,498-(parental_offset*2),1,1,0,is_col,1);
    
    //Texto
    draw_set_font(fnt_small);
    draw_set_halign(fa_center);
    draw_text_shadow(322+50+(98+10)*icon_select,498+104-(parental_offset*2),text_icon[icon_select]);
    draw_text_colour(322+50+(98+10)*icon_select,498+104-(parental_offset*2),text_icon[icon_select],is_col,is_col,is_col,is_col,1);
    draw_set_halign(fa_left);
    draw_set_font(fnt_default);
};

//------------- Lista de Jogos -------------

//Fundo preto (Tela de pesquisa)
if(dialog_description == text_icon[2]+":"){

    if(theme == 0)
        draw_set_colour(c_white);
    else
        draw_set_colour(c_black);
    
    draw_set_alpha(0.8);
    draw_rectangle(dialog_filterleft,-3000,dialog_filterright,720+3000,0);
    draw_set_colour(c_white);
    draw_set_alpha(1);
};

//Rolagem (de acordo com offset)
if(select_index &gt; 1)
    offset = 502+(-276*select_index);
else
    offset = 98;

//Rolagem vertical
if(games_total &gt; 0)
&amp;&amp;(move == 0)
&amp;&amp;(games_shortcut[select_index] == 0){

    if(offset_v &lt; 32-6)
        offset_v += 6;
};
else
    offset_v = 0;

//Lista de jogos (Mostrar apenas oque esta na tela)
var i, i_start, i_end;
if(select_index &gt; 1){

    i_start = select_index-2;
    i_end = select_index+3;
};
else{

    i_start = 0;
    i_end = select_index+5;
};
for(i=i_start; i&lt;i_end; i+=1){

    var vv = 0;
    if(select_index == i)
        vv = offset_v;
                
    //Sombra
    draw_sprite(spr_launcher_thumbnail_shadow,theme,offset+(256+20)*i,194+parental_offset-vv);
    
    //Blocos v√°zios
    if(i &gt; games_total-1)
    ||((move == 1)&amp;&amp;(i == move_origin))
        draw_sprite_ext(spr_launcher_thumbnail,theme,offset+(256+20)*i,194+parental_offset-vv,1,1,0,theme_color,1);
    //Thumbnail dos jogos
    else{
    
        if(sprite_exists(games_thumb[i]))
        &amp;&amp;(games_total &gt; 0){
        
            //Anima√ß√£o
            if(games_animframes[i] &gt; 1)
            &amp;&amp;(games_animspeed[i] &gt; 0)
            &amp;&amp;(alarm[10] == -1)
            &amp;&amp;(alarm[11] == -1){
            
                if(anim_games[i] &lt; games_animframes[i])
                    anim_games[i] += 1/games_animspeed[i];
                else
                    anim_games[i] = 0;
            };
            
            //Lista de pesquisa (Transparente)
            if(dialog == 2){
            
                if(select_index == i)
                    draw_set_alpha(1)
                else
                    draw_set_alpha(0.3);
            };
            draw_sprite_stretched(games_thumb[i],anim_games[i],offset+(256+20)*i,194+parental_offset-vv,256,256);
            draw_set_alpha(1);
        };
    };
};

//Seletor de jogos
if(select_index &lt; games_total+1)
&amp;&amp;(games_total &gt; 0){
        
    var _msg, _col1, _col2;
                    
    //Mover
    if(move == 1){
    
        _msg = games_title[move_origin];
        _col1 = c_yellow;
        _col2 = c_orange;    
    };
    else{
    
        //Padr√£o
        if(select_exists == 1){
        
            _msg = games_title[select_index];
            _col1 = c_col_l;
            _col2 = c_col_d;
        };
        //Jogo n√£o encotrado
        else{
     
            _msg = text_notfound;
            _col1 = c_red;
            _col2 = c_maroon;
        };
    };

    //Mostrar thumbnail que esta sendo movida
    var move_offset = 0;
    if(move == 1){
    
        move_offset = 32;
        if(sprite_exists(games_thumb[move_origin])){
        
            draw_set_alpha(col_numb+0.4);
            draw_sprite_stretched(games_thumb[move_origin],0,(offset-0)+276*select_index,194+parental_offset-32,256,256);
            draw_set_alpha(1);
        };
    };
    
    //Seletor
    col = merge_colour(_col1,_col2,col_numb);
    draw_sprite_ext(spr_launcher_selector,0,(offset-10)+276*select_index,184+parental_offset-offset_v-move_offset,1,1,0,col,1);

    //Nome do jogo selecionado
    if(select_index == 0){
    
        //Primeiro da lista
        draw_text_shadow(offset-16,123+parental_offset-offset_v-move_offset,_msg);    
        draw_text_colour(offset-16,123+parental_offset-offset_v-move_offset,_msg,col,col,col,col,1);
    };
    else{
    
        //Todos outros
        draw_set_halign(fa_center);
        draw_text_shadow(offset+(276*select_index)+256/2,123+parental_offset-offset_v-move_offset,_msg);
        draw_text_colour(offset+(276*select_index)+256/2,123+parental_offset-offset_v-move_offset,_msg,col,col,col,col,1);
        draw_set_halign(fa_left);
    };
    
    //Prefixos
    if(move == 0){
    
        //Play Time
        if(games_shortcut[select_index] == 0){
        
            var _pt_offset = 0;
            if(games_playtime[select_index,0] &lt; 1)
            &amp;&amp;(games_playtime[select_index,1] &lt; 1){
            
                var _pt_hour = "--";
                var _pt_min = "--";
            };
            else{
            
                //Offset caso passe de 100 horas
                if(games_playtime[select_index,0] &gt; 99)
                    _pt_offset = 20;
                //Offset caso passe de 1.000 horas
                if(games_playtime[select_index,0] &gt; 999)
                    _pt_offset = 30;
            
                var _pt_hour = string_replace_all(string_format(real(games_playtime[select_index,0]),2,0)," ","0");
                var _pt_min = string_replace_all(string_format(real(games_playtime[select_index,1]),2,0)," ","0");
            };
            
            var _pt_icon = 0;
            
            //Icone de forwarder
            if(games_forwarder[select_index] != "")
                _pt_icon = 0;
            else
                _pt_icon = 1;
            
            draw_set_font(fnt_clock);
            draw_text_shadow((offset+(276*select_index)+(256/2)-18)-_pt_offset,466+parental_offset-offset_v,_pt_hour+":"+_pt_min);
            draw_text_colour((offset+(276*select_index)+(256/2)-18)-_pt_offset,466+parental_offset-offset_v,_pt_hour+":"+_pt_min,col,col,col,col,1);
            draw_set_font(fnt_default);
            draw_sprite_ext(spr_launcher_gameprefix,_pt_icon,(offset+(276*select_index)+(256/2)-48-18)-_pt_offset,466+parental_offset-offset_v,1,1,0,col,1);
        };
        
        //Atalho
        if(games_shortcut[select_index] == 1)
            draw_sprite_ext(spr_launcher_gameprefix,2,(offset+(276*select_index)+(256/2)-126),402+parental_offset-offset_v,1,1,0,col,1);
    };
};

//------------- Menu de Forwarder -------------

//Anima√ß√£o
if(forwarder == 1){

    //Abrir
    if(forwarder_fade &lt; 1)
        forwarder_fade += 0.1;
};
else{

    //Fechar
    if(forwarder_fade &gt; 0){
    
        //Antes de fechar...
        if(forwarder_fade == 0.1){
        
            //Limpar lista anterior
            ds_map_clear(forwarder_list);
            
            //Salvar posi√ß√£o
            if(forwarder_subfolder == ""){
            
                games_subselect[select_index] = forwarder_select;
                ini_open(game_save_id+"collection\game_"+string(select_index)+".ini");
                ini_write_string("NINTY_ENTRY","subselect",string(forwarder_select));
                ini_close();
            };
                        
            //Reiniciar posi√ß√£o e total
            forwarder_select = 0;
            forwarder_subfolder = "";
            forwarder_subfolder_path = "";
            forwarder_total = 0;
            forwarder_listoffset = 0;
            
            //Limpar
            cleanmem();
        };
        forwarder_fade -= 0.1;
    };
    else
        forwarder_fade = 0;
};

//Forwarder
if(forwarder_fade &gt; 0){
    
    //Fundo
    if(theme == 0)
        draw_set_colour(c_white);
    else
        draw_set_colour(c_black);
    draw_set_alpha(forwarder_fade-0.3);
    draw_rectangle(0,-3000,1280,720+3000,0);
    draw_set_colour(c_white);
    draw_sprite_ext(spr_submenu_layout,theme,1280/2,720/2-128+(128*forwarder_fade),1,1,0,theme_color,forwarder_fade);
    draw_sprite_ext(spr_submenu_line,theme,348,109-128+(128*forwarder_fade),1,1,0,c_white,forwarder_fade);
    
    //Miniatura
    if(sprite_exists(games_thumb[select_index]))
        draw_sprite_stretched_ext(games_thumb[select_index],anim_games[select_index],680,400-128+(128*forwarder_fade),256,256,c_white,forwarder_fade/9);
    
    //Titulo
    draw_set_alpha(forwarder_fade);
    draw_set_font(fnt_small);
    if(theme == 0)
        draw_set_color(c_black);
    else
        draw_set_color(c_white);
    draw_set_halign(fa_center);
    draw_text(1280/2,64-128+(128*forwarder_fade)-3,games_title[select_index]+forwarder_subfolder);
    draw_set_halign(fa_left);
    
    //Total
    if(forwarder_total &gt; 0)
        draw_text(350,630-128+(128*forwarder_fade)-3,string(forwarder_select)+" / "+string(forwarder_total-1));
    else{
    
        //Destino n√£o localizado
        draw_text(350,630-128+(128*forwarder_fade)-3,"--/--");
        draw_text(350,125-128+(128*forwarder_fade),text_forwarder[1]);
    };
    
    //Comandos de navega√ß√£o
    
    //GAMEPAD
    if(gamepad_is_connected(0) == 1)
    ||(gamepad_is_connected(4) == 1){

        //B - Fechar
        draw_sprite_ext(spr_launcher_ctrlmap,theme+10,571,622-128+(128*forwarder_fade),1,1,0,c_white,forwarder_fade);
        draw_text(571+10,627-128+(128*forwarder_fade),text_ctrl[1]);
            
        //A - Iniciar
        draw_sprite_ext(spr_launcher_ctrlmap,theme+6,803,622-128+(128*forwarder_fade),1,1,0,c_white,forwarder_fade);
        draw_text(803+10,627-128+(128*forwarder_fade),text_ctrl[0]);
    };
    //TECLADO
    else{

        //ESC - Fechar
        draw_sprite_ext(spr_launcher_ctrlmap,theme+4,571,622-128+(128*forwarder_fade),1,1,0,c_white,forwarder_fade);
        draw_text(571+10,627-128+(128*forwarder_fade),text_ctrl[1]);
            
        //ENTER - Iniciar
        draw_sprite_ext(spr_launcher_ctrlmap,theme,803,622-128+(128*forwarder_fade),1,1,0,c_white,forwarder_fade);
        draw_text(803+10,627-128+(128*forwarder_fade),text_ctrl[0]);
    };
    draw_set_color(c_white);
    
    //Lista de arquivos (16 s√£o apresentados)
    var l;
    var l_end = clamp(forwarder_listoffset,forwarder_listoffset+15,forwarder_total);
    for(l=forwarder_listoffset; l&lt;l_end; l+=1){
    
        //Se n√£o for um arquivo inv√°lido
        if!(is_undefined(ds_map_find_value(forwarder_list,string(l)+"_t"))){
           
            //Seletor
            if(forwarder_select == l){
            
                draw_sprite_ext(spr_submneu_selector,theme+1,350,125+((l*32)-(forwarder_listoffset*32))-128+(128*forwarder_fade),1,1,0,c_white,forwarder_fade);
                draw_sprite_ext(spr_submneu_selector,0,350,125+((l*32)-(forwarder_listoffset*32))-128+(128*forwarder_fade),1,1,0,merge_colour(c_col_l,c_col_d,col_numb),forwarder_fade);
                draw_set_color(merge_colour(c_col_l,c_col_d,col_numb));
                
                //Extens√£o
                if(l &gt; 0){
                
                    //Pasta
                    if(forwarder_subfolder == "")
                    &amp;&amp;(ds_map_find_value(forwarder_list,string(l)+"_e") == "")
                        draw_sprite_ext(spr_settings_icons,0,902,132+((l*32)-(forwarder_listoffset*32))-128+(128*forwarder_fade),1,1,0,merge_colour(c_col_l,c_col_d,col_numb),forwarder_fade);                        
                    else{
                    
                        //Extens√£o normal
                        draw_set_halign(fa_right);
                        draw_text(350+584,125+((l*32)-(forwarder_listoffset*32))-128+(128*forwarder_fade),ds_map_find_value(forwarder_list,string(l)+"_e"));
                    };
                    draw_set_halign(fa_left);
                };
            };
            
            //Cor do tema
            if(theme == 0)
                draw_set_color(c_black);
            else
                draw_set_color(c_white);
                    
            //Iniciar sem jogo
            if(l == 0){
            
                draw_text(350,125+((l*32)-(forwarder_listoffset*32))-128+(128*forwarder_fade),text_forwarder[0]); 
            };
            else{
                
                //Arquivo
                draw_text(350,125+((l*32)-(forwarder_listoffset*32))-128+(128*forwarder_fade),ds_map_find_value(forwarder_list,string(l)+"_t"))     
                draw_set_color(c_white);
            };
        };
    };
    
    
    //Resetar
    draw_set_alpha(1);
    draw_set_color(c_white);
    draw_set_font(fnt_default);
};

//------------- Menu de Configura√ß√µes -------------

//Anima√ß√£o
if(settingsmenu == 1){

    //Abrir
    if(settingsmenu_fade &lt; 1)
        settingsmenu_fade += 0.1;
};
else{

    //Fechar
    if(settingsmenu_fade &gt; 0){
    
        //Antes de fechar...
        if(settingsmenu_fade == 0.1){
        
            //Salvar configura√ß√µes
            event_user(4);
            
            //Limpar
            cleanmem();
        };
        settingsmenu_fade -= 0.1;
    };
    else
        settingsmenu_fade = 0;
};

//Configura√ß√µes
if(settingsmenu_fade &gt; 0){
    
    //Fundo
    if(theme == 0)
        draw_set_colour(c_white);
    else
        draw_set_colour(c_black);
    draw_set_alpha(settingsmenu_fade-0.3);
    draw_rectangle(0,-3000,1280,720+3000,0);
    draw_set_colour(c_white);
    draw_sprite_ext(spr_submenu_layout,theme,1280/2,720/2-128+(128*settingsmenu_fade),1,1,0,theme_color,settingsmenu_fade);
    draw_sprite_ext(spr_submenu_line,theme,348,109-128+(128*settingsmenu_fade),1,1,0,c_white,settingsmenu_fade);
    draw_sprite_ext(spr_submenu_line,theme,348,369-128+(128*settingsmenu_fade),1,1,0,c_white,settingsmenu_fade);    
    draw_sprite_ext(spr_submenu_line,theme,348,462-128+(128*settingsmenu_fade),1,1,0,c_white,settingsmenu_fade);
    
    //Rich Presence
    draw_sprite_ext(spr_settings_rpc,0,348,522-128+(128*settingsmenu_fade),1,1,0,c_white,settingsmenu_fade);
    if(settingsmenu_select == 10)
        draw_sprite_ext(spr_settings_rpcselector,0,348+(152*iconrpc),522-128+(128*settingsmenu_fade),1,1,0,merge_colour(c_col_l,c_col_d,col_numb),settingsmenu_fade);

    //Titulo
    draw_set_alpha(settingsmenu_fade);
    draw_set_font(fnt_small);
    if(theme == 0)
        draw_set_color(c_black);
    else
        draw_set_color(c_white);
    draw_set_halign(fa_center);
    draw_text(1280/2,64-128+(128*settingsmenu_fade)-3,text_settings_title);
    draw_set_halign(fa_left);
    
    //Lista de op√ß√µes
    var sts;
    for(sts=0; sts&lt;10; sts+=1){

        var sts_offset = 0;
        var sts_option = "";
        
        //Cor do tema
        if(theme == 0){
        
            sts_iconcol = c_black;
             draw_set_color(c_black);
        };
        else{
        
            sts_iconcol = c_white;
            draw_set_color(c_white);
        };
        
        if(settingsmenu_select == sts)
            sts_iconcol = merge_colour(c_col_l,c_col_d,col_numb);
                    
        //Idioma
        if(sts == 0)
            sts_option = text_settings_language[language];
        //Renderiza√ß√£o da Interface
        else if(sts == 1)
            sts_option = text_settings_uirender[uirender];
        //Efeitos Sonoros
        else if(sts == 2)
            sts_option = text_settings_onoff[soundeffects];
        //Propor√ß√£o dos jogos
        else if(sts == 3)
            sts_option = text_settings_windowmode[windowmode];
        //Prioridade dos jogos
        else if(sts == 4)
            sts_option = text_settings_gamepriority[gamepriority];
        //Checar atualiza√ß√µes
        else if(sts == 5)
            sts_option = text_settings_onoff[updateninty];
        //Atualizar base de dados
        else if(sts == 6)
            sts_option = text_settings_onoff[updatedatabase];
        //Pasta de Perfil
        else if(sts == 7){
            
            sts_offset = 32;
            draw_sprite_ext(spr_settings_icons,0,902,387-128+(128*settingsmenu_fade),1,1,0,sts_iconcol,settingsmenu_fade);
        };
        //Guia Interativo
        else if(sts == 8){
        
            sts_offset = 32;
            draw_sprite_ext(spr_settings_icons,1,902,418-128+(128*settingsmenu_fade),1,1,0,sts_iconcol,settingsmenu_fade);
        };
        //Discord RPC
        else if(sts == 9){
        
            sts_option = text_settings_onoff[nativerpc]+"      ";
            sts_offset = 60;
            draw_sprite_ext(spr_settings_icons,2,902,479-128+(128*settingsmenu_fade),1,1,0,sts_iconcol,settingsmenu_fade);
        };
        
        var sts_iconcol;
        
        //Seletor
        if(settingsmenu_select == sts){
        
            draw_sprite_ext(spr_submneu_selector,theme+1,350,125+sts_offset+(sts*32)-128+(128*settingsmenu_fade),1,1,0,c_white,settingsmenu_fade);
            draw_sprite_ext(spr_submneu_selector,0,350,125+sts_offset+(sts*32)-128+(128*settingsmenu_fade),1,1,0,merge_colour(c_col_l,c_col_d,col_numb),settingsmenu_fade);
            draw_set_color(merge_colour(c_col_l,c_col_d,col_numb));
        };
        
        //Op√ß√£o
        draw_set_halign(fa_right);
        draw_text(350+584,125+sts_offset+(sts*32)-128+(128*settingsmenu_fade),sts_option);
        
        //Cor do tema
        if(theme == 0)
            draw_set_color(c_black);
        else
            draw_set_color(c_white);
        
        //Fun√ß√£o
        draw_set_halign(fa_left);
        draw_text(350,125+sts_offset+(sts*32)-128+(128*settingsmenu_fade),text_settings[sts]);
    };
    
    //Resetar
    draw_set_alpha(1);
    draw_set_halign(fa_left);
    draw_set_color(c_white);
    draw_set_font(fnt_default);
};

//------------- Informa√ß√£o -------------

//Anima√ß√£o
if(infopopup == 1){

    //Abrir
    if(infopopup_fade &lt; 1)
        infopopup_fade += 0.1;
};
else{

    //Fechar
    if(infopopup_fade &gt; 0)
        infopopup_fade -= 0.1;
    else
        infopopup_fade = 0;
};

//Informa√ß√µes
if(infopopup_fade &gt; 0){
    
    //Fundo
    if(theme == 0)
        draw_set_colour(c_white);
    else
        draw_set_colour(c_black);
    draw_set_alpha(infopopup_fade-0.3);
    draw_rectangle(0,-3000,1280,720+3000,0);
    draw_set_colour(c_white);
    
    //Janela
    draw_sprite_ext(spr_submenu_layout,theme,1280/2,720/2-128+(128*infopopup_fade),1,1,0,theme_color,infopopup_fade);
    draw_sprite_ext(spr_launcher_information,1,1280/2,720/2-128+(128*infopopup_fade),1,1,0,c_white,infopopup_fade);
    draw_set_alpha(1);
    if(theme == 0)
        draw_sprite_ext(spr_launcher_information,0,1280/2,720/2-128+(128*infopopup_fade),1,1,0,c_black,infopopup_fade);
    else
        draw_sprite_ext(spr_launcher_information,0,1280/2,720/2-128+(128*infopopup_fade),1,1,0,c_white,infopopup_fade);
};

//------------- Dialogo -------------


//Fundo
if(dialog_description == text_dialog[0]){

    if(theme == 0)
        draw_set_colour(c_white);
    else
        draw_set_colour(c_black);
    
    draw_set_alpha(0.9);
    draw_rectangle(dialog_filterleft,-3000,dialog_filterright,720+3000,0);
    draw_set_colour(c_white);
    draw_set_alpha(1);
};

//Alterar titulo do jogo
if(dialog != 0){

    var dg_offset;
    if(dialog == 1)
        dg_offset = 0;
    else
        dg_offset = 194;
         
    //Descri√ß√£o
    draw_set_colour(merge_colour(c_col_l,c_col_d,col_numb));
    draw_set_halign(fa_center);
    draw_text(1280/2,(720/2-48)+dg_offset,dialog_description+" ("+string(string_length(dialog_return))+"/32)");
        
    //Texto
    if(theme == 1)
        draw_set_colour(c_white);
    else
        draw_set_colour(c_black);
    draw_text(1280/2,(720/2)+dg_offset,dialog_return+dialog_inputb);
    draw_set_halign(fa_left);
    draw_set_colour(c_white);
};

//Deletando...
if(alarm[10] != -1){

    //Fundo
    if(theme == 0)
        draw_set_colour(c_white);
    else
        draw_set_colour(c_black);
    draw_set_alpha(0.7);
    draw_rectangle(0,-3000,1280,720+3000,0);
    draw_set_alpha(1);
    draw_set_colour(c_white);
    
    //Texto
    draw_set_colour(merge_colour(c_col_l,c_col_d,col_numb));
    draw_set_halign(fa_center);
    draw_text(1280/2,(720/2)-32,text_deleting);
    draw_set_halign(fa_left);
    draw_set_colour(c_white);
};

//------------- Sobrepostos -------------

//Hor√°rio
var _hour;
var _min = string_replace_all(string_format(current_minute,2,0)," ","0");
var _ampm = 0;
draw_set_font(fnt_clock);
if(theme == 0)
    draw_set_colour(c_black);

//H√≥rario em AM/PM   
if(time_12h == 1){

    //AM
    if(current_hour &lt; 12){

        if(current_hour == 0)
            _hour = string(12);
        else
            _hour = string_replace_all(string_format(current_hour,2,0)," ","0");
            
        draw_sprite_ext(spr_launcher_clock_ampm,theme,124+96,38,1,1,0,c_white,1);
    };
    //PM
    else{
    
        _hour = string_replace_all(string_format(current_hour-12,2,0)," ","0");
        draw_sprite_ext(spr_launcher_clock_ampm,theme+2,124+96,38,1,1,0,c_white,1);
    };
};
else
    _hour = string_replace_all(string_format(current_hour,2,0)," ","0");
    
//Hora/Minuto
draw_text_shadow(124,38,_hour+" "+_min);
draw_text(124,38,_hour+" "+_min);
//:
draw_text_shadow(124+38,38,clock_blink);
draw_text(124+38,38,+clock_blink);

draw_set_font(fnt_default);
draw_set_colour(c_white);

//Parental Control
if(parental_control == 1){

    if(parental_fade &gt; 0){
    
        parental_fade -= 0.05;
        draw_sprite_ext(spr_launcher_parental,theme+2,71,35,1,1,0,c_white,parental_fade);
    };
    else
        draw_sprite_ext(spr_launcher_clock,theme,71,35,1,1,0,c_white,1);
    
};
else
    draw_sprite_ext(spr_launcher_parental,theme,71,35,1,1,0,c_white,parental_fade);

//Conex√£o
if(network == 1){

    //Op√ß√µes de Janela
    draw_sprite_ext(spr_launcher_options,theme+2,1075,35,1,1,0,c_white,1);
    
    //Base
    draw_sprite_ext(spr_launcher_connection,theme,1060,36,1,1,0,c_white,1);
       
    //Anima√ß√£o
    if(network_anim &lt; 3)
        network_anim += 0.15;
    else
        network_anim = 0;
               
    draw_sprite_ext(spr_launcher_updating,network_anim,1060,36,1,1,0,c_white,1);    
};
else
    draw_sprite_ext(spr_launcher_options,theme,1075,35,1,1,0,c_white,1);

//Filtro
if!(window_has_focus())
&amp;&amp;!(window_get_fullscreen())
&amp;&amp;(audio_exists(wallpaper_song))
&amp;&amp;!(instance_exists(obj_helptour)){

    draw_set_colour(c_black);
    draw_set_alpha(0.7);
    draw_rectangle(0,0,1280,720,0);
    draw_set_alpha(1);
    draw_set_colour(c_white);
};

//Cursor
draw_sprite_ext(spr_launcher_cursor,0,mouse_x,mouse_y,1,1,0,merge_colour(c_col_l,c_col_d,col_numb),1);
if((mouse_check_button(mb_right))
||(mouse_check_button(mb_middle)))
&amp;&amp;!(window_get_fullscreen()){

    draw_rectangle_colour(0,0,1280,720,merge_colour(c_col_l,c_col_d,col_numb),merge_colour(c_col_d,c_col_l,col_numb),merge_colour(c_col_l,c_col_d,col_numb),merge_colour(c_col_d,c_col_l,col_numb),1);
    draw_rectangle_colour(1,1,1280-1,720-1,merge_colour(c_col_l,c_col_d,col_numb),merge_colour(c_col_d,c_col_l,col_numb),merge_colour(c_col_l,c_col_d,col_numb),merge_colour(c_col_d,c_col_l,col_numb),1);
    draw_rectangle_colour(2,2,1280-2,720-2,merge_colour(c_col_l,c_col_d,col_numb),merge_colour(c_col_d,c_col_l,col_numb),merge_colour(c_col_l,c_col_d,col_numb),merge_colour(c_col_d,c_col_l,col_numb),1);
    draw_rectangle_colour(3,3,1280-3,720-3,merge_colour(c_col_l,c_col_d,col_numb),merge_colour(c_col_d,c_col_l,col_numb),merge_colour(c_col_l,c_col_d,col_numb),merge_colour(c_col_d,c_col_l,col_numb),1);
    draw_rectangle_colour(4,4,1280-4,720-4,merge_colour(c_col_l,c_col_d,col_numb),merge_colour(c_col_d,c_col_l,col_numb),merge_colour(c_col_l,c_col_d,col_numb),merge_colour(c_col_d,c_col_l,col_numb),1);
    draw_rectangle_colour(5,5,1280-5,720-5,merge_colour(c_col_l,c_col_d,col_numb),merge_colour(c_col_d,c_col_l,col_numb),merge_colour(c_col_l,c_col_d,col_numb),merge_colour(c_col_d,c_col_l,col_numb),1);
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Salvar configura√ß√µes do Launcher
ini_open(game_save_id+"config.ini")
ini_write_real("NINTY_CONFIG","netcooldown",netcooldown);
ini_write_real("NINTY_CONFIG","fullscreen",fullscreen);
ini_write_real("NINTY_CONFIG","position",select_index);
ini_write_real("NINTY_CONFIG","parental",parental_control);
ini_write_real("NINTY_CONFIG","helptour",help_tour);
ini_write_real("NINTY_CONFIG","language",language);
ini_write_real("NINTY_CONFIG","uirender",uirender);
ini_write_real("NINTY_CONFIG","soundeffects",soundeffects);
ini_write_real("NINTY_CONFIG","windowmode",windowmode);
ini_write_real("NINTY_CONFIG","gamepriority",gamepriority);
ini_write_real("NINTY_CONFIG","updateninty",updateninty);
ini_write_real("NINTY_CONFIG","updatedatabase",updatedatabase);
ini_write_real("NINTY_CONFIG","nativerpc",nativerpc);
ini_write_real("NINTY_CONFIG","iconrpc",iconrpc);
ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Textos predefinidos (Idioma)

//Lista
text_settings_language[1] = "English";
text_settings_language[2] = "Portugu√™s";
text_settings_language[3] = "Espa√±ol";
text_settings_language[4] = "Fran√ßais";
text_settings_language[5] = "Polski";
text_settings_language[6] = "Italiano";
text_settings_language_total = 6;

//Autom√°tico
var lang = 0;
if(language == 0){

    switch(os_get_language()){
    
        case("en"): lang = 1; break; //ENGLISH [Default]]
        case("pt"): lang = 2; break; //PORTUGUESE (Portugu√™s)
        case("es"): lang = 3; break; //SPANISH (Espa√±ol)
        case("fr"): lang = 4; break; //FRENCH (Fran√ßais)
        case("pl"): lang = 5; break; //POLISH (Polski)
        case("it"): lang = 6; break; //ITALIAN (Italiano)
        default: lang = 1;
    };
};
else
    lang = language;

//ITALIAN (Italiano) =====================================================
if(lang == 6){

//Interface --------------------------------------------------------------
time_12h = 0;
text_deleting = "Cancellando...";
text_moving = "Spostando...";
text_notfound = "[NON TROVATO]";
text_forwarder[0] = "‚Ä¢ Avvia senza gioco";
text_forwarder[1] = "‚Ä¢ Percorso del File non trovato";
text_addforwarder = "Seleziona un File";
text_dialog[0] = "Imposta il nome del Gioco:";
text_ctrl[0] = "Avvia";
text_ctrl[1] = "Chiudi";
text_ctrl[2] = "Muovi";
text_ctrl[3] = "Cancella";
text_ctrl[4] = "Conferma";
text_icon[0] = "Rimuovi Gioco";
text_icon[1] = "Modifica Gioco";
text_icon[2] = "Cerca un Gioco";
text_icon[3] = "Colore del Tema";
text_icon[4] = "Sfondo";
text_icon[5] = "Aggiungi un nuovo Gioco";
text_addgame[0] = "[ Utilizzare come un COLLEGAMENTO? ]: Questa opzione √® utile per applicazioni che non sono giochi, o software che utilizzano launcher propri (come alcuni strumenti) | NOTA: Quando avvii un collegamento tramite Ninty, il tempo di gioco non sar√† registrato e il launcher non verr√† sospeso.";
text_addgame[1] = "[ Utilizzare come un FORWARDER? ]: Questa opzione √® utile per gli emulatori, puoi avviare una o pi√π ROM direttamente da Ninty. | NOTA: Nel passo successivo dovrai selezionare il percorso dove si trovano le ROM.";
text_settings_title = "Impostazioni";
text_settings[0] = "Lingua";
text_settings[1] = "Resa dell'interfaccia";
text_settings[2] = "Effetti sonori";
text_settings[3] = "Finestra di Gioco";
text_settings[4] = "Priorit√† del Gioco";
text_settings[5] = "Controlla aggiornamenti";
text_settings[6] = "Aggiorna database";
text_settings[7] = "Cartella del profilo";
text_settings[8] = "Guida";
text_settings[9] = "Rich Presence Nativa";
text_settings_onoff[0] = "No";
text_settings_onoff[1] = "Si"; 
text_settings_language[0] = "Uguale al Sistema";  
text_settings_uirender[0] = "Compatibile";
text_settings_uirender[1] = "Moderna";
text_settings_windowmode[0] = "Uguale a Ninty";
text_settings_windowmode[1] = "Predefinita";
text_settings_windowmode[2] = "Ingrandita";
text_settings_gamepriority[0] = "Predefinita (Raccomandata)";
text_settings_gamepriority[1] = "Alta";
text_settings_gamepriority[2] = "Bassa";
text_update[0] = "Vai alla pagina del Download";
text_update[1] = "Magari dopo";
text_remove[0] = "S√¨";
text_remove[1] = "No";
text_rpc[0] = "Selezionando un Gioco...";
text_rpc[1] = "Giochi in libreria.";
//Ninny ------------------------------------------------------------------
guide[0] = "Benvenuto su Ninty Launcher!
Il mio nome √® Ninny, e sar√≤ la tua guida.";

guide[1] = "Ninty √® un launcher basato sull'interfaccia 
Switch per avviare i tuoi Giochi.";

guide[2] = "Ma non solo: Ninty supporta vari
tipi di software oltre ai Giochi.";

guide[3] = "Bene, penso che possiamo iniziare.";

guide[4] = "Queste sono le icone funzionali, con esse puoi cambiare
un Gioco, aggiungerne uno nuovo oppure cambiare il tema.";

guide[5] = "Ma stai attento all'icona del cestino, √® pericolosa!
Non vogliamo che tu perda il tuo tempo di gioco...";

guide[6] = "Ma non ti preoccupare, per evitare situazioni 
come questa, esiste un'opzione di blocco.";

guide[7] = "Clicca 3 volte su questa opzione per nascondere tutte le 
funzioni principali, cos√¨ da prevenire lo spostamento di 
Giochi e App.";

guide[8] = "Per far riapparire le funzioni dovrai cliccare
per 3 volte nello stesso posto.";

guide[9] = "Qui puoi accedere alle informazioni del Launcher,
alla versione attuale e alle persone che hanno 
contribuito a svilupparlo.";

guide[10] = "Quest'altro ti far√† accedere alle impostazioni di Ninty.";

guide[11] = "Il men√π comincia qui, questa impostazione ti porta
alla cartella del tuo profilo di Ninty.";

guide[12] = "Ogni utente sul computer ha una cartella come 
questa, e quindi ognuno ha la sua lista di Giochi,
i suoi temi e le sue impostazioni.";

guide[13] = "Se pensi di cambiare account o computer e vuoi che i 
tuoi dati siano al sicuro, fai un backup di questa cartella.";

guide[14] = "Con questa impostazione, Ninty cercher√† e 
scaricher√† sempre il database dei Giochi pi√π recente ogni
volta che lo avvierai.";

guide[15] = "Un'animazione apparira ogni volta che il Launcher
sta scaricando qualcosa dal database.";

guide[16] = "Se abiliti questa impostazione, ti avviser√≤
ogni volta che c'√® una nuova versione di Ninty!";

guide[17] = "Questa impostazione stabilisce la priorit√† dei Giochi.";

guide[18] = "Non ti consiglio di cambiare questo poich√© potrebbe avere 
un impatto immediato sulla performance del tuo computer a 
seconda del Gioco che hai avviato... SUL SERIO!";

guide[19] = "Con questa impostazione puoi cambiare la dimensione 
della finestra di Gioco dopo averlo avviato, ma non 
funziona con tutti i Giochi.";

guide[20] = "Alcuni ti forzeranno a giocare in modalit√† finestra, 
qualcosa che a seconda delle tue preferenze pu√≤ risultare 
non piacevole...";

guide[21] = "Con questa impostazione puoi disattivare tutti gli effetti 
sonori del Launcher, eccetto i temi contenenti musica.";

guide[22] = "Con questa impostazione puoi scegliere il metodo di resa 
dell'interfaccia, ed √® estremamente importante poich√© alcuni 
computer possono presentare bug grafici.";

guide[23] = "La modalit√† 'Compatibile' pu√≤ risolvere gran parte di
questi problemi, ed √® l'opzione predefinita";

guide[24] = "Ma ti consiglio di utilizzare la modalit√† 'Moderna', 
essa ti offre grafica e performance migliorate.";

guide[25] = "E infine, questa impostazione ti permette di 
cambiare la lingua del Launcher.";

guide[26] = "Ma non ti preoccupare, so parlare molte lingue!";

guide[27] = "Se vuoi accedere alla guida di nuovo puoi selezionare 
questa opzione e sar√≤ sempre con te ad aiutarti!";

guide[28] = "Oh! Quasi dimenticavo...";

guide[29] = "Se usi Discord, questo √® il posto migliore per te.
Ninty ti mostra lo stato della tua libreria nel tuo
profilo quando stai giocando!";

guide[30] = "Ci sono svariati temi per te, divertiti!";
 
guide[31] = "Un nuovo aggiornamento √® disponibile: "+vnew+"
la tua versione corrente √®: "+vold;

guide[32] = "Nessun problema!
Te lo ricorder√≤ pi√π tardi.";

guide[33] = "Vuoi davvero rimuovere questo 
gioco dalla tua libreria?";
};
//POLISH (Polski) ========================================================
else if(lang == 5){
 
//Interface --------------------------------------------------------------
time_12h = 0;
text_deleting = "Usuwanie...";
text_moving = "Przesuwanie...";
text_notfound = "[NIE ZNALEZIONO]";
text_forwarder[0] = "‚Ä¢ Rozpocznij bez gry";
text_forwarder[1] = "‚Ä¢ Nie znaleziono ≈ìcie≈ºki pliku.";
text_addforwarder = "Wybierz jakikolwiek plik";
text_dialog[0] = "Ustaw nazwƒô gry:";
text_ctrl[0] = "Rozpocznij";
text_ctrl[1] = "Zamknij";
text_ctrl[2] = "Przesu≈Ñ";
text_ctrl[3] = "Anuluj";
text_ctrl[4] = "Potwierd≈∏";
text_icon[0] = "Usu≈Ñ grƒô";
text_icon[1] = "Zmodyfikuj grƒô";
text_icon[2] = "Szukaj gry";
text_icon[3] = "Kolor Motywu";
text_icon[4] = "Tapeta";
text_icon[5] = "Dodaj grƒô";
text_addgame[0] = "[ U≈ºyƒájako SKR√ìT? ]: Ta opcja jest po≈ºyteczna dla aplikacji kt√≥re nie sƒÖ grami, lub program√≥w kt√≥re u≈ºywajƒÖ w≈Çasnych launcher√≥w (jak przybory) | UWAGA: Kiedy w≈ÇƒÖczasz skr√≥t przez Ninty, czas gry nie bƒôdzie licznony i launcher zostanie wstrzymany.";
text_addgame[1] = "[ U≈ºyƒájako TRYB WYSY¬£AJ¬•CY? ]: Ta opcja jest po≈ºyteczna dla emulator√≥w, mo≈ºesz w≈ÇƒÖczyƒájeden lub wiƒôcej ROM√≥w bezpo≈ìrednio z Ninty. | UWAGA: W nastƒôpnym kroku musisz wybraƒáfolder docelowy w kt√≥rym znajdujƒÖ siƒô ROMy.";
text_settings_title = "Ustawienia";
text_settings[0] = "Jƒôzyk";
text_settings[1] = "Renderowanie Interfejsu";
text_settings[2] = "Efekty Dzwiƒôkowe";
text_settings[3] = "Okno Gry";
text_settings[4] = "Pierwsze≈Ñstwo gry";
text_settings[5] = "Sprawdzanie Aktualizacji";
text_settings[6] = "Baza Danych Aktualizacji";
text_settings[7] = "Folder Profilu";
text_settings[8] = "Poradnik";
text_settings[9] = "Rich Presence";
text_settings_onoff[0] = "Wy≈ÇƒÖczone";
text_settings_onoff[1] = "W≈ÇƒÖczone"; 
text_settings_language[0] = "Jak system";  
text_settings_uirender[0] = "Kompatibilne";
text_settings_uirender[1] = "Nowoczesne";
text_settings_windowmode[0] = "Takie Same jak Ninty";
text_settings_windowmode[1] = "Domy≈ìlne";
text_settings_windowmode[2] = "Zmaksymalizowane";
text_settings_gamepriority[0] = "Normalne (Rekomendowane)";
text_settings_gamepriority[1] = "Du≈ºe";
text_settings_gamepriority[2] = "Ma≈Çe";
text_update[0] = "Przejd≈∏ do strony pobierania";
text_update[1] = "Mo≈ºe p√≥≈ºniej";
text_remove[0] = "Tak";
text_remove[1] = "Nie";
text_rpc[0] = "Wybieranie gry...";
text_rpc[1] = "Gry w bibliotece.";
//Ninny ------------------------------------------------------------------
guide[0] = "Witaj w Ninty Launcher!
Nazywam siƒô Ninny, i bƒôde twoim przewodnikiem.";

guide[1] = "Ninty to launcher bazowany na interfejsu Nintendo 
Switch'a aby w≈ÇƒÖczaƒáswoje gry.";

guide[2] = "Lecz nie tylko to: Ninty obs≈Çuguje r√≥≈ºne
typy program√≥w opr√≥cz gier.";

guide[3] = "Dobrze, my≈ìlƒô ≈ºe mo≈ºemy zaczƒÖ√¶.";

guide[4] = "To sƒÖ ikony funkcji. Z nimi mo≈ºesz zmieni√¶
grƒô, dodaƒáinnƒÖ lub zmieniƒámotyw launchera.";

guide[5] = "Ale bƒÖd≈∏ ostro≈ºny z ikonƒÖ kosza na ≈ìmieci, jest niebezpieczna!
Nie chcemy, aby≈ì straci≈Ç sw√≥j czas gry...";

guide[6] = "Lecz siƒô nie martw. Aby zapobiec takim sytuacjom, 
mamy funkcje zablokowania funkcji interfejsu.";

guide[7] = "Kliknij trzy razy na ikonƒô k≈Ç√≥dki aby ukryƒáwszystkie g≈Ç√≥wne 
funkcje, zapobiegajƒÖƒáusuwania lub przesuwania gier.";

guide[8] = "Aby te funkcje siƒô znowu pojawi≈Çy, musisz
kliknƒÖƒáte same miejsce trzy razy.";

guide[9] = "Tutaj mo≈ºesz zobaczyƒáinformacje o launcherze,
aktualnƒÖ wersjƒô oraz ludzi, kt√≥rzy
przyczynili siƒô do produkcji Ninty.";

guide[10] = "Ten przycisk pokazuje ci opcje Ninty.";

guide[11] = "Menu zaczyna siƒô tutaj. Ta opcja prowadzi ciƒô
do folderu twojego profilu Ninty.";

guide[12] = "Ka≈ºda osoba na komputerze ma taki
folder, wiƒôƒáka≈ºdy ma innƒÖ listƒô gier,
motywy i ustawienia.";

guide[13] = "Je≈ìli planujesz zmieniƒáswoje konto lub komputer i
chcesz zachowaƒáwszystkie rekordy, utw√≥rz kopiƒô 
zapasowƒÖ tego folderu.";

guide[14] = "Z tƒÖ opcjƒÖ, Ninty zawsze bƒôdzie sprawdzaƒái
pobieraƒánajnowszƒÖ baze danych gier za ka≈ºdym 
razem kiedy w≈ÇƒÖczasz Ninty.";

guide[15] = "Pojawi siƒô animacja kiedy launcher
pobiera co≈ì z bazy danych.";

guide[16] = "Je≈ìli w≈ÇƒÖczysz tƒÖ opcje, powiadomie ciƒô za 
ka≈ºdym razem kiedy jest nowa wersja Ninty!";

guide[17] = "Ta opcja zmienia pierwsze≈Ñstwo procesu gry.";

guide[18] = "Nie polecam ci tego zmienia√¶, bo mo≈ºe mieƒánatychmiastowy 
wp≈Çyw na wydajno≈ìƒákomputera w zale≈ºno≈ìci gry co zosta≈Ça 
w≈ÇƒÖczona... NAPRAWD√ä!";

guide[19] = "Ta opcja zmienia wielko≈ìƒáokna gry po jej w≈ÇƒÖczeniu, 
ale ta opcja nie dzia≈Ça ze wszystkimi grami.";

guide[20] ="Niekt√≥re ciƒô zmuszƒÖ do grania w trybie okna, co≈ì
niezbyt dobrego w zale≈ºno≈ìci twoich preferencji...";

guide[21] = "Z tym ustawieniem mo≈ºesz wy≈ÇƒÖczyƒáwszystkie efekty
dzwiƒôkowe launchera, opr√≥cz motyw√≥w zawierajƒÖcych muzykƒô.";

guide[22] = "Ta opcja zmienia metodƒô renderowania interfejsu
i ona jest bardzo wa≈ºna bo niekt√≥re komputery mogƒÖ
pokazywaƒáb≈Çƒôdy graficzne.";

guide[23] = "Tryb 'Kompatibilny' mo≈ºe rozwiƒÖzaƒádu≈ºƒÖ ilo≈ìƒátych
problem√≥w, to domy≈ìlne ustawienie.";

guide[24] = "Lecz polecam ci u≈ºywaƒátryb 'Nowoczesny', ten tryb 
daje lepsze efekty wizualne oraz lepszƒÖ wydajno≈ì√¶.";

guide[25] = "I wreszczie, ta opcja mo≈ºe zmieniƒájƒôzyk launchera.";

guide[26] = "Lecz siƒô nie martw, umiem m√≥wiƒáwieloma jƒôzykami!";

guide[27] = "Je≈ìli chcesz ponownie uzyskaƒádostƒôp do przewodnika 
mo≈ºesz wybraƒátƒÖ opcje. Zawsze tutaj bƒôdƒô ci pom√≥c!";

guide[28] = "O tak! I nie mogƒô zapomnie√¶...";

guide[29] = "Jesli u≈ºywasz Discord'a, to dla ciebie najlepsze miejsce.
Ninty pokazuje status twojej biblioteki gry w twoim
profilu kiedy grasz!";

guide[30] = "SƒÖ dla ciebie r√≥≈ºne motywy, baw siƒô dobrze!";
 
guide[31] = "Nowa aktualizacja jest dostƒôpna:  "+vnew+"
twoja wersja to: "+vold;

guide[32] = "Nie ma problemu!
Przypomnƒô ci p√≥≈∏niej.";

guide[33] = "Czy na pewno chcesz usunƒÖƒá 
tƒô grƒô ze swojej biblioteki?";
};
//FRENCH (Fran√ßais) ======================================================
else if(lang == 4){
 
//Interface --------------------------------------------------------------
time_12h = 0;
text_deleting = "Suppression...";
text_moving = "D√©placement...";
text_notfound = "[PAS TROUV√â]";
text_forwarder[0] = "‚Ä¢ Lancer sans jeu";
text_forwarder[1] = "‚Ä¢ Fichier non trouv√©.";
text_addforwarder = "S√©lectionnez n'importe quel fichier";
text_dialog[0] = "D√©finir le titre du jeu:";
text_ctrl[0] = "Lancer";
text_ctrl[1] = "Fermer";
text_ctrl[2] = "D√©placer";
text_ctrl[3] = "Annuler";
text_ctrl[4] = "Confirmer";
text_icon[0] = "Retirer le jeu";
text_icon[1] = "Modifier le jeu";
text_icon[2] = "Rechercher un jeu";
text_icon[3] = "Couleur du th√®me";
text_icon[4] = "Changer de th√®me";
text_icon[5] = "Ajouter un nouveau jeu";
text_addgame[0] = "[ Utiliser comme un RACCOURCI? ] : Cette option est utile pour les applications qui ne sont pas des jeux ou des outils | NOTE : lorsque vous lancez un raccourci via Ninty, le temps de jeu ne sera pas enregistr√© et le lanceur ne sera pas suspendu.";
text_addgame[1] = "[Utiliser comme EXP√âDITEUR? ]: Cette option est utile pour les √©mulateurs, vous pouvez ex√©cuter une ou plusieurs ROM directement √† partir de Ninty. | REMARQUE: √† l'√©tape suivante, vous devez choisir le dossier de destination dans lequel se trouvent les ROM.";
text_settings_title = "Param√®tres";
text_settings[0] = "Langue";
text_settings[1] = "Rendu d'interface";
text_settings[2] = "Effets sonores";
text_settings[3] = "Fen√™tre de jeu";
text_settings[4] = "Priorit√© du jeu";
text_settings[5] = "Mise √† jour";
text_settings[6] = "Mise √† jour de la base de donn√©es";
text_settings[7] = "Dossier du profil";
text_settings[8] = "Guide";
text_settings[9] = "Activer Rich Presence";
text_settings_onoff[0] = "Off";
text_settings_onoff[1] = "On"; 
text_settings_language[0] = "Identique au syst√®me";  
text_settings_uirender[0] = "Compatible";
text_settings_uirender[1] = "Moderne";
text_settings_windowmode[0] = "Identique √† Ninty";
text_settings_windowmode[1] = "Par d√©faut";
text_settings_windowmode[2] = "Maximum";
text_settings_gamepriority[0] = "Normal (Recommand√©)";
text_settings_gamepriority[1] = "Faible";
text_settings_gamepriority[2] = "Elev√©";
text_update[0] = "Aller √† la page de t√©l√©chargement";
text_update[1] = "Plus tard";
text_remove[0] = "Oui";
text_remove[1] = "Non";
text_rpc[0] = "S√©lection d'un jeu...";
text_rpc[1] = "Jeux dans la biblioth√®que.";
//Ninny ------------------------------------------------------------------
guide[0] = "Bienvenue sur Ninty Launcher!
Je m'appelle Ninny et je serai votre guide";

guide[1] = "Ninty est un lanceur de jeu bas√© sur l‚Äôinterface
de la Nintendo Switch pour lancer vos jeux.";

guide[2] = "Mais pas seulement cela: Ninty est compatible 
avec divers types de logiciels en plus des jeux";

guide[3] = "Eh bien, je pense que nous pouvons commencer.";

guide[4] = "Ce sont des fonctions vous permettant de modifier, ajouter 
un jeu, ou de modifier le th√®me du lanceur de jeu.";

guide[5] = "Mais attention √† l‚Äôic√¥ne de la corbeille, c'est dangereux! 
Nous ne voulons pas que vous perdiez le temps de jeu de 
votre jeu..";

guide[6] = "Mais ne vous inqui√©tez pas, pour √©viter que cela arrive, il y 
a une option de verrouillage de l'interface.";

guide[7] = "Cliquez 3 fois sur cette option pour masquer les boutons 
principales, De cette fa√ßon,vous ne pourrez pas d√©placer ou 
supprimer les jeux et les applications accidentellement.";

guide[8] = "Pour afficher √† nouveau ces fonctions, vous devrez 
cliquer au m√™me endroit 3 fois.";

guide[9] = "Ici vous pouvez acc√©der aux informations du lanceur de jeu, 
ainsi que la version actuelle et les personnes qui ont contribu√© 
√† son d√©veloppement.";

guide[10] = "Et ici l‚Äôacc√®s aux param√®tres de Ninty.";

guide[11] = "Le menu commence ici, ce r√©glage vous m√®ne au dossier 
de votre profil sur Ninty.";

guide[12] = "Chaque utilisateur a son propre profil, donc tout le monde 
a ses propres jeux, liste, th√®mes et param√®tres.";

guide[13] = "Si vous envisagez de changer de compte ou d'ordinateur, 
faites une sauvegarde de ce dossier si vous souhaitez 
garder votre profil.";

guide[14] = "Avec ce r√©glage, Ninty v√©rifiera toujours et t√©l√©chargera 
√† chaque fois la base de donn√©es de jeux la plus r√©cente.";

guide[15] = "Cette animation appara√Ætra √† chaque fois que le lanceur 
de jeu t√©l√©charge quelque chose sur la base de donn√©es.";

guide[16] = "Si vous activez ce param√®tre, je vous alerterai √† chaque 
fois qu'il y a une nouvelle version de Ninty!";

guide[17] = "Ce param√®tre d√©finit la priorit√© du processus du jeu.";

guide[18] = "Je ne vous recommande pas de changer cela car il peut y 
avoir un impact imm√©diat sur les performances de votre 
ordinateur en fonction du jeu que vous avez commenc√©... 
POUR DE VRAI!";

guide[19] = "Ce param√®tre vous permet de d√©finir la taille de la fen√™tre 
du jeu mais cela ne fonctionne pas avec tous les jeux.";

guide[20] = "Certains vont vous forcer √† jouer en mode fen√™tr√©, 
quelque chose de pas tr√®s bon selon vos pr√©f√©rences.";

guide[21] = "Avec ce r√©glage, vous pouvez d√©sactiver tous les 
sons dulanceur de jeu. √Ä l'exception des th√®mes 
contenant de la musique.";

guide[22] = "Ce param√®tre vous permet de d√©finir la m√©thode de 
rendu d'interface, et c‚Äôest extr√™mement important 
puisque certains ordinateurs peuvent montrer des 
bugs graphiques.";

guide[23] = "Le mode 'Compatible' peut r√©soudre une bonne 
partie de ces probl√®mes, c'est le r√©glage standard.";

guide[24] = "Mais je vous recommande d'utiliser le mode 
'Moderne', il offre de meilleurs effets visuels 
et une meilleure performance";

guide[25] = "Et enfin, ce param√®tre peut changer 
la langue du lanceur de jeu.";

guide[26] = "Mais ne vous inqui√©tez pas, je parle beaucoup de langues!";

guide[27] = "Si vous souhaitez acc√©der √† nouveau au guide, vous pouvez 
s√©lectionner cette option. Je serai toujours l√† pour vous aider!";

guide[28] = "Oh! J‚Äôai failli oublier...";

guide[29] = "Si vous utilisez Discord, c'est le meilleur endroit pour 
vous. Ninty indique l‚Äô√©tat de votre biblioth√®que de jeux 
dans votre profil lorsque vous jouez!";

guide[30] = "Il y a plusieurs th√®mes pour vous, profitez-en!";
 
guide[31] = "Une nouvelle mise √† jour est disponible:  "+vnew+"
votre version actuelle est: "+vold;

guide[32] = "Pas de probl√®me! 
Je vous en rappellerais un peu plus tard.";

guide[33] = "Voulez-vous vraiment supprimer 
ce jeu de votre biblioth√®que?";
};
//SPANISH (Espa√±ol) ======================================================
else if(lang == 3){

//Interface --------------------------------------------------------------
time_12h = 0;
text_deleting = "Eliminando...";
text_moving = "Moviendo...";
text_notfound = "[NO SE ENCONTR√ì]";
text_forwarder[0] = "‚Ä¢ Empezar sin juego";
text_forwarder[1] = "‚Ä¢ No se han encontrado la carpeta de destino.";
text_addforwarder = "Seleccione cualquier archivo";
text_dialog[0] = "Establecer el t√≠tulo del juego:";
text_ctrl[0] = "Empezar";
text_ctrl[1] = "Cerrar";
text_ctrl[2] = "Mover";
text_ctrl[3] = "Cancelar";
text_ctrl[4] = "Confirmar";
text_icon[0] = "Remover Juego";
text_icon[1] = "Cambiar Juego";
text_icon[2] = "Buscar un Juego";
text_icon[3] = "Color de Tema";
text_icon[4] = "Fondo de Pantalla";
text_icon[5] = "Agregar Nuevo Juego";
text_addgame[0] = "[ ¬øUtilizar como ATAJO? ]: Esta opci√≥n es √∫til para aplicaciones que no son juegos, o softwares que utilizan lanzadores propietarios (como herramientas) | NOTA: Cuando inicias un atajo a trav√©s de Ninty, el tiempo del juego no se registrar√° y el lanzador no se suspender√°.";
text_addgame[1] = "[ ¬øUtilizar como FORWARDER? ]: Esta opci√≥n es √∫til para los emuladores, Puede ejecutar una o m√°s ROM directamente de Ninty. | NOTA: En el siguiente paso, debe elegir la carpeta de destino donde se encuentran las ROM.";
text_settings_title = "Ajustes";
text_settings[0] = "Idioma";
text_settings[1] = "Renderizaci√≥n de la interfaz";
text_settings[2] = "Efectos de sonido";
text_settings[3] = "Ventana de los juegos";
text_settings[4] = "Prioridad de los juegos";
text_settings[5] = "Buscar actualizaciones";
text_settings[6] = "Actualizar base de datos";
text_settings[7] = "Carpeta de perfil";
text_settings[8] = "Guia";
text_settings[9] = "Rich Presence nativa";
text_settings_onoff[0] = "Apagada";
text_settings_onoff[1] = "Ligada";
text_settings_language[0] = "El mismo del sistema";  
text_settings_uirender[0] = "Compatible";
text_settings_uirender[1] = "Moderno";
text_settings_windowmode[0] = "El mismo de Ninty";
text_settings_windowmode[1] = "Est√°ndar";
text_settings_windowmode[2] = "Maximizada";
text_settings_gamepriority[0] = "Normal (Recomendado)";
text_settings_gamepriority[1] = "Alta";
text_settings_gamepriority[2] = "Baja";
text_update[0] = "Ir a la p√°gina de descarga";
text_update[1] = "Quizas mas tarde";
text_remove[0] = "S√≠";
text_remove[1] = "No";
text_rpc[0] = "Seleccionando un Juego...";
text_rpc[1] = "Juegos en la Biblioteca";
//Ninny ------------------------------------------------------------------
guide[0] = "¬°Bienvenido a Ninty Launcher!
Mi nombre es Ninny, y ser√© tu gu√≠a.";

guide[1] = "Ninty es un 'Launcher' basado en la
interfaz de Nintendo Switch para iniciar tus juegos.";

guide[2] = "No s√≥lo eso: Ninty soporta varios
tipos de software adem√°s de juegos.";

guide[3] = "Pues vale, creo que podemos empezar.";

guide[4] = "Estos son los √≠conos de funci√≥n, con ellos puedes 
modificar un juego, agregar uno nuevo o cambiar el tema del Launcher.";

guide[5] = "Pero cuidado con el √≠cono de el cesto de basura, ¬°es peligroso!
No queremos que pierdas tus tiempos de juego...";

guide[6] = "Pero no te preocupes, para evitar situaciones como esta, 
tenemos el bot√≥n de bloqueo de la interfaz.";

guide[7] = "Haz clic 3 veces en esta opci√≥n para esconder todas las 
funciones principales, as√≠ se evita mover o eliminar juegos.";

guide[8] = "Para volver a mostrar estas opciones tendr√°s 
que hacer clic 3 veces de nuevo.";

guide[9] = "Aqu√≠ puedes acceder a la informaci√≥n del Launcher,
al igual que la versi√≥n del mismo y las personas que
contribuyeron a su desarrollo.";

guide[10] = "Este otro da acceso a las opciones de Ninty.";

guide[11] = "El men√∫ empieza aqu√≠, esta opci√≥n te lleva a tu
carpeta de perfil de Ninty.";

guide[12] = "Cada usuario en esta computadora tiene su propia carpeta 
al igual que esta, por lo cual todos tienen su propia lista
de juegos, temas y opciones.";

guide[13] = "Si planeas cambiar de cuenta o computador y quieres mantener
tus r√©cords, haz una copia de seguridad de esta carpeta.";

guide[14] = "Con esta opci√≥n, Ninty siempre revisar√° y descargar√° 
la base de datos de juegos m√°s reciente cada vez 
que inicies el Launcher.";

guide[15] = "Una animaci√≥n aparecer√° cada vez que Launcher est√© 
descargando algo de la base de datos.";

guide[16] = "Si habilitas esta opci√≥n, ¬°te avisar√© cada vez
que haya una nueva versi√≥n de Ninty!";

guide[17] = "Esta opci√≥n cambia la prioridad del proceso del juego.";

guide[18] = "No recomiendo cambiar esto ya que puede tener un impacto
inmediato en el rendimiento de tu computador dependiendo en el
juego que hayas iniciado... ¬°DE VERAS!";

guide[19] = "Esta opci√≥n te permite ajustar el tama√±o de ventana del juego 
despu√©s de iniciado, pero no funciona con todos los juegos.";

guide[20] = "Algunos te forzar√°n a jugar en modo ventana, algo
no muy bueno dependiendo en tus preferencias...";

guide[21] = "Esta opci√≥n apaga todos los efectos de sonido del Launcher,
excepto la m√∫sica de los temas (si aplica).";

guide[22] = "Esta opci√≥n te permite cambiar el modo de renderizado, y es 
extremadamente importante ya que algunas computadoras muestran 
errores gr√°ficos.";

guide[23] = "El modo 'compatible' resuelve la mayor√≠a de 
los problemas, y es la opci√≥n por defecto";

guide[24] = "Pero recomiendo el modo 'moderno', 
porque ofrece mejores efectos visuales y mejor rendimiento.";

guide[25] = "Y para finalizar, esta opci√≥n cambia el lenguaje del Launcher.";

guide[26] = "No te preocupes, ¬°puedo hablar varios lenguajes!";

guide[27] = "Si quieres acceder a la gu√≠a otra vez, selecciona esta opci√≥n. 
¬°Siempre estar√© aqu√≠ para ayudarte!";

guide[28] = "¬°Oh! Por poco se me olvida...";

guide[29] = "Si usas Discord, te tengo buenas noticias.
¬°Ninty muestra el estado de tu librer√≠a de 
juegos en tu perfil mientras juegas!";

guide[30] = "¬°He aqu√≠ varios temas para ti, disfruta!";
 
guide[31] = "Nueva actualizaci√≥n disponible:  "+vnew+"
tu versi√≥n actual es: "+vold;

guide[32] = "¬°Vale!
Te recordar√© m√°s tarde.";

guide[33] = "¬øRealmente quieres eliminar
este juego de tu biblioteca?";
};
//PORTUGUESE (Portugu√™s) =================================================
else if(lang == 2){

//Interface --------------------------------------------------------------
time_12h = 0;
text_deleting = "Deletando...";
text_moving = "Movendo...";
text_notfound = "[N√ÉO LOCALIZADO]";
text_forwarder[0] = "‚Ä¢ Iniciar sem jogo";
text_forwarder[1] = "‚Ä¢ Pasta de destino n√£o encontrada.";
text_addforwarder = "Selecione qualquer arquivo";
text_dialog[0] = "Defina o t√≠tulo do jogo:";
text_ctrl[0] = "Iniciar";
text_ctrl[1] = "Fechar";
text_ctrl[2] = "Mover";
text_ctrl[3] = "Cancelar";
text_ctrl[4] = "Confirmar";
text_icon[0] = "Remover Jogo";
text_icon[1] = "Modificar Jogo";
text_icon[2] = "Procurar por um Jogo";
text_icon[3] = "Cor de Tema";
text_icon[4] = "Alterar o Plano de Fundo";
text_icon[5] = "Adicionar um Novo Jogo";
text_addgame[0] = "[ Usar como ATALHO? ]: Essa op√ß√£o √© √∫til para aplicativos que n√£o s√£o jogos, ou softwares que usam launchers propriet√°rios (como ferramentas) | OBS.: Ao iniciar um atalho pelo Ninty o tempo de jogo n√£o sera registrado e o launcher n√£o sera suspenso.";
text_addgame[1] = "[ Usar como FORWARDER? ]: Essa op√ß√£o √© √∫til para emuladores, voc√™ pode iniciar uma ou v√°rias ROMs direto do Ninty. | OBS.: Na pr√≥xima etapa, voc√™ deve escolher a pasta de destino em que as ROMs est√£o localizadas.";
text_settings_title = "Configura√ß√µes";
text_settings[0] = "Idioma";
text_settings[1] = "Renderiza√ß√£o da interface";
text_settings[2] = "Efeitos sonoros";
text_settings[3] = "Janela dos jogos";
text_settings[4] = "Prioridade dos jogos";
text_settings[5] = "Checar atualiza√ß√µes";
text_settings[6] = "Atualizar base de dados";
text_settings[7] = "Pasta de perfil";
text_settings[8] = "Guia";
text_settings[9] = "Rich Presence nativo";
text_settings_onoff[0] = "Desligado";
text_settings_onoff[1] = "Ligado";
text_settings_language[0] = "O mesmo que o sistema";  
text_settings_uirender[0] = "Compat√≠vel";
text_settings_uirender[1] = "Moderna";
text_settings_windowmode[0] = "Mesma do Ninty";
text_settings_windowmode[1] = "Padr√£o";
text_settings_windowmode[2] = "M√°ximizado";
text_settings_gamepriority[0] = "Normal (Recomendado)";
text_settings_gamepriority[1] = "Alta";
text_settings_gamepriority[2] = "Baixa";
text_update[0] = "Ir at√© a p√°gina de download";
text_update[1] = "Talvez depois";
text_remove[0] = "Sim";
text_remove[1] = "N√£o";
text_rpc[0] = "Selecionando um Jogo...";
text_rpc[1] = "Jogos na Biblioteca.";
//Ninny ------------------------------------------------------------------
guide[0] = "Bem-vindo ao Ninty Launcher!
Meu nome √© Ninny, eu irei ser sua guia.";
 
guide[1] = "Ninty √© um launcher baseado na interface do 
Nintendo Switch para voc√™ iniciar seus jogos";
 
guide[2] = "Mas n√£o s√≥ isso: Ninty suporta v√°rios outros
tipos de softwares al√©m de jogos.";
 
guide[3] = "Sendo assim, acho que podemos come√ßar.";
 
guide[4] = "Estes s√£os os √≠cones de fun√ß√µes, com eles voc√™
pode alterar um jogo, adicionar novos e tamb√©m
alterar o tema do launcher.";
 
guide[5] = "S√≥ tome cuidado com o √≠cone de lixeira, ele √© 
perigoso! N√£o queremos que voc√™ perca seu 
registro de tempo nos jogos...";
 
guide[6] = "Mas n√£o se preocupe, para evitarmos situa√ß√µes como 
essa temos a fun√ß√£o de bloqueio da interface.";

guide[7] = "Clique 3 vezes nessa op√ß√£o e todas fun√ß√µes de
altera√ß√£o ser√£o ocultadas, isso tamb√©m impede que 
os jogos sejam  movidos.";
 
guide[8] = "Para desbloquear a interface novamente voc√™ s√≥ 
precisa clicar no mesmo local 3 vezes.";
 
guide[9] = "Aqui voc√™ pode acessar as informa√ß√µes do Launcher,
assim como a vers√£o atual e as pessoas que contribuiram
para o desenvolvimento dele.";
 
guide[10] = "Essa outra op√ß√£o lhe da acesso as configura√ß√µes do Ninty.";
 
guide[11] = "O menu come√ßa por aqui, essa op√ß√£o te leva para 
a pasta do seu perfil no Ninty.";
 
guide[12] = "Cada usu√°rio no computador tem sua pr√≥pria pasta de
perfil como essa, sendo assim cada um deles tem sua 
pr√≥pria lista de jogos, temas e configura√ß√µes";
 
guide[13] = "Se voc√™ tiver planos de mudar de conta ou at√© mesmo
de computador e quiser levar junto todos seus registros,
fa√ßa um backup dessa pasta.";
 
guide[14] = "Com essa op√ß√£o o Ninty sempre vai checar e baixar a base de
dados de jogos compat√≠veis mais recente ao incializa-lo.";
 
guide[15] = "Uma anima√ß√£o vai aparecer sempre que o launcher 
estiver baixando algo da base de dados de jogos.";
 
guide[16] = "Se voc√™ ativar essa op√ß√£o, eu sempre vou te avisar 
quando houver uma nova vers√£o do Ninty!";
 
guide[17] = "Essa op√ß√£o determina a prioridade do processo dos jogos.";
 
guide[18] = "Eu n√£o recomendo voc√™ alterar isso pois pode ter 
impacto imediato no desempenho do seu computador
dependendo do jogo iniciado... √â SERIO!";
 
guide[19] = "Com essa op√ß√£o voc√™ pode definir o tamanho da 
janela dos jogos ao inicia-los, mas n√£o funciona com
todos os jogos.";
 
guide[20] = "Alguns v√£o te obrigar a jogar em modo janela, algo
n√£o muito bom dependendo da sua prefer√™ncia...";
 
guide[21] = "Com essa op√ß√£o voc√™ pode desativar todos efeitos sonoros
do launcher, com exce√ß√£o de temas que incluam m√∫sicas.";
 
guide[22] = "Essa op√ß√£o define o m√©todo de renderiza√ß√£o da interface, 
√© extremamente importante pois alguns computadores podem 
ter problemas como bugs gr√°ficos.";
 
guide[23] = "O modo 'compat√≠vel' pode resolver grande parte desses 
problemas, essa √© a op√ß√£o que vem por padr√£o.";
 
guide[24] = "Mas eu aconselho voc√™ a utilizar o modo 'moderno', 
pois oferece melhores efeitos visuais e um melhor 
desempenho.";
 
guide[25] = "E por fim, com essa op√ß√£o voc√™ pode alterar o
idioma do launcher.";
 
guide[26] = "Mas n√£o se preocupe, eu sei falar v√°rios idiomas!";
 
guide[27] = "Caso voc√™ queira acessar o guia novamente voc√™ pode
selecionar essa op√ß√£o, sempre estarei aqui para te
ajudar!";
 
guide[28] = "Ah! n√£o poderia me esquecer...";
 
guide[29] = "Caso voc√™ use Discord essa op√ß√£o √© ideal para voc√™.
Ela permite colocar os jogos da sua biblioteca Ninty
no seu status de perfil enquanto voc√™ joga!";
 
guide[30] = "H√° v√°rios temas para voc√™ utilizar, aproveite.";
 
guide[31] = "Uma nova atualiza√ß√£o esta dispon√≠vel:  "+vnew+"
a sua atual vers√£o √©: "+vold;

guide[32] = "Sem problemas!
Irei te relembrar mais tarde.";

guide[33] = "Voc√™ realmente quer remover 
este jogo da sua biblioteca?";
};
//ENGLISH [Default] ======================================================
else{

//Interface --------------------------------------------------------------
if(lang == 1)
    time_12h = 1;
else 
    time_12h = 0;

text_deleting = "Deleting...";
text_moving = "Moving...";
text_notfound = "[NOT FOUND]";
text_forwarder[0] = "‚Ä¢ Start without game";
text_forwarder[1] = "‚Ä¢ File path not found.";
text_addforwarder = "Select any File";
text_dialog[0] = "Set game title:";
text_ctrl[0] = "Start";
text_ctrl[1] = "Close";
text_ctrl[2] = "Move";
text_ctrl[3] = "Cancel";
text_ctrl[4] = "Confirm";
text_icon[0] = "Remove Game";
text_icon[1] = "Modify Game";
text_icon[2] = "Search for a Game";
text_icon[3] = "Theme Color";
text_icon[4] = "Wallpaper";
text_icon[5] = "Add a New Game";
text_addgame[0] = "[ Use as a SHORTCUT? ]: This option is useful for applications that are not games, or softwares that use proprietary launchers (such as tools) | NOTE: When you start a shortcut through Ninty, the game time will not be recorded and the launcher will not be suspended.";
text_addgame[1] = "[ Use as a FORWARDER? ]: This option is useful for emulators, you can run one or more ROMs directly from Ninty. | NOTE: In the next step you must choose the destination folder that ROMs are located.";
text_settings_title = "Settings";
text_settings[0] = "Language";
text_settings[1] = "Interface rendering";
text_settings[2] = "Sound effects";
text_settings[3] = "Game window";
text_settings[4] = "Game priority";
text_settings[5] = "Check for updates";
text_settings[6] = "Update database";
text_settings[7] = "Profile folder";
text_settings[8] = "Guide";
text_settings[9] = "Native Rich Presence";
text_settings_onoff[0] = "Off";
text_settings_onoff[1] = "On"; 
text_settings_language[0] = "Same as the system";  
text_settings_uirender[0] = "Compatible";
text_settings_uirender[1] = "Modern";
text_settings_windowmode[0] = "Same as Ninty";
text_settings_windowmode[1] = "Default";
text_settings_windowmode[2] = "Maximized";
text_settings_gamepriority[0] = "Normal (Recommended)";
text_settings_gamepriority[1] = "High";
text_settings_gamepriority[2] = "Low";
text_update[0] = "Go to download page";
text_update[1] = "Maybe later";
text_remove[0] = "Yes";
text_remove[1] = "No";
text_rpc[0] = "Selecting a Game...";
text_rpc[1] = "Games in Library.";
//Ninny ------------------------------------------------------------------
guide[0] = "Welcome to Ninty Launcher!
My name is Ninny, and I'll be your guide.";

guide[1] = "Ninty is a launcher based on Nintendo Switch's
interface to start your games.";

guide[2] = "But not only that: Ninty supports various
types of softwares besides games.";

guide[3] = "Well then, I think we can start.";

guide[4] = "These are the function icons, with them you can change 
a game, add a new one or change the launcher's theme.";

guide[5] = "But be careful with the trash can icon, it's dangerous!
We don't want you losing your game's playtime...";

guide[6] = "But don't worry, to avoid situations like this, 
we have the interface's lock function.";

guide[7] = "Click 3 times in this option to hide all main functions,
that way preventing moving games and apps.";

guide[8] = "To unhide these functions again you will need to
click the same place 3 times.";

guide[9] = "Here you can access the Launcher's informations,
as well as the current version and the people who
contributed to its development.";

guide[10] = "This other one gives access to Ninty's settings.";

guide[11] = "The menu starts here, this setting leads you to the
folder of your profile on Ninty.";

guide[12] = "Every user on the computer has its own profile
folder like this, thus everyone has its own games
list, themes and settings.";

guide[13] = "If you're planning to change your account or computer 
and want to have all records, do a backup of this folder.";

guide[14] = "With this setting, Ninty will always check and
download the most recent game database every time 
you start it.";

guide[15] = "An animation will appear whenever the Launcher is 
downloading something of the database.";

guide[16] = "If you enable this setting, I'll alert you 
everytime when there's a new version of Ninty!";

guide[17] = "This setting settles the game's process priority.";

guide[18] = "I don't recommend you to change this since it can have an
immediate impact on your computer's performance depending
of the game you started... FOR REAL!";

guide[19] = "This setting you can set the size of the game window 
after start it, but it doesn't work with all games.";

guide[20] = "Some will force you to play in windowed mode, something
not very good depending on your preference...";

guide[21] = "With this setting you can turn off all Launcher's sound
effects, except of themes containing music.";

guide[22] = "This setting you set the interface render method, 
and it's extremely important since some computers can 
show some graphical bugs.";

guide[23] = "The 'compatible' mode can solve good portion of these 
problems, this is the standard setting";

guide[24] = "But I do recommend you to use the 'modern' mode, 
it offers better visual effects and a better performance.";

guide[25] = "And finally, this setting can change the launcher's language.";

guide[26] = "But don't worry, I can speak a lot of languages!";

guide[27] = "If you want to access the guide again you can select this 
option I'll be always here to help you!";

guide[28] = "Oh! And I cannot forget...";

guide[29] = "If you use Discord, this is the best place to you.
Ninty shows a status of your game library in your
profile when you're playing!";

guide[30] = "There's various themes for you, enjoy!";
 
guide[31] = "A new update is available:  "+vnew+"
your current version is: "+vold;

guide[32] = "No problem!
I'll remember you later.";

guide[33] = "Do you really want to remove 
this game from your library?";
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Descarregar assets (RAM)

//Deletar Wallpaper
if(sprite_exists(wallpaper))
    sprite_delete(wallpaper);

//Lista
var i;
for(i=0; i&lt;games_total; i+=1){
    
    //Deketar thumbnail
    if(sprite_exists(games_thumb[i]))
        sprite_delete(games_thumb[i]);
};

//Descarregar m√∫sica
audio_stop_sound(wallpaper_song);
audio_destroy_stream(wallpaper_song);

//Limpar
cleanmem();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Carregar assets (Jogos, Thumbnails e Wallpaper)

// WALLPAPER ----------------------------------------------

if(launched == 0){

    //Configura√ß√£o do Wallpaper
    ini_open(game_save_id+"wallpaper.ini");
    theme = real(ini_read_string("NINTY_WALLPAPER","theme","1"));
    wallpaper_opaquebuttons = real(ini_read_string("NINTY_WALLPAPER","opaquebuttons","0"));
    wallpaper_tiled = real(ini_read_string("NINTY_WALLPAPER","tiled","1"));
    wallpaper_stretched = real(ini_read_string("NINTY_WALLPAPER","stretched","0"));
    wallpaper_smooth = real(ini_read_string("NINTY_WALLPAPER","smooth","1"));
    wallpaper_huecolor = real(ini_read_string("NINTY_WALLPAPER","huecolor","0"));
    wallpaper_huecursor = real(ini_read_string("NINTY_WALLPAPER","cursor_hue","0"));
    wallpaper_sat1cursor = real(ini_read_string("NINTY_WALLPAPER","cursor_saturationA","255"));
    wallpaper_sat2cursor = real(ini_read_string("NINTY_WALLPAPER","cursor_saturationB","255"));
    wallpaper_lum1cursor = real(ini_read_string("NINTY_WALLPAPER","cursor_luminosityA","255"));
    wallpaper_lum2cursor = real(ini_read_string("NINTY_WALLPAPER","cursor_luminosityB","64"));
    wallpaper_h_offset = real(ini_read_string("NINTY_WALLPAPER","horizontal_offset","0"));
    wallpaper_v_offset = real(ini_read_string("NINTY_WALLPAPER","vertical_offset","0"));
    wallpaper_h_scrolling = real(ini_read_string("NINTY_WALLPAPER","horizontal_scrolling","0"));
    wallpaper_v_scrolling = real(ini_read_string("NINTY_WALLPAPER","vertical_scrolling","0"));
    wallpaper_animframes = real(ini_read_string("NINTY_WALLPAPER","animframes","1"));
    wallpaper_animspeed = real(ini_read_string("NINTY_WALLPAPER","animspeed","0"));
    ini_close();
    
    //M√∫sica (primeiro carregamento)
    wallpaper_song = audio_create_stream(global.assets_dir+"dummy.aud");
};

//Wallpaper
if(file_exists_fmns(game_save_id+"wallpaper.png"))
    wallpaper = sprite_add(game_save_id+"wallpaper.png",wallpaper_animframes,0,0,0,0);
else
    wallpaper = noone;

//M√∫sica
instance_create(0,0,obj_musicplayer);
            
//Animador (Wallpaper)
anim_wallpaper = 0;

// JOGOS ----------------------------------------------

//Buscar total de jogos
if(launched == 0){

    games_total = 0;
    ini_open(game_save_id+"collection\_total.ini");
    games_total = real(ini_read_string("NINTY_ENTRY","total","0"));
    ini_close();
};

//Lista
var i;
for(i=0; i&lt;games_total+1; i+=1){

    //Dados
    if(launched == 0){
    
        ini_open(game_save_id+"collection\game_"+string(i)+".ini");
        games_title[i] = ini_read_string("NINTY_ENTRY","title","???");
        games_path[i] = ini_read_string("NINTY_ENTRY","path","");
        games_forwarder[i] = ini_read_string("NINTY_ENTRY","forwarder","");
        games_subselect[i] = real(ini_read_string("NINTY_ENTRY","subselect","1"));
        games_shortcut[i] = real(ini_read_string("NINTY_ENTRY","shortcut","0"));
        games_animframes[i] = real(ini_read_string("NINTY_ENTRY","animframes","1"));
        games_animspeed[i] = real(ini_read_string("NINTY_ENTRY","animspeed","0"));
        games_playtime[i,0] = real(base64_decode(ini_read_string("NINTY_ENTRY","0","0")));
        games_playtime[i,1] = real(base64_decode(ini_read_string("NINTY_ENTRY","1","0")));
        ini_close();
    };
    
    //Importar thumbnail
    if(file_exists_fmns(game_save_id+"collection\game_"+string(i)+".png"))
        games_thumb[i] = sprite_add(game_save_id+"collection\game_"+string(i)+".png",games_animframes[i],0,1,0,0);
    else
        games_thumb[i] = sprite_add(global.assets_dir+"default.tbn",0,0,0,0,0);
        
    //Animador
    anim_games[i] = 0;
};

//Checar arquivo selecionado
if(games_total &gt;= select_index){

    if(file_exists_fmns(games_path[select_index]))
        select_exists = 1;
    else
        select_exists = 0;
};
else
    select_exists = 0;

//Limpar
cleanmem();
    
//Pr√≥xima vez que carregar, apenas o b√°sico
if(launched == 0)
    launched = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Discord RPC padr√£o

//Emojis do RPC
if(iconrpc &lt; 2){

    emoji_lib = "üîç | ";
    emoji_games = "‚≠ê | ";
    emoji_playing = "üéÆ | ";
    emoji_forward = "‚≠ê | ";
};
else{

    emoji_lib = "";
    emoji_games = "";
    emoji_playing = "";
    emoji_forward = "";
};

if(nativerpc == 1)
    discord_update_presence(emoji_lib+text_rpc[0],emoji_games+string(games_total)+" "+text_rpc[1],"rpc_"+string(iconrpc),"");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Salvar

//Salvar configura√ß√µes do launcher
event_user(4);

//Salvar configura√ß√£o do Wallpaper
if!(file_exists_fmns(game_save_id+"wallpaper.ini")){

    ini_open(game_save_id+"wallpaper.ini")
    ini_write_string("NINTY_WALLPAPER","theme",string(theme));
    ini_write_string("NINTY_WALLPAPER","opaquebuttons",string(wallpaper_opaquebuttons));
    ini_write_string("NINTY_WALLPAPER","tiled",string(wallpaper_tiled));
    ini_write_string("NINTY_WALLPAPER","stretched",string(wallpaper_stretched));
    ini_write_string("NINTY_WALLPAPER","smooth",string(wallpaper_smooth));
    ini_write_string("NINTY_WALLPAPER","huecolor",string(wallpaper_huecolor));
    ini_write_string("NINTY_WALLPAPER","cursor_hue",string(wallpaper_huecursor));
    ini_write_string("NINTY_WALLPAPER","cursor_saturationA",string(wallpaper_sat1cursor));
    ini_write_string("NINTY_WALLPAPER","cursor_saturationB",string(wallpaper_sat2cursor));
    ini_write_string("NINTY_WALLPAPER","cursor_luminosityA",string(wallpaper_lum1cursor));
    ini_write_string("NINTY_WALLPAPER","cursor_luminosityB",string(wallpaper_lum2cursor));    
    ini_write_string("NINTY_WALLPAPER","horizontal_offset",string(wallpaper_h_offset));
    ini_write_string("NINTY_WALLPAPER","vertical_offset",string(wallpaper_v_offset));
    ini_write_string("NINTY_WALLPAPER","horizontal_scrolling",string(wallpaper_h_scrolling));
    ini_write_string("NINTY_WALLPAPER","vertical_scrolling",string(wallpaper_v_scrolling));
    ini_write_string("NINTY_WALLPAPER","animframes",string(wallpaper_animframes));
    ini_write_string("NINTY_WALLPAPER","animspeed",string(wallpaper_animspeed));
    ini_close();
};

//Deletar .BAT
file_delete_fmns(game_save_id+"\gameboot.bat");

//Descarregar assets
event_user(2);

//Descarregar DLLs
cleanmem_init(1);
if(nativerpc == 1){

    discord_free_app();
    discord_free_dll();
};

audio_group_unload(sound_effects);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Carregar defini√ß√µes
gml_release_mode(1);

global.assets_dir = working_directory;
launched = 0;

//Vers√£o
version = 188;
version_new = 0; //&lt; Essa √© apenas para compara√ß√£o
version_url = "https://";

//Vers√µes em texto para Ninny
vold = "0.0.0";
vnew = "0.0.0";

//Procurar URL
ini_open(game_save_id+"network\database.ini");
default_dburl = ini_read_string("NINTY_TITLE_MASTER","url","https://raw.githubusercontent.com/MarioSilvaGH/Ninty-Launcher/master/assets/thumbnails/");
ini_close();

//Async
async_thumbnail = -1;
async_database = 0;
network = 0;
audio_group_load(sound_effects);

//Clean Memory
cleanmem_init(0);

//Centralizar janela
alarm[3] = 2;

//Configura√ß√µes do Launcher
ini_open(game_save_id+"config.ini");
netcooldown = ini_read_real("NINTY_CONFIG","netcooldown",0);
fullscreen = ini_read_real("NINTY_CONFIG","fullscreen",0);
select_index = ini_read_real("NINTY_CONFIG","position",0);
parental_control = ini_read_real("NINTY_CONFIG","parental",0);
help_tour = ini_read_real("NINTY_CONFIG","helptour",0);
language = ini_read_real("NINTY_CONFIG","language",0);
uirender = ini_read_real("NINTY_CONFIG","uirender",0);
soundeffects = ini_read_real("NINTY_CONFIG","soundeffects",1);
windowmode = ini_read_real("NINTY_CONFIG","windowmode",0);
gamepriority = ini_read_real("NINTY_CONFIG","gamepriority",0);
updateninty = ini_read_real("NINTY_CONFIG","updateninty",1);
updatedatabase = ini_read_real("NINTY_CONFIG","updatedatabase",1);
nativerpc = ini_read_real("NINTY_CONFIG","nativerpc",1);
iconrpc = ini_read_real("NINTY_CONFIG","iconrpc",0);
ini_close();

//Idioma
event_user(3);

//Display
event_user(6);

//Definir fullscreen
alarm[4] = 6;

//Volume dos SFXs
audio_group_set_gain(sound_effects,soundeffects,0);

//Carregar assets
event_user(1);

//Impedir seletor de come√ßar fora da lista
if(select_index &gt; games_total-1){

    if(games_total == 0)
        select_index = 0
    else
        select_index = games_total-1;
};

//Rich Presence
if(nativerpc == 1){

    discord_init_dll();
    discord_init_app("518643988778057729");
    discord_update_presence("","","","");
    
    //Atualizar RPC
    event_user(0);
};

//Checar se existem thumbnails (update autom√°tico)
if(os_is_network_connected())
&amp;&amp;(updatedatabase == 1)
&amp;&amp;(netcooldown == 0){
        
    //Baixar
    async_database = http_get_file(default_dburl+"0.ini",game_save_id+"network\database.ini");
    
    //Sinalizar que est√° baixando...
    network = 1;
};
else
    async_database = noone;
    
//Checar se existem atualiza√ß√µes do launcher
if(os_is_network_connected())
&amp;&amp;(updateninty == 1)
&amp;&amp;(netcooldown == 0){
        
    //Baixar
    async_update = http_get_file("https://raw.githubusercontent.com/MarioSilvaGH/Ninty-Launcher/master/assets/updatelog.ini",game_save_id+"network\updatelog.ini");
    
    //Sinalizar que est√° baixando...
    network = 1;
};
else{
    async_update = noone;
    alarm[5] = 15;
};

//N√£o fazer spam de pedidos (Checar updates a cada 3 vezes que iniciar)
if(netcooldown &lt; 2)
    netcooldown++;
else
    netcooldown = 0;

//Guia
if(help_tour == 0){

    help_tour = 1;
    with(instance_create(0,0,obj_helptour))
        event_user(2);
};

//SFX
if(soundeffects == 1)
    audio_play_sfx(snd_launcher_open);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Renderiza√ß√£o: 1
if(uirender == 1){
    event_user(5);
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Renderiza√ß√£o: 0
if(uirender == 0){
    event_user(5);
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
